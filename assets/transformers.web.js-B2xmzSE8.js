var e=Object.defineProperty,t=(t,n,r)=>((t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r)(t,"symbol"!=typeof n?n+"":n,r);const n=new Map,r=[],s=async e=>{const t=n.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(y){return n||(t.error=`${y}`,t.aborted=!0),t.error}finally{delete t.initPromise}}};let i="warning";const a={wasm:{},webgl:{},webgpu:{},versions:{common:"1.22.0-dev.20250409-89f8206ba4"},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);i=e}},get logLevel(){return i}};Object.defineProperty(a,"logLevel",{enumerable:!0});const o=a,l=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:r}=t,s=t.norm??{mean:255,bias:0};let i,a;i="number"==typeof s.mean?[s.mean,s.mean,s.mean,s.mean]:[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],a="number"==typeof s.bias?[s.bias,s.bias,s.bias,s.bias]:[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];const o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=n*r,d="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u);let c=4,h=0,m=1,f=2,_=3,g=0,w=u,b=2*u,y=-1;"RGB"===o&&(c=3,h=0,m=1,f=2,_=-1),"RGBA"===l?y=3*u:"RBG"===l?(g=0,b=u,w=2*u):"BGR"===l&&(b=0,w=u,g=2*u);for(let p=0;p<u;p++,h+=c,f+=c,m+=c,_+=c)d[g++]=(e[h]+a[0])/i[0],d[w++]=(e[m]+a[1])/i[1],d[b++]=(e[f]+a[2])/i[2],-1!==y&&-1!==_&&(d[y++]=(e[_]+a[3])/i[3]);return new p("float32",d,"RGBA"===l?[1,4,n,r]:[1,3,n,r])},u=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),d=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let c=!1;let p=class{constructor(e,t,n){let r,s;if((()=>{if(!c){c=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n=globalThis.Float16Array,r=void 0!==n&&n.from;e&&(u.set("int64",BigInt64Array),d.set(BigInt64Array,"int64")),t&&(u.set("uint64",BigUint64Array),d.set(BigUint64Array,"uint64")),r?(u.set("float16",n),d.set(n,"float16")):u.set("float16",Uint16Array)}})(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{const t=u.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if("string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=u.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)i=t;else if(t instanceof Uint8ClampedArray){if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");i=Uint8Array.from(t)}else{if(!("float16"===e&&t instanceof Uint16Array&&n!==Uint16Array))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{const t=d.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=i,this.dataLocation="cpu"}const i=(e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t})(s);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=i}static async fromImage(e,t){return(async(e,t)=>{const n="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,s="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,i="string"==typeof e;let a,o=t??{};const u=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=e=>"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(n){const n=u();n.width=e.width,n.height=e.height;const r=d(n);if(null==r)throw new Error("Can not access image data");{let n=e.height,s=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,s=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=n,o.width=s}else o.tensorFormat="RGBA",o.height=n,o.width=s;r.drawImage(e,0,0),a=r.getImageData(0,0,s,n).data}}else{if(!r){if(s){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const n=u();n.width=e.width,n.height=e.height;const r=d(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),a=r.getImageData(0,0,n,t).data,o.height=t,o.width=n,l(a,o)}throw new Error("Can not access image data")}if(i)return new Promise((t,n)=>{const r=u(),s=d(r);if(!e||!s)return n();const i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,s.drawImage(i,0,0,r.width,r.height);const e=s.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(l(e.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=n,o.width=r,void 0!==t){const t=u();t.width=r,t.height=n;const s=d(t);if(null==s)throw new Error("Can not access image data");s.putImageData(e,0,0),a=s.getImageData(0,0,r,n).data}else a=e.data}}if(void 0!==a)return l(a,o);throw new Error("Input data provided is not supported - aborted tensor creation")})(e,t)}static fromTexture(e,t){return((e,t)=>{const{width:n,height:r,download:s,dispose:i}=t;return new p({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:i})})(e,t)}static fromGpuBuffer(e,t){return((e,t)=>{const{dataType:n,dims:r,download:s,dispose:i}=t;return new p({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:i})})(e,t)}static fromMLTensor(e,t){return((e,t)=>{const{dataType:n,dims:r,download:s,dispose:i}=t;return new p({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:i})})(e,t)}static fromPinnedBuffer(e,t,n){return((e,t,n)=>new p({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]}))(e,t,n)}toDataURL(e){return((e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let s,i;void 0!==(null==t?void 0:t.tensorLayout)&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[3]):(s=e.dims[3],i=e.dims[2]);const a=void 0!==(null==t?void 0:t.format)?t.format:"RGB",o=null==t?void 0:t.norm;let l,u;void 0===o||void 0===o.mean?l=[255,255,255,255]:"number"==typeof o.mean?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],void 0!==o.mean[3]&&(l[3]=o.mean[3])),void 0===o||void 0===o.bias?u=[0,0,0,0]:"number"==typeof o.bias?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],void 0!==o.bias[3]&&(u[3]=o.bias[3]));const d=i*s;let c=0,p=d,h=2*d,m=-1;"RGBA"===a?(c=0,p=d,h=2*d,m=3*d):"RGB"===a?(c=0,p=d,h=2*d):"RBG"===a&&(c=0,h=d,p=2*d);for(let t=0;t<i;t++)for(let n=0;n<s;n++){const s=(e.data[c++]-u[0])*l[0],i=(e.data[p++]-u[1])*l[1],a=(e.data[h++]-u[2])*l[2],o=-1===m?255:(e.data[m++]-u[3])*l[3];r.fillStyle="rgba("+s+","+i+","+a+","+o+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")})(this,e)}toImageData(e){return((e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let s,i,a;void 0!==(null==t?void 0:t.tensorLayout)&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[1],a=e.dims[3]):(s=e.dims[3],i=e.dims[2],a=e.dims[1]);const o=void 0!==t&&void 0!==t.format?t.format:"RGB",l=null==t?void 0:t.norm;let u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));const c=i*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let h=0,m=1,f=2,_=3,g=0,w=c,b=2*c,y=-1;"RGBA"===o?(g=0,w=c,b=2*c,y=3*c):"RGB"===o?(g=0,w=c,b=2*c):"RBG"===o&&(g=0,b=c,w=2*c),r=n.createImageData(s,i);for(let t=0;t<i*s;h+=p,m+=p,f+=p,_+=p,t++)r.data[h]=(e.data[g++]-d[0])*u[0],r.data[m]=(e.data[w++]-d[1])*u[1],r.data[f]=(e.data[b++]-d[2])*u[2],r.data[_]=-1===y?255:(e.data[y++]-d[3])*u[3]}return r})(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return((e,t)=>{switch(e.location){case"cpu":return new p(e.type,e.data,t);case"cpu-pinned":return new p({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new p({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new p({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new p({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}})(this,e)}};const h=p,m=(e,t)=>{void 0===a.trace?a.wasm.trace:a.trace},f=(e,t)=>{var n;const r=(null==(n=(new Error).stack)?void 0:n.split(/\r\n|\r|\n/g))||[];let s=!1;for(let i=0;i<r.length;i++){if(s&&!r[i].includes("TRACE_FUNC")){let n=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;return t&&(n+=`::${t}`),void m()}r[i].includes("TRACE_FUNC")&&(s=!0)}},_=e=>{(void 0===a.trace?a.wasm.trace:a.trace)&&f("BEGIN",e)},g=e=>{(void 0===a.trace?a.wasm.trace:a.trace)&&f("END",e)};const w=class e{constructor(e){this.handler=e}async run(e,t,n){_();const r={};let s={};if("object"!=typeof e||null===e||e instanceof h||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof h)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const a=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==a.indexOf(n)){const s=t[n];(null===s||s instanceof h)&&(e=!0,i=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else s=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const l of this.inputNames)if(void 0===e[l])throw new Error(`input '${l}' is missing in 'feeds'.`);if(i)for(const l of this.outputNames)r[l]=null;const a=await this.handler.run(e,r,s),o={};for(const l in a)if(Object.hasOwnProperty.call(a,l)){const e=a[l];o[l]=e instanceof h?e:new h(e.type,e.data,e.dims)}return g(),o}async release(){return this.handler.dispose()}static async create(t,n,i,a){let o;_();let l={};if("string"==typeof t){if(o=t,"object"==typeof n&&null!==n)l=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(o=t,"object"==typeof n&&null!==n)l=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const e=t;let r=0,s=t.byteLength;if("object"==typeof n&&null!==n)l=n;else if("number"==typeof n){if(r=n,!Number.isSafeInteger(r))throw new RangeError("'byteOffset' must be an integer.");if(r<0||r>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(s=t.byteLength-r,"number"==typeof i){if(s=i,!Number.isSafeInteger(s))throw new RangeError("'byteLength' must be an integer.");if(s<=0||r+s>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-r}].`);if("object"==typeof a&&null!==a)l=a;else if(void 0!==a)throw new TypeError("'options' must be an object.")}else if(void 0!==i)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==n)throw new TypeError("'options' must be an object.");o=new Uint8Array(e,r,s)}}const[u,d]=await(async e=>{const t=e.executionProviders||[],n=t.map(e=>"string"==typeof e?e:e.name),i=0===n.length?r:n;let a;const o=[],l=new Set;for(const r of i){const e=await s(r);"string"==typeof e?o.push({name:r,err:e}):(a||(a=e),a===e&&l.add(r))}if(!a)throw new Error(`no available backend found. ERR: ${o.map(e=>`[${e.name}] ${e.err}`).join(", ")}`);for(const{name:r,err:s}of o)n.includes(r);const u=t.filter(e=>l.has("string"==typeof e?e:e.name));return[a,new Proxy(e,{get:(e,t)=>"executionProviders"===t?u:Reflect.get(e,t)})]})(l),c=await u.createInferenceSessionHandler(o,d);return g(),new e(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}},b=Object.freeze(Object.defineProperty({__proto__:null,InferenceSession:w,TRACE:m,TRACE_FUNC_BEGIN:_,TRACE_FUNC_END:g,Tensor:h,env:o,registerBackend:(e,t,s)=>{if(t&&"function"==typeof t.init&&"function"==typeof t.createInferenceSessionHandler){const i=n.get(e);if(void 0===i)n.set(e,{backend:t,priority:s});else{if(i.priority>s)return;if(i.priority===s&&i.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${s}`)}if(s>=0){const t=r.indexOf(e);-1!==t&&r.splice(t,1);for(let i=0;i<r.length;i++)if(n.get(r[i]).priority<=s)return void r.splice(i,0,e);r.push(e)}return}throw new TypeError("not a valid backend")}},Symbol.toStringTag,{value:"Module"}));
/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var y,v,x,M,k,T,$,S,C,E,P,A,I,z,F,O,L,B,D,N,j,R,V,G,q,U,W,H,K,Q,X,J,Y=Object.defineProperty,Z=Object.getOwnPropertyDescriptor,ee=Object.getOwnPropertyNames,te=Object.prototype.hasOwnProperty,ne=(y=function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')},typeof require<"u"?require:typeof Proxy<"u"?new Proxy(y,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):y),re=(e,t)=>()=>(e&&(t=e(e=0)),t),se=(e,t)=>{for(var n in t)Y(e,n,{get:t[n],enumerable:!0})},ie=e=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of ee(t))!te.call(e,s)&&s!==n&&Y(e,s,{get:()=>t[s],enumerable:!(r=Z(t,s))||r.enumerable});return e})(Y({},"__esModule",{value:!0}),e),ae=re(()=>{v=new Map,x=[],M=(e,t,n)=>{if(t&&"function"==typeof t.init&&"function"==typeof t.createInferenceSessionHandler){let r=v.get(e);if(void 0===r)v.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=x.indexOf(e);-1!==t&&x.splice(t,1);for(let r=0;r<x.length;r++)if(v.get(x[r]).priority<=n)return void x.splice(r,0,e);x.push(e)}return}throw new TypeError("not a valid backend")},k=async e=>{let t=v.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(n){return r||(t.error=`${n}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},T=async e=>{let t,n=e.executionProviders||[],r=n.map(e=>"string"==typeof e?e:e.name),s=0===r.length?x:r,i=[],a=new Set;for(let l of s){let e=await k(l);"string"==typeof e?i.push({name:l,err:e}):(t||(t=e),t===e&&a.add(l))}if(!t)throw new Error(`no available backend found. ERR: ${i.map(e=>`[${e.name}] ${e.err}`).join(", ")}`);for(let{name:l,err:u}of i)r.includes(l);let o=n.filter(e=>a.has("string"==typeof e?e:e.name));return[t,new Proxy(e,{get:(e,t)=>"executionProviders"===t?o:Reflect.get(e,t)})]}}),oe=re(()=>{ae()}),le=re(()=>{$="1.22.0-dev.20250409-89f8206ba4"}),ue=re(()=>{le(),S="warning",C={wasm:{},webgl:{},webgpu:{},versions:{common:$},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);S=e}},get logLevel(){return S}},Object.defineProperty(C,"logLevel",{enumerable:!0})}),de=re(()=>{ue(),E=C}),ce=re(()=>{P=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let s,i;void 0!==(null==t?void 0:t.tensorLayout)&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[3]):(s=e.dims[3],i=e.dims[2]);let a,o,l=void 0!==(null==t?void 0:t.format)?t.format:"RGB",u=null==t?void 0:t.norm;void 0===u||void 0===u.mean?a=[255,255,255,255]:"number"==typeof u.mean?a=[u.mean,u.mean,u.mean,u.mean]:(a=[u.mean[0],u.mean[1],u.mean[2],0],void 0!==u.mean[3]&&(a[3]=u.mean[3])),void 0===u||void 0===u.bias?o=[0,0,0,0]:"number"==typeof u.bias?o=[u.bias,u.bias,u.bias,u.bias]:(o=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(o[3]=u.bias[3]));let d=i*s,c=0,p=d,h=2*d,m=-1;"RGBA"===l?(c=0,p=d,h=2*d,m=3*d):"RGB"===l?(c=0,p=d,h=2*d):"RBG"===l&&(c=0,h=d,p=2*d);for(let t=0;t<i;t++)for(let n=0;n<s;n++){let s=(e.data[c++]-o[0])*a[0],i=(e.data[p++]-o[1])*a[1],l=(e.data[h++]-o[2])*a[2],u=-1===m?255:(e.data[m++]-o[3])*a[3];r.fillStyle="rgba("+s+","+i+","+l+","+u+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},A=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let s,i,a;void 0!==(null==t?void 0:t.tensorLayout)&&"NHWC"===t.tensorLayout?(s=e.dims[2],i=e.dims[1],a=e.dims[3]):(s=e.dims[3],i=e.dims[2],a=e.dims[1]);let o,l,u=void 0!==t&&void 0!==t.format?t.format:"RGB",d=null==t?void 0:t.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],255],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=i*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,h=0,m=1,f=2,_=3,g=0,w=c,b=2*c,y=-1;"RGBA"===u?(g=0,w=c,b=2*c,y=3*c):"RGB"===u?(g=0,w=c,b=2*c):"RBG"===u&&(g=0,b=c,w=2*c),n=r.createImageData(s,i);for(let t=0;t<i*s;h+=p,m+=p,f+=p,_+=p,t++)n.data[h]=(e.data[g++]-l[0])*o[0],n.data[m]=(e.data[w++]-l[1])*o[1],n.data[f]=(e.data[b++]-l[2])*o[2],n.data[_]=-1===y?255:(e.data[y++]-l[3])*o[3]}return n}}),pe=re(()=>{fe(),I=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:s,width:i}=t,a=t.norm??{mean:255,bias:0};n="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],r="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=s*i,d="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u),c=4,p=0,h=1,m=2,f=3,_=0,g=u,w=2*u,b=-1;"RGB"===o&&(c=3,p=0,h=1,m=2,f=-1),"RGBA"===l?b=3*u:"RBG"===l?(_=0,w=u,g=2*u):"BGR"===l&&(w=0,g=u,_=2*u);for(let y=0;y<u;y++,p+=c,m+=c,h+=c,f+=c)d[_++]=(e[p]+r[0])/n[0],d[g++]=(e[h]+r[1])/n[1],d[w++]=(e[m]+r[2])/n[2],-1!==b&&-1!==f&&(d[b++]=(e[f]+r[3])/n[3]);return new q("float32",d,"RGBA"===l?[1,4,s,i]:[1,3,s,i])},z=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a="string"==typeof e,o=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null==s)throw new Error("Can not access image data");{let r=e.height,i=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,i=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=r,o.width=i}else o.tensorFormat="RGBA",o.height=r,o.width=i;s.drawImage(e,0,0),n=s.getImageData(0,0,i,r).data}}else{if(!s){if(i){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let s=u(r);if(null!=s){let t=e.height,r=e.width;return s.drawImage(e,0,0,r,t),n=s.getImageData(0,0,r,t).data,o.height=t,o.width=r,I(n,o)}throw new Error("Can not access image data")}if(a)return new Promise((t,n)=>{let r=l(),s=u(r);if(!e||!s)return n();let i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,s.drawImage(i,0,0,r.width,r.height);let e=s.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(I(e.data,o))}});throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,s;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,s=t.resizedWidth):(r=e.height,s=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=r,o.width=s,void 0!==t){let t=l();t.width=s,t.height=r;let i=u(t);if(null==i)throw new Error("Can not access image data");i.putImageData(e,0,0),n=i.getImageData(0,0,s,r).data}else n=e.data}}if(void 0!==n)return I(n,o);throw new Error("Input data provided is not supported - aborted tensor creation")},F=(e,t)=>{let{width:n,height:r,download:s,dispose:i}=t;return new q({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:i})},O=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:i}=t;return new q({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:i})},L=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:i}=t;return new q({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:i})},B=(e,t,n)=>new q({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})}),he=re(()=>{D=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),N=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),j=!1,R=()=>{if(!j){j=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,n=globalThis.Float16Array,r=typeof n<"u"&&n.from;e&&(D.set("int64",BigInt64Array),N.set(BigInt64Array,"int64")),t&&(D.set("uint64",BigUint64Array),N.set(BigUint64Array,"uint64")),r?(D.set("float16",n),N.set(n,"float16")):D.set("float16",Uint16Array)}}}),me=re(()=>{fe(),V=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},G=(e,t)=>{switch(e.location){case"cpu":return new q(e.type,e.data,t);case"cpu-pinned":return new q({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new q({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new q({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new q({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),fe=re(()=>{ce(),pe(),he(),me(),q=class{constructor(e,t,n){let r,s;if(R(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{let t=D.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if("string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{let n=D.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)i=t;else if(t instanceof Uint8ClampedArray){if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");i=Uint8Array.from(t)}else{if(!("float16"===e&&t instanceof Uint16Array&&n!==Uint16Array))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{let t=N.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=i,this.dataLocation="cpu"}let i=V(s);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=i}static async fromImage(e,t){return z(e,t)}static fromTexture(e,t){return F(e,t)}static fromGpuBuffer(e,t){return O(e,t)}static fromMLTensor(e,t){return L(e,t)}static fromPinnedBuffer(e,t,n){return B(e,t,n)}toDataURL(e){return P(this,e)}toImageData(e){return A(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return G(this,e)}}}),_e=re(()=>{fe(),U=q}),ge=re(()=>{ue(),W=(e,t)=>{typeof C.trace>"u"?C.wasm.trace:C.trace},H=(e,t)=>{var n;let r=(null==(n=(new Error).stack)?void 0:n.split(/\r\n|\r|\n/g))||[],s=!1;for(let i=0;i<r.length;i++){if(s&&!r[i].includes("TRACE_FUNC")){let n=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;return t&&(n+=`::${t}`),void W("CPU",n)}r[i].includes("TRACE_FUNC")&&(s=!0)}},K=e=>{(typeof C.trace>"u"?!C.wasm.trace:!C.trace)||H("BEGIN",e)},Q=e=>{(typeof C.trace>"u"?!C.wasm.trace:!C.trace)||H("END",e)}}),we=re(()=>{ae(),_e(),ge(),X=class e{constructor(e){this.handler=e}async run(e,t,n){K();let r={},s={};if("object"!=typeof e||null===e||e instanceof U||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof U)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,a=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==a.indexOf(n)){let s=t[n];(null===s||s instanceof U)&&(e=!0,i=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let l of this.inputNames)if(typeof e[l]>"u")throw new Error(`input '${l}' is missing in 'feeds'.`);if(i)for(let l of this.outputNames)r[l]=null;let a=await this.handler.run(e,r,s),o={};for(let l in a)if(Object.hasOwnProperty.call(a,l)){let e=a[l];o[l]=e instanceof U?e:new U(e.type,e.data,e.dims)}return Q(),o}async release(){return this.handler.dispose()}static async create(t,n,r,s){K();let i,a={};if("string"==typeof t){if(i=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(i=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,o=0,l=t.byteLength;if("object"==typeof n&&null!==n)a=n;else if("number"==typeof n){if(o=n,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-o,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||o+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-o}].`);if("object"==typeof s&&null!==s)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(e,o,l)}}let[o,l]=await T(a),u=await o.createInferenceSessionHandler(i,l);return Q(),new e(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),be=re(()=>{we(),J=X}),ye=re(()=>{}),ve=re(()=>{}),xe=re(()=>{}),Me=re(()=>{}),ke={};se(ke,{InferenceSession:()=>J,TRACE:()=>W,TRACE_FUNC_BEGIN:()=>K,TRACE_FUNC_END:()=>Q,Tensor:()=>U,env:()=>E,registerBackend:()=>M});var Te=re(()=>{oe(),de(),be(),_e(),ye(),ve(),ge(),xe(),Me()}),$e=re(()=>{}),Se={};se(Se,{default:()=>Pe});var Ce,Ee,Pe,Ae=re(()=>{var e;Tc(),bu(),wu(),Ce="ort-wasm-proxy-worker",(Ee=(null==(e=globalThis.self)?void 0:e.name)===Ce)&&(self.onmessage=e=>{let{type:t,in:n}=e.data;try{switch(t){case"init-wasm":rt(n.wasm).then(()=>{Ud(n).then(()=>{postMessage({type:t})},e=>{postMessage({type:t,err:e})})},e=>{postMessage({type:t,err:e})});break;case"init-ep":{let{epName:e,env:r}=n;Wd(r,e).then(()=>{postMessage({type:t})},e=>{postMessage({type:t,err:e})});break}case"copy-from":{let{buffer:e}=n,r=Xd(e);postMessage({type:t,out:r});break}case"create":{let{model:e,options:r}=n;Jd(e,r).then(e=>{postMessage({type:t,out:e})},e=>{postMessage({type:t,err:e})});break}case"release":Yd(n),postMessage({type:t});break;case"run":{let{sessionId:e,inputIndices:r,inputs:s,outputIndices:i,options:a}=n;ec(e,r,s,i,new Array(i.length).fill(null),a).then(e=>{e.some(e=>"cpu"!==e[3])?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:e},nc([...s,...e]))},e=>{postMessage({type:t,err:e})});break}case"end-profiling":tc(n),postMessage({type:t})}}catch(r){postMessage({type:t,err:r})}}),Pe=Ee?null:e=>new Worker(e??Ne,{type:"module",name:Ce})}),Ie={};se(Ie,{default:()=>Oe});var ze,Fe,Oe,Le,Be,De,Ne,je,Re,Ve,Ge,qe,Ue,We,He,Ke,Qe,Xe,Je,Ye,Ze,et,tt,nt,rt,st,it,at,ot,lt,ut,dt,ct,pt,ht,mt,ft,_t,gt,wt,bt,yt,vt,xt,Mt,kt,Tt,$t,St,Ct,Et,Pt,At,It,zt,Ft,Ot,Lt,Bt,Dt,Nt,jt,Rt,Vt,Gt,qt,Ut,Wt,Ht,Kt,Qt,Xt,Jt,Yt,Zt,en,tn,nn,rn,sn,an,on,ln,un,dn,cn,pn,hn,mn,fn,_n,gn,wn,bn,yn,vn,xn,Mn,kn,Tn,$n,Sn,Cn,En,Pn,An,In,zn,Fn,On,Ln,Bn,Dn,Nn,jn,Rn,Vn,Gn,qn,Un,Wn,Hn,Kn,Qn,Xn,Jn,Yn,Zn,er,tr,nr,rr,sr,ir,ar,or,lr,ur,dr,cr,pr,hr,mr,fr,_r,gr,wr,br,yr,vr,xr,Mr,kr,Tr,$r,Sr,Cr,Er,Pr,Ar,Ir,zr,Fr,Or,Lr,Br,Dr,Nr,jr,Rr,Vr,Gr,qr,Ur,Wr,Hr,Kr,Qr,Xr,Jr,Yr,Zr,es,ts,ns,rs,ss,is,as,os,ls,us,ds,cs,ps,hs,ms,fs,_s,gs,ws,bs,ys,vs,xs,Ms,ks,Ts,$s,Ss,Cs,Es,Ps,As,Is,zs,Fs,Os,Ls,Bs,Ds,Ns,js,Rs,Vs,Gs,qs,Us,Ws,Hs,Ks,Qs,Xs,Js,Ys,Zs,ei,ti,ni,ri,si,ii,ai,oi,li,ui,di,ci,pi,hi,mi,fi,_i,gi,wi,bi,yi,vi,xi,Mi,ki,Ti,$i,Si,Ci,Ei,Pi,Ai,Ii,zi,Fi,Oi,Li,Bi,Di,Ni,ji,Ri,Vi,Gi,qi,Ui,Wi,Hi,Ki,Qi,Xi,Ji,Yi,Zi,ea,ta,na,ra,sa,ia,aa,oa,la,ua,da,ca,pa,ha,ma,fa,_a,ga,wa,ba,ya,va,xa,Ma,ka,Ta,$a,Sa,Ca,Ea,Pa,Aa,Ia,za,Fa,Oa,La,Ba,Da,Na,ja,Ra,Va,Ga,qa,Ua,Wa,Ha,Ka,Qa,Xa,Ja,Ya,Za,eo,to,no,ro,so,io,ao,oo,lo,uo,co,po,ho,mo,fo,_o,go,wo,bo,yo,vo,xo,Mo,ko,To,$o,So,Co,Eo,Po,Ao,Io,zo,Fo,Oo,Lo,Bo,Do,No,jo,Ro,Vo,Go,qo,Uo,Wo,Ho,Ko,Qo,Xo,Jo,Yo,Zo,el,tl,nl,rl,sl,il,al,ol,ll,ul,dl,cl,pl,hl,ml,fl,_l,gl,wl,bl,yl,vl,xl,Ml,kl,Tl,$l,Sl,Cl,El,Pl,Al,Il,zl,Fl,Ol,Ll,Bl,Dl,Nl,jl,Rl,Vl,Gl,ql,Ul,Wl,Hl,Kl,Ql,Xl,Jl,Yl,Zl,eu,tu,nu,ru,su,iu,au,ou,lu,uu,du,cu,pu,hu,mu,fu,_u,gu=re(()=>{var e,n;ze=import.meta.url,Fe=async function(e={}){var n,r,s,i=e,a=new Promise((e,t)=>{r=e,s=t}),o="object"==typeof window,l=typeof WorkerGlobalScope<"u",u=l&&(null==(n=self.name)?void 0:n.startsWith("em-pthread"));i.mountExternalData=(e,t)=>{e.startsWith("./")&&(e=e.substring(2)),(i.Eb||(i.Eb=new Map)).set(e,t)},i.unmountExternalData=()=>{delete i.Eb};var d=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let c=e=>async(...t)=>{var n;try{if(i.Fb)throw Error("Session already started");let r=i.Fb={dc:t[0],errors:[]},s=await e(...t);if(i.Fb!==r)throw Error("Session mismatch");null==(n=i.Jb)||n.flush();let a=r.errors;if(0<a.length){let e=await Promise.all(a);if(e=e.filter(e=>e),0<e.length)throw Error(e.join("\n"))}return s}finally{i.Fb=null}};i.jsepInit=(e,t)=>{if("webgpu"===e){[i.Jb,i.Ub,i.Yb,i.Kb,i.Xb,i.jb,i.Zb,i.ac,i.Vb,i.Wb,i.$b]=t;let e=i.Jb;i.jsepRegisterBuffer=(t,n,r,s)=>e.registerBuffer(t,n,r,s),i.jsepGetBuffer=t=>e.getBuffer(t),i.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),i.jsepOnCreateSession=t=>{e.onCreateSession(t)},i.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},i.jsepOnRunStart=t=>e.onRunStart(t),i.bc=(t,n)=>{e.upload(t,n)}}else if("webnn"===e){let e=t[0];[i.nc,i.Nb,i.webnnEnsureTensor,i.Ob,i.webnnDownloadTensor]=t.slice(1),i.webnnReleaseTensorId=i.Nb,i.webnnUploadTensor=i.Ob,i.webnnOnRunStart=t=>e.onRunStart(t),i.webnnOnRunEnd=e.onRunEnd.bind(e),i.webnnRegisterMLContext=(t,n)=>{e.registerMLContext(t,n)},i.webnnOnReleaseSession=t=>{e.onReleaseSession(t)},i.webnnCreateMLTensorDownloader=(t,n)=>e.createMLTensorDownloader(t,n),i.webnnRegisterMLTensor=(t,n,r,s)=>e.registerMLTensor(t,n,r,s),i.webnnCreateMLContext=t=>e.createMLContext(t),i.webnnRegisterMLConstant=(t,n,r,s,a,o)=>e.registerMLConstant(t,n,r,s,a,i.Eb,o),i.webnnRegisterGraphInput=e.registerGraphInput.bind(e),i.webnnIsGraphInput=e.isGraphInput.bind(e),i.webnnCreateTemporaryTensor=e.createTemporaryTensor.bind(e),i.webnnIsInt64Supported=e.isInt64Supported.bind(e)}};let p=()=>{let e=(e,t,n)=>(...r)=>{let s=jt,i=null==t?void 0:t();r=e(...r);let a=null==t?void 0:t();return i!==a&&(e=a,n(i),t=n=null),jt!=s?new Promise((e,t)=>{Wt={resolve:e,reject:t}}):r};(()=>{for(let t of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])i[t]=e(i[t],()=>i[t],e=>i[t]=e)})(),void 0!==c&&(i._OrtRun=c(i._OrtRun),i._OrtRunWithBinding=c(i._OrtRunWithBinding)),p=void 0};i.asyncInit=()=>{null==p||p()};var h,m,f=Object.assign({},i),_=(e,t)=>{throw t},g="";(o||l)&&(l?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),ze&&(g=ze),g=g.startsWith("blob:")?"":g.slice(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1),l&&(m=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=async e=>{if(O(e))return new Promise((t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n(r.status)},r.onerror=n,r.send(null)});var t=await fetch(e,{credentials:"same-origin"});if(t.ok)return t.arrayBuffer();throw Error(t.status+" : "+t.url)});var w=void 0,b=void 0;Object.assign(i,f),f=null;var y,v,x,M,k,T,$,S,C,E,P,A,I,z=i.wasmBinary,F=!1,O=e=>e.startsWith("file://");function L(){return y.buffer!=M.buffer&&W(),M}function B(){return y.buffer!=M.buffer&&W(),k}function D(){return y.buffer!=M.buffer&&W(),T}function N(){return y.buffer!=M.buffer&&W(),$}function j(){return y.buffer!=M.buffer&&W(),S}function R(){return y.buffer!=M.buffer&&W(),C}function V(){return y.buffer!=M.buffer&&W(),E}function G(){return y.buffer!=M.buffer&&W(),I}if(u){let e=function(t){try{var n=t.data,r=n.Bb;if("load"===r){let t=[];self.onmessage=e=>t.push(e),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let n of t)e(n);self.onmessage=e};for(let e of n.Rb)i[e]&&!i[e].proxy||(i[e]=(...t)=>{postMessage({Bb:"callHandler",Qb:e,args:t})},"print"==e&&(w=i[e]),"printErr"==e&&(b=i[e]));y=n.kc,W(),q(n.lc)}else if("run"===r){ye(n.Ab),hr(n.Ab,0,0,1,0,0),ge(),$t(n.Ab),U||(ur(),U=!0);try{ve(n.fc,n.Hb)}catch(s){if("unwind"!=s)throw s}}else"setimmediate"!==n.target&&("checkMailbox"===r?U&&St():r&&(b(`worker: received unknown command ${r}`),b(n)))}catch(s){throw mr(),s}};var q,U=!1;b=function(...e){e=e.join(" ")},self.alert=function(...e){postMessage({Bb:"alert",text:e.join(" "),ic:dr()})},self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=e}function W(){var e=y.buffer;i.HEAP8=M=new Int8Array(e),i.HEAP16=T=new Int16Array(e),i.HEAPU8=k=new Uint8Array(e),i.HEAPU16=$=new Uint16Array(e),i.HEAP32=S=new Int32Array(e),i.HEAPU32=C=new Uint32Array(e),i.HEAPF32=E=new Float32Array(e),i.HEAPF64=I=new Float64Array(e),i.HEAP64=P=new BigInt64Array(e),i.HEAPU64=A=new BigUint64Array(e)}function H(){u?startWorker(i):ar.Ca()}u||(y=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),W());var K,Q=0,X=null;function J(){if(0==--Q&&X){var e=X;X=null,e()}}function Y(e){throw b(e="Aborted("+e+")"),F=!0,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),s(e),e}function Z(){return{a:{L:ne,Aa:te,b:Me,$:Te,A:Ee,pa:Pe,X:Fe,Z:Oe,qa:Le,na:Be,ga:De,ma:Ne,J:je,Y:Re,V:Ve,oa:Ge,W:qe,va:He,E:Ze,Q:tt,O:ut,D:ct,u:pt,r:ht,P:mt,z:xt,R:Mt,ja:kt,T:Ct,aa:Pt,M:At,F:It,ia:$t,sa:zt,t:Lt,Ba:Bt,w:Qt,o:Jt,l:en,c:st,n:nn,j:on,v:ln,p:un,f:dn,s:cn,m:pn,e:hn,k:mn,i:fn,g:_n,d:gn,da:wn,ea:xn,fa:Mn,ba:kn,ca:Tn,N:Cn,xa:En,ua:An,h:Fn,C:On,G:Ln,ta:Pn,x:Bn,ra:Dn,U:Nn,q:Sn,y:jn,K:Rn,S:Vn,za:Wn,ya:Hn,ka:Jn,la:Yn,_:ce,B:Zn,I:er,ha:tr,H:rr,a:y,wa:ue}}}var ee={829644:(e,t,n,r,s)=>{if(void 0===i||!i.Eb)return 1;if((e=Ce(Number(e>>>0))).startsWith("./")&&(e=e.substring(2)),!(e=i.Eb.get(e)))return 2;if(t=Number(t>>>0),n=Number(n>>>0),r=Number(r>>>0),t+n>e.byteLength)return 3;try{let a=e.subarray(t,t+n);switch(s){case 0:B().set(a,r>>>0);break;case 1:i.mc?i.mc(r,a):i.bc(r,a);break;default:return 4}return 0}catch{return 4}},830468:(e,t,n)=>{i.Ob(e,B().subarray(t>>>0,t+n>>>0))},830532:()=>i.nc(),830574:e=>{i.Nb(e)},830611:()=>{i.Vb()},830642:()=>{i.Wb()},830671:()=>{i.$b()},830696:e=>i.Ub(e),830729:e=>i.Yb(e),830761:(e,t,n)=>{i.Kb(Number(e),Number(t),Number(n),!0)},830824:(e,t,n)=>{i.Kb(Number(e),Number(t),Number(n))},830881:()=>typeof wasmOffsetConverter<"u",830938:e=>{i.jb("Abs",e,void 0)},830989:e=>{i.jb("Neg",e,void 0)},831040:e=>{i.jb("Floor",e,void 0)},831093:e=>{i.jb("Ceil",e,void 0)},831145:e=>{i.jb("Reciprocal",e,void 0)},831203:e=>{i.jb("Sqrt",e,void 0)},831255:e=>{i.jb("Exp",e,void 0)},831306:e=>{i.jb("Erf",e,void 0)},831357:e=>{i.jb("Sigmoid",e,void 0)},831412:(e,t,n)=>{i.jb("HardSigmoid",e,{alpha:t,beta:n})},831491:e=>{i.jb("Log",e,void 0)},831542:e=>{i.jb("Sin",e,void 0)},831593:e=>{i.jb("Cos",e,void 0)},831644:e=>{i.jb("Tan",e,void 0)},831695:e=>{i.jb("Asin",e,void 0)},831747:e=>{i.jb("Acos",e,void 0)},831799:e=>{i.jb("Atan",e,void 0)},831851:e=>{i.jb("Sinh",e,void 0)},831903:e=>{i.jb("Cosh",e,void 0)},831955:e=>{i.jb("Asinh",e,void 0)},832008:e=>{i.jb("Acosh",e,void 0)},832061:e=>{i.jb("Atanh",e,void 0)},832114:e=>{i.jb("Tanh",e,void 0)},832166:e=>{i.jb("Not",e,void 0)},832217:(e,t,n)=>{i.jb("Clip",e,{min:t,max:n})},832286:e=>{i.jb("Clip",e,void 0)},832338:(e,t)=>{i.jb("Elu",e,{alpha:t})},832396:e=>{i.jb("Gelu",e,void 0)},832448:e=>{i.jb("Relu",e,void 0)},832500:(e,t)=>{i.jb("LeakyRelu",e,{alpha:t})},832564:(e,t)=>{i.jb("ThresholdedRelu",e,{alpha:t})},832634:(e,t)=>{i.jb("Cast",e,{to:t})},832692:e=>{i.jb("Add",e,void 0)},832743:e=>{i.jb("Sub",e,void 0)},832794:e=>{i.jb("Mul",e,void 0)},832845:e=>{i.jb("Div",e,void 0)},832896:e=>{i.jb("Pow",e,void 0)},832947:e=>{i.jb("Equal",e,void 0)},833e3:e=>{i.jb("Greater",e,void 0)},833055:e=>{i.jb("GreaterOrEqual",e,void 0)},833117:e=>{i.jb("Less",e,void 0)},833169:e=>{i.jb("LessOrEqual",e,void 0)},833228:(e,t,n,r,s)=>{i.jb("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},833403:(e,t,n,r,s)=>{i.jb("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},833577:(e,t,n,r,s)=>{i.jb("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},833751:(e,t,n,r,s)=>{i.jb("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},833926:(e,t,n,r,s)=>{i.jb("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},834100:(e,t,n,r,s)=>{i.jb("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},834273:(e,t,n,r,s)=>{i.jb("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},834446:(e,t,n,r,s)=>{i.jb("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},834623:(e,t,n,r,s)=>{i.jb("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},834803:(e,t,n,r,s)=>{i.jb("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},834983:e=>{i.jb("Where",e,void 0)},835036:(e,t,n)=>{i.jb("Transpose",e,{perm:t?Array.from(j().subarray(Number(t)>>>0,Number(n)>>>0)):[]})},835160:(e,t,n,r)=>{i.jb("DepthToSpace",e,{blocksize:t,mode:Ce(n),format:r?"NHWC":"NCHW"})},835293:(e,t,n,r)=>{i.jb("DepthToSpace",e,{blocksize:t,mode:Ce(n),format:r?"NHWC":"NCHW"})},835426:(e,t,n,r,s,a,o,l,u,d,c,p,h,m,f)=>{i.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[s],pads:[a,o],strides:[l],wIsConst:()=>!!L()[d>>>0],outputPadding:c?Array.from(j().subarray(Number(c)>>>0,Number(p)>>>0)):[],outputShape:h?Array.from(j().subarray(Number(h)>>>0,Number(m)>>>0)):[],activation:Ce(f)})},835859:(e,t,n,r,s,a,o,l,u,d,c,p,h,m)=>{i.jb("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(j().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),group:r,kernelShape:Array.from(j().subarray(Number(s)>>>0,2+(Number(s)>>>0)>>>0)),pads:Array.from(j().subarray(Number(a)>>>0,4+(Number(a)>>>0)>>>0)),strides:Array.from(j().subarray(Number(o)>>>0,2+(Number(o)>>>0)>>>0)),wIsConst:()=>!!L()[u>>>0],outputPadding:d?Array.from(j().subarray(Number(d)>>>0,Number(c)>>>0)):[],outputShape:p?Array.from(j().subarray(Number(p)>>>0,Number(h)>>>0)):[],activation:Ce(m)})},836520:(e,t,n,r,s,a,o,l,u,d,c,p,h,m,f)=>{i.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[s],pads:[a,o],strides:[l],wIsConst:()=>!!L()[d>>>0],outputPadding:c?Array.from(j().subarray(Number(c)>>>0,Number(p)>>>0)):[],outputShape:h?Array.from(j().subarray(Number(h)>>>0,Number(m)>>>0)):[],activation:Ce(f)})},836953:(e,t,n,r,s,a,o,l,u,d,c,p,h,m)=>{i.jb("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(j().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),group:r,kernelShape:Array.from(j().subarray(Number(s)>>>0,2+(Number(s)>>>0)>>>0)),pads:Array.from(j().subarray(Number(a)>>>0,4+(Number(a)>>>0)>>>0)),strides:Array.from(j().subarray(Number(o)>>>0,2+(Number(o)>>>0)>>>0)),wIsConst:()=>!!L()[u>>>0],outputPadding:d?Array.from(j().subarray(Number(d)>>>0,Number(c)>>>0)):[],outputShape:p?Array.from(j().subarray(Number(p)>>>0,Number(h)>>>0)):[],activation:Ce(m)})},837614:(e,t)=>{i.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},837705:(e,t,n,r,s,a,o,l,u,d,c,p,h,m)=>{i.jb("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:d?Array.from(j().subarray(Number(d)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},838184:(e,t)=>{i.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},838275:(e,t,n,r,s,a,o,l,u,d,c,p,h,m)=>{i.jb("AveragePool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:d?Array.from(j().subarray(Number(d)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},838754:(e,t)=>{i.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},838841:(e,t,n,r,s,a,o,l,u,d,c,p,h,m)=>{i.jb("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:d?Array.from(j().subarray(Number(d)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},839316:(e,t)=>{i.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},839403:(e,t,n,r,s,a,o,l,u,d,c,p,h,m)=>{i.jb("MaxPool",e,{format:m?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(o)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(u)>>>0)):[],pads:d?Array.from(j().subarray(Number(d)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(h)>>>0)):[]})},839878:(e,t,n,r,s)=>{i.jb("Gemm",e,{alpha:t,beta:n,transA:r,transB:s})},839982:e=>{i.jb("MatMul",e,void 0)},840036:(e,t,n,r)=>{i.jb("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},840144:(e,t,n,r)=>{i.jb("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},840252:(e,t)=>{i.jb("Softmax",e,{axis:t})},840315:(e,t)=>{i.jb("Concat",e,{axis:t})},840375:(e,t,n,r,s)=>{i.jb("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},840531:e=>{i.jb("Expand",e,void 0)},840585:(e,t)=>{i.jb("Gather",e,{axis:Number(t)})},840656:(e,t)=>{i.jb("GatherElements",e,{axis:Number(t)})},840735:(e,t)=>{i.jb("GatherND",e,{batch_dims:Number(t)})},840814:(e,t,n,r,s,a,o,l,u,d,c)=>{i.jb("Resize",e,{antialias:t,axes:n?Array.from(j().subarray(Number(n)>>>0,Number(r)>>>0)):[],coordinateTransformMode:Ce(s),cubicCoeffA:a,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:Ce(u),mode:Ce(d),nearestMode:Ce(c)})},841176:(e,t,n,r,s,a,o)=>{i.jb("Slice",e,{starts:t?Array.from(j().subarray(Number(t)>>>0,Number(n)>>>0)):[],ends:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[],axes:a?Array.from(j().subarray(Number(a)>>>0,Number(o)>>>0)):[]})},841440:e=>{i.jb("Tile",e,void 0)},841492:(e,t,n)=>{i.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},841606:(e,t,n)=>{i.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},841720:e=>{i.jb("Range",e,void 0)},841773:(e,t)=>{i.jb("Einsum",e,{equation:Ce(t)})},841854:(e,t,n,r,s)=>{i.jb("Pad",e,{mode:t,value:n,pads:r?Array.from(j().subarray(Number(r)>>>0,Number(s)>>>0)):[]})},841997:(e,t,n,r,s,a)=>{i.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!s,trainingMode:!!r,format:a?"NHWC":"NCHW"})},842166:(e,t,n,r,s,a)=>{i.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!s,trainingMode:!!r,format:a?"NHWC":"NCHW"})},842335:(e,t,n)=>{i.jb("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},842432:(e,t,n)=>{i.jb("DequantizeLinear",e,{axis:t,blockSize:n})},842522:(e,t,n,r,s)=>{i.jb("GridSample",e,{align_corners:t,mode:Ce(n),padding_mode:Ce(r),format:s?"NHWC":"NCHW"})},842692:(e,t,n,r,s)=>{i.jb("GridSample",e,{align_corners:t,mode:Ce(n),padding_mode:Ce(r),format:s?"NHWC":"NCHW"})},842862:(e,t)=>{i.jb("ScatterND",e,{reduction:Ce(t)})},842947:(e,t,n,r,s,a,o,l,u)=>{i.jb("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:s,doRotary:a,qkvHiddenSizes:o?Array.from(j().subarray(Number(l)>>>0,Number(l)+o>>>0)):[],pastPresentShareBuffer:!!u})},843219:e=>{i.jb("BiasAdd",e,void 0)},843274:e=>{i.jb("BiasSplitGelu",e,void 0)},843335:e=>{i.jb("FastGelu",e,void 0)},843391:(e,t,n,r,s,a,o,l,u,d,c,p,h,m,f,_)=>{i.jb("Conv",e,{format:p?"NHWC":"NCHW",auto_pad:t,dilations:n?Array.from(j().subarray(Number(n)>>>0,Number(r)>>>0)):[],group:s,kernel_shape:a?Array.from(j().subarray(Number(a)>>>0,Number(o)>>>0)):[],pads:l?Array.from(j().subarray(Number(l)>>>0,Number(u)>>>0)):[],strides:d?Array.from(j().subarray(Number(d)>>>0,Number(c)>>>0)):[],w_is_const:()=>!!L()[Number(h)>>>0],activation:Ce(m),activation_params:f?Array.from(V().subarray(Number(f)>>>0,Number(_)>>>0)):[]})},843975:e=>{i.jb("Gelu",e,void 0)},844027:(e,t,n,r,s,a,o,l,u)=>{i.jb("GroupQueryAttention",e,{numHeads:t,kvNumHeads:n,scale:r,softcap:s,doRotary:a,rotaryInterleaved:o,smoothSoftmax:l,localWindowSize:u})},844244:(e,t,n,r)=>{i.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},844355:(e,t,n,r)=>{i.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},844466:(e,t,n,r,s,a)=>{i.jb("MatMulNBits",e,{k:t,n:n,accuracyLevel:r,bits:s,blockSize:a})},844593:(e,t,n,r,s,a)=>{i.jb("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:s,doRotary:a})},844752:(e,t)=>{i.jb("QuickGelu",e,{alpha:t})},844816:(e,t,n,r,s)=>{i.jb("RotaryEmbedding",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:s})},844955:(e,t,n)=>{i.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},845057:(e,t,n)=>{i.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},845159:(e,t,n,r)=>{i.jb("GatherBlockQuantized",e,{gatherAxis:t,quantizeAxis:n,blockSize:r})},845280:e=>{i.Zb(e)},845314:(e,t)=>i.ac(Number(e),Number(t),i.Fb.dc,i.Fb.errors)};function te(e,t,n){return Kt(async()=>{await i.Xb(Number(e),Number(t),Number(n))})}function ne(){return typeof wasmOffsetConverter<"u"}class re{constructor(e){t(this,"name","ExitStatus"),this.message=`Program terminated with exit(${e})`,this.status=e}}var se=e=>{e.terminate(),e.onmessage=()=>{}},ie=[],ae=e=>{0==pe.length&&(be(),we(pe[0]));var t=pe.pop();if(!t)return 6;he.push(t),fe[e.Ab]=t,t.Ab=e.Ab;var n={Bb:"run",fc:e.ec,Hb:e.Hb,Ab:e.Ab};return t.postMessage(n,e.Mb),0},oe=0,le=(e,t,...n)=>{for(var r=2*n.length,s=Mr(),i=xr(8*r),a=i>>>3,o=0;o<n.length;o++){var l=n[o];"bigint"==typeof l?(P[a+2*o]=1n,P[a+2*o+1]=l):(P[a+2*o]=0n,G()[a+2*o+1>>>0]=l)}return e=fr(e,0,r,i,t),vr(s),e};function ue(e){if(u)return le(0,1,e);if(x=e,!(0<oe)){for(var t of he)se(t);for(t of pe)se(t);pe=[],he=[],fe={},F=!0}_(0,new re(e))}function de(e){if(u)return le(1,0,e);ce(e)}var ce=e=>{if(x=e,u)throw de(e),"unwind";ue(e)},pe=[],he=[],me=[],fe={},_e=e=>{var t=e.Ab;delete fe[t],pe.push(e),he.splice(he.indexOf(e),1),e.Ab=0,_r(t)};function ge(){me.forEach(e=>e())}var we=e=>new Promise(t=>{e.onmessage=n=>{var r=(n=n.data).Bb;if(n.Gb&&n.Gb!=dr()){var s=fe[n.Gb];s?s.postMessage(n,n.Mb):b(`Internal error! Worker sent a message "${r}" to target pthread ${n.Gb}, but that thread no longer exists!`)}else"checkMailbox"===r?St():"spawnThread"===r?ae(n):"cleanupThread"===r?_e(fe[n.hc]):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert(`Thread ${n.ic}: ${n.text}`):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?i[n.Qb](...n.args):r&&b(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw b(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e};var n,r=[];for(n of[])i.propertyIsEnumerable(n)&&r.push(n);e.postMessage({Bb:"load",Rb:r,kc:y,lc:v})});function be(){var e=new Worker((()=>{let e=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new e("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});pe.push(e)}var ye=e=>{W();var t=R()[e+52>>>2>>>0];e=R()[e+56>>>2>>>0],yr(t,t-e),vr(t)},ve=(e,t)=>{oe=0,e=kr(e,t),0<oe?x=e:gr(e)};class xe{constructor(e){this.Ib=e-24}}function Me(e,t,n){var r=new xe(e>>>=0);throw t>>>=0,n>>>=0,R()[r.Ib+16>>>2>>>0]=0,R()[r.Ib+4>>>2>>>0]=t,R()[r.Ib+8>>>2>>>0]=n,e}function ke(e,t,n,r){return u?le(2,1,e,t,n,r):Te(e,t,n,r)}function Te(e,t,n,r){if(e>>>=0,n>>>=0,r>>>=0,void 0===d)return 6;var s=[];return u&&0===s.length?ke(e,t>>>=0,n,r):(e={ec:n,Ab:e,Hb:r,Mb:s},u?(e.Bb="spawnThread",postMessage(e,s),0):ae(e))}var $e=typeof TextDecoder<"u"?new TextDecoder:void 0,Se=(e,t=0,n=NaN)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&$e)return $e.decode(e.buffer instanceof ArrayBuffer?e.subarray(t,n):e.slice(t,n));for(r="";t<n;){var s=e[t++];if(128&s){var i=63&e[t++];if(192==(224&s))r+=String.fromCharCode((31&s)<<6|i);else{var a=63&e[t++];65536>(s=224==(240&s)?(15&s)<<12|i<<6|a:(7&s)<<18|i<<12|a<<6|63&e[t++])?r+=String.fromCharCode(s):(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s))}}else r+=String.fromCharCode(s)}return r},Ce=(e,t)=>(e>>>=0)?Se(B(),e,t):"";function Ee(e,t,n){return u?le(3,1,e,t,n):0}function Pe(e,t){if(u)return le(4,1,e,t)}var Ae=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Ie=(e,t,n)=>{var r=B();if(t>>>=0,0<n){var s=t;n=t+n-1;for(var i=0;i<e.length;++i){var a=e.charCodeAt(i);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++i)),127>=a){if(t>=n)break;r[t++>>>0]=a}else{if(2047>=a){if(t+1>=n)break;r[t++>>>0]=192|a>>6}else{if(65535>=a){if(t+2>=n)break;r[t++>>>0]=224|a>>12}else{if(t+3>=n)break;r[t++>>>0]=240|a>>18,r[t++>>>0]=128|a>>12&63}r[t++>>>0]=128|a>>6&63}r[t++>>>0]=128|63&a}}r[t>>>0]=0,e=t-s}else e=0;return e};function Fe(e,t){if(u)return le(5,1,e,t)}function Oe(e,t,n){if(u)return le(6,1,e,t,n)}function Le(e,t,n){return u?le(7,1,e,t,n):0}function Be(e,t){if(u)return le(8,1,e,t)}function De(e,t,n){if(u)return le(9,1,e,t,n)}function Ne(e,t,n,r){if(u)return le(10,1,e,t,n,r)}function je(e,t,n,r){if(u)return le(11,1,e,t,n,r)}function Re(e,t,n,r){if(u)return le(12,1,e,t,n,r)}function Ve(e){if(u)return le(13,1,e)}function Ge(e,t){if(u)return le(14,1,e,t)}function qe(e,t,n){if(u)return le(15,1,e,t,n)}var Ue,We,He=()=>Y(""),Ke=e=>{for(var t="";B()[e>>>0];)t+=Ue[B()[e++>>>0]];return t},Qe={},Xe={};function Je(e,t,n={}){return function(e,t,n={}){var r=t.name;if(!e)throw new We(`type "${r}" must have a positive integer typeid pointer`);if(Xe.hasOwnProperty(e)){if(n.Sb)return;throw new We(`Cannot register type '${r}' twice`)}Xe[e]=t,Qe.hasOwnProperty(e)&&(t=Qe[e],delete Qe[e],t.forEach(e=>e()))}(e,t,n)}var Ye=(e,t,n)=>{switch(t){case 1:return n?e=>L()[e>>>0]:e=>B()[e>>>0];case 2:return n?e=>D()[e>>>1>>>0]:e=>N()[e>>>1>>>0];case 4:return n?e=>j()[e>>>2>>>0]:e=>R()[e>>>2>>>0];case 8:return n?e=>P[e>>>3]:e=>A[e>>>3];default:throw new TypeError(`invalid integer width (${t}): ${e}`)}};function Ze(e,t,n){n>>>=0,Je(e>>>=0,{name:t=Ke(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if("bigint"!=typeof t&&"number"!=typeof t)throw t=null===t?"null":"object"==(e=typeof t)||"array"===e||"function"===e?t.toString():""+t,new TypeError(`Cannot convert "${t}" to ${this.name}`);return"number"==typeof t&&(t=BigInt(t)),t},Cb:et,readValueFromPointer:Ye(t,n,-1==t.indexOf("u")),Db:null})}var et=8;function tt(e,t,n,r){Je(e>>>=0,{name:t=Ke(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:r},Cb:et,readValueFromPointer:function(e){return this.fromWireType(B()[e>>>0])},Db:null})}var nt=[],rt=[];function st(e){9<(e>>>=0)&&0==--rt[e+1]&&(rt[e]=void 0,nt.push(e))}var it=e=>{if(!e)throw new We("Cannot use deleted val. handle = "+e);return rt[e]},at=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let t=nt.pop()||rt.length;return rt[t]=e,rt[t+1]=1,t}};function ot(e){return this.fromWireType(R()[e>>>2>>>0])}var lt={name:"emscripten::val",fromWireType:e=>{var t=it(e);return st(e),t},toWireType:(e,t)=>at(t),Cb:et,readValueFromPointer:ot,Db:null};function ut(e){return Je(e>>>0,lt)}var dt=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(V()[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(G()[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function ct(e,t,n){n>>>=0,Je(e>>>=0,{name:t=Ke(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,Cb:et,readValueFromPointer:dt(t,n),Db:null})}function pt(e,t,n,r,s){if(e>>>=0,n>>>=0,t=Ke(t>>>0),-1===s&&(s=4294967295),s=e=>e,0===r){var i=32-8*n;s=e=>e<<i>>>i}var a=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};Je(e,{name:t,fromWireType:s,toWireType:a,Cb:et,readValueFromPointer:Ye(t,n,0!==r),Db:null})}function ht(e,t,n){function r(e){var t=R()[e>>>2>>>0];return e=R()[e+4>>>2>>>0],new s(L().buffer,e,t)}var s=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][t];Je(e>>>=0,{name:n=Ke(n>>>0),fromWireType:r,Cb:et,readValueFromPointer:r},{Sb:!0})}function mt(e,t){Je(e>>>=0,{name:t=Ke(t>>>0),fromWireType:function(e){for(var t,n=R()[e>>>2>>>0],r=e+4,s=r,i=0;i<=n;++i){var a=r+i;i!=n&&0!=B()[a>>>0]||(s=Ce(s,a-s),void 0===t?t=s:(t+="\0",t+=s),s=a+1)}return cr(e),t},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var n="string"==typeof t;if(!(n||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new We("Cannot pass non-string to std::string");var r=n?Ae(t):t.length,s=pr(4+r+1),i=s+4;if(R()[s>>>2>>>0]=r,n)Ie(t,i,r+1);else if(n)for(n=0;n<r;++n){var a=t.charCodeAt(n);if(255<a)throw cr(s),new We("String has UTF-16 code units that do not fit in 8 bits");B()[i+n>>>0]=a}else for(n=0;n<r;++n)B()[i+n>>>0]=t[n];return null!==e&&e.push(cr,s),s},Cb:et,readValueFromPointer:ot,Db(e){cr(e)}})}var ft=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,_t=(e,t)=>{for(var n=e>>1,r=n+t/2;!(n>=r)&&N()[n>>>0];)++n;if(32<(n<<=1)-e&&ft)return ft.decode(B().slice(e,n));for(n="",r=0;!(r>=t/2);++r){var s=D()[e+2*r>>>1>>>0];if(0==s)break;n+=String.fromCharCode(s)}return n},gt=(e,t,n)=>{if(n??(n=2147483647),2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var s=0;s<n;++s){var i=e.charCodeAt(s);D()[t>>>1>>>0]=i,t+=2}return D()[t>>>1>>>0]=0,t-r},wt=e=>2*e.length,bt=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var s=j()[e+4*n>>>2>>>0];if(0==s)break;++n,65536<=s?(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s)):r+=String.fromCharCode(s)}return r},yt=(e,t,n)=>{if(n??(n=2147483647),4>n)return 0;var r=t>>>=0;n=r+n-4;for(var s=0;s<e.length;++s){var i=e.charCodeAt(s);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),j()[t>>>2>>>0]=i,(t+=4)+4>n)break}return j()[t>>>2>>>0]=0,t-r},vt=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t};function xt(e,t,n){if(e>>>=0,t>>>=0,n=Ke(n>>>=0),2===t)var r=_t,s=gt,i=wt,a=e=>N()[e>>>1>>>0];else 4===t&&(r=bt,s=yt,i=vt,a=e=>R()[e>>>2>>>0]);Je(e,{name:n,fromWireType:e=>{for(var n,s=R()[e>>>2>>>0],i=e+4,o=0;o<=s;++o){var l=e+4+o*t;o!=s&&0!=a(l)||(i=r(i,l-i),void 0===n?n=i:(n+="\0",n+=i),i=l+t)}return cr(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new We(`Cannot pass non-string to C++ string type ${n}`);var a=i(r),o=pr(4+a+t);return R()[o>>>2>>>0]=a/t,s(r,o+4,a+t),null!==e&&e.push(cr,o),o},Cb:et,readValueFromPointer:ot,Db(e){cr(e)}})}function Mt(e,t){Je(e>>>=0,{Tb:!0,name:t=Ke(t>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function kt(e){hr(e>>>0,!l,1,!o,131072,!1),ge()}var Tt=e=>{if(!F)try{if(e(),!(0<oe))try{u?gr(x):ce(x)}catch(t){t instanceof re||"unwind"==t||_(0,t)}}catch(t){t instanceof re||"unwind"==t||_(0,t)}};function $t(e){e>>>=0,"function"==typeof Atomics.jc&&(Atomics.jc(j(),e>>>2,e).value.then(St),e+=128,Atomics.store(j(),e>>>2,1))}var St=()=>{var e=dr();e&&($t(e),Tt(br))};function Ct(e,t){(e>>>=0)==t>>>0?setTimeout(St):u?postMessage({Gb:e,Bb:"checkMailbox"}):(e=fe[e])&&e.postMessage({Bb:"checkMailbox"})}var Et=[];function Pt(e,t,n,r,s){for(t>>>=0,r/=2,Et.length=r,n=s>>>0>>>3,s=0;s<r;s++)Et[s]=P[n+2*s]?P[n+2*s+1]:G()[n+2*s+1>>>0];return(t?ee[t]:or[e])(...Et)}var At=()=>{oe=0};function It(e){e>>>=0,u?postMessage({Bb:"cleanupThread",hc:e}):_e(fe[e])}function zt(e){}var Ft=(e,t)=>{var n=Xe[e];if(void 0===n)throw e=lr(e),n=Ke(e),cr(e),new We(`${t} has unknown type ${n}`);return n},Ot=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(R()[t>>>2>>>0]=at(r)),e};function Lt(e,t,n){return t>>>=0,n>>>=0,e=it(e>>>0),t=Ft(t,"emval::as"),Ot(t,n,e)}function Bt(e,t){return t>>>=0,e=it(e>>>0),(t=Ft(t,"emval::as")).toWireType(null,e)}var Dt=e=>{try{e()}catch(t){Y(t)}},Nt=0,jt=null,Rt=0,Vt=[],Gt={},qt={},Ut=0,Wt=null,Ht=[];function Kt(e){return function(){if(!F){if(0===Nt){var t=!1,n=!1;(t=>{e().then(t)})((e=0)=>{if(!F&&(Rt=e,t=!0,n)){Nt=2,Dt(()=>Sr(jt)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),e=!1;try{var r=(a=j()[jt+8>>>2>>>0],a=ar[qt[a]],--oe,a())}catch(a){r=a,e=!0}var s=!1;if(!jt){var i=Wt;i&&(Wt=null,(e?i.reject:i.resolve)(r),s=!0)}if(e&&!s)throw r}var a}),n=!0,t||(Nt=1,jt=function(){var e=pr(65548),t=e+12;R()[e>>>2>>>0]=t,R()[e+4>>>2>>>0]=t+65536,t=Vt[0];var n=Gt[t];return void 0===n&&(n=Ut++,Gt[t]=n,qt[n]=t),t=n,j()[e+8>>>2>>>0]=t,e}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),Dt(()=>Tr(jt)))}else 2===Nt?(Nt=0,Dt(Cr),cr(jt),jt=null,Ht.forEach(Tt)):Y(`invalid state: ${Nt}`);return Rt}}()}function Qt(e){return e>>>=0,Kt(async()=>{var t=await it(e);return at(t)})}var Xt=[];function Jt(e,t,n,r){return n>>>=0,r>>>=0,(e=Xt[e>>>0])(null,t=it(t>>>0),n,r)}var Yt={},Zt=e=>{var t=Yt[e];return void 0===t?Ke(e):t};function en(e,t,n,r,s){return n>>>=0,r>>>=0,s>>>=0,(e=Xt[e>>>0])(t=it(t>>>0),t[n=Zt(n)],r,s)}var tn=()=>"object"==typeof globalThis?globalThis:Function("return this")();function nn(e){return 0==(e>>>=0)?at(tn()):(e=Zt(e),at(tn()[e]))}var rn=e=>{var t=Xt.length;return Xt.push(e),t},sn=(e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=Ft(R()[t+4*r>>>2>>>0],"parameter "+r);return n},an=(e,t)=>Object.defineProperty(t,"name",{value:e});function on(e,t,n){var r=(t=sn(e,t>>>0)).shift();e--;var s="return function (obj, func, destructorsRef, args) {\n",i=0,a=[];0===n&&a.push("obj");for(var o=["retType"],l=[r],u=0;u<e;++u)a.push("arg"+u),o.push("argType"+u),l.push(t[u]),s+=`  var arg${u} = argType${u}.readValueFromPointer(args${i?"+"+i:""});\n`,i+=t[u].Cb;return s+=`  var rv = ${1===n?"new func":"func.call"}(${a.join(", ")});\n`,r.Tb||(o.push("emval_returnValue"),l.push(Ot),s+="  return emval_returnValue(retType, destructorsRef, rv);\n"),o.push(s+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=an(t.name||"unknownFunctionName",function(){});return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(o)(...l),n=`methodCaller<(${t.map(e=>e.name).join(", ")}) => ${r.name}>`,rn(an(n,e))}function ln(e){return e=Zt(e>>>0),at(i[e])}function un(e,t){return t>>>=0,e=it(e>>>0),t=it(t),at(e[t])}function dn(e){9<(e>>>=0)&&(rt[e+1]+=1)}function cn(){return at([])}function pn(e){e=it(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return at(t)}function hn(e){return at(Zt(e>>>0))}function mn(){return at({})}function fn(e){for(var t=it(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}st(e)}function _n(e,t,n){t>>>=0,n>>>=0,e=it(e>>>0),t=it(t),n=it(n),e[t]=n}function gn(e,t){return t>>>=0,e=(e=Ft(e>>>0,"_emval_take_value")).readValueFromPointer(t),at(e)}function wn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),j()[t>>>2>>>0]=e.getUTCSeconds(),j()[t+4>>>2>>>0]=e.getUTCMinutes(),j()[t+8>>>2>>>0]=e.getUTCHours(),j()[t+12>>>2>>>0]=e.getUTCDate(),j()[t+16>>>2>>>0]=e.getUTCMonth(),j()[t+20>>>2>>>0]=e.getUTCFullYear()-1900,j()[t+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,j()[t+28>>>2>>>0]=e}var bn=e=>e%4==0&&(e%100!=0||e%400==0),yn=[0,31,60,91,121,152,182,213,244,274,305,335],vn=[0,31,59,90,120,151,181,212,243,273,304,334];function xn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),j()[t>>>2>>>0]=e.getSeconds(),j()[t+4>>>2>>>0]=e.getMinutes(),j()[t+8>>>2>>>0]=e.getHours(),j()[t+12>>>2>>>0]=e.getDate(),j()[t+16>>>2>>>0]=e.getMonth(),j()[t+20>>>2>>>0]=e.getFullYear()-1900,j()[t+24>>>2>>>0]=e.getDay();var n=(bn(e.getFullYear())?yn:vn)[e.getMonth()]+e.getDate()-1|0;j()[t+28>>>2>>>0]=n,j()[t+36>>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),j()[t+32>>>2>>>0]=e}function Mn(e){e>>>=0;var t=new Date(j()[e+20>>>2>>>0]+1900,j()[e+16>>>2>>>0],j()[e+12>>>2>>>0],j()[e+8>>>2>>>0],j()[e+4>>>2>>>0],j()[e>>>2>>>0],0),n=j()[e+32>>>2>>>0],r=t.getTimezoneOffset(),s=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),a=Math.min(i,s);return 0>n?j()[e+32>>>2>>>0]=+(s!=i&&a==r):0<n!=(a==r)&&(s=Math.max(i,s),t.setTime(t.getTime()+6e4*((0<n?a:s)-r))),j()[e+24>>>2>>>0]=t.getDay(),n=(bn(t.getFullYear())?yn:vn)[t.getMonth()]+t.getDate()-1|0,j()[e+28>>>2>>>0]=n,j()[e>>>2>>>0]=t.getSeconds(),j()[e+4>>>2>>>0]=t.getMinutes(),j()[e+8>>>2>>>0]=t.getHours(),j()[e+12>>>2>>>0]=t.getDate(),j()[e+16>>>2>>>0]=t.getMonth(),j()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)}function kn(e,t,n,r,s,i,a){return u?le(16,1,e,t,n,r,s,i,a):-52}function Tn(e,t,n,r,s,i){if(u)return le(17,1,e,t,n,r,s,i)}var $n={},Sn=()=>performance.timeOrigin+performance.now();function Cn(e,t){if(u)return le(18,1,e,t);if($n[e]&&(clearTimeout($n[e].id),delete $n[e]),!t)return 0;var n=setTimeout(()=>{delete $n[e],Tt(()=>wr(e,performance.timeOrigin+performance.now()))},t);return $n[e]={id:n,qc:t},0}function En(e,t,n,r){e>>>=0,t>>>=0,n>>>=0,r>>>=0;var s=(new Date).getFullYear(),i=new Date(s,0,1).getTimezoneOffset();s=new Date(s,6,1).getTimezoneOffset();var a=Math.max(i,s);R()[e>>>2>>>0]=60*a,j()[t>>>2>>>0]=+(i!=s),e=(t=e=>{var t=Math.abs(e);return`UTC${0<=e?"-":"+"}${String(Math.floor(t/60)).padStart(2,"0")}${String(t%60).padStart(2,"0")}`})(i),t=t(s),s<i?(Ie(e,n,17),Ie(t,r,17)):(Ie(e,r,17),Ie(t,n,17))}var Pn=()=>Date.now();function An(e,t,n){return 0<=e&&3>=e?(e=0===e?Date.now():performance.timeOrigin+performance.now(),P[n>>>0>>>3]=BigInt(Math.round(1e6*e)),0):28}var In=[],zn=(e,t)=>{In.length=0;for(var n;n=B()[e++>>>0];){var r=105!=n;t+=(r&=112!=n)&&t%8?4:0,In.push(112==n?R()[t>>>2>>>0]:106==n?P[t>>>3]:105==n?j()[t>>>2>>>0]:G()[t>>>3>>>0]),t+=r?8:4}return In};function Fn(e,t,n){return e>>>=0,t=zn(t>>>0,n>>>0),ee[e](...t)}function On(e,t,n){return e>>>=0,t=zn(t>>>0,n>>>0),ee[e](...t)}var Ln=()=>{};function Bn(e,t){return b(Ce(e>>>0,t>>>0))}var Dn=()=>{throw oe+=1,"unwind"};function Nn(){return 4294901760}var jn=()=>navigator.hardwareConcurrency;function Rn(){return Y("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Vn(e){e>>>=0;var t=B().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);e:{r=(Math.min(4294901760,65536*Math.ceil(Math.max(e,r)/65536))-y.buffer.byteLength+65535)/65536|0;try{y.grow(r),W();var s=1;break e}catch{}s=void 0}if(s)return!0}return!1}var Gn=()=>(Y("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),qn={},Un=e=>{e.forEach(e=>{Gn()})};function Wn(){var e=Error().stack.toString().split("\n");return"Error"==e[0]&&e.shift(),Un(e),qn.Lb=Gn(),qn.cc=e,qn.Lb}function Hn(e,t,n){if(e>>>=0,t>>>=0,qn.Lb==e)var r=qn.cc;else"Error"==(r=Error().stack.toString().split("\n"))[0]&&r.shift(),Un(r);for(var s=3;r[s]&&Gn()!=e;)++s;for(e=0;e<n&&r[e+s];++e)j()[t+4*e>>>2>>>0]=Gn();return e}var Kn,Qn={},Xn=()=>{if(!Kn){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(e in Qn)void 0===Qn[e]?delete t[e]:t[e]=Qn[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Kn=n}return Kn};function Jn(e,t){if(u)return le(19,1,e,t);e>>>=0,t>>>=0;var n=0;return Xn().forEach((r,s)=>{var i=t+n;for(s=R()[e+4*s>>>2>>>0]=i,i=0;i<r.length;++i)L()[s++>>>0]=r.charCodeAt(i);L()[s>>>0]=0,n+=r.length+1}),0}function Yn(e,t){if(u)return le(20,1,e,t);e>>>=0,t>>>=0;var n=Xn();R()[e>>>2>>>0]=n.length;var r=0;return n.forEach(e=>r+=e.length+1),R()[t>>>2>>>0]=r,0}function Zn(e){return u?le(21,1,e):52}function er(e,t,n,r){return u?le(22,1,e,t,n,r):52}function tr(e,t,n,r){return u?le(23,1,e,t,n,r):70}var nr=[null,[],[]];function rr(e,t,n,r){if(u)return le(24,1,e,t,n,r);t>>>=0,n>>>=0,r>>>=0;for(var s=0,i=0;i<n;i++){var a=R()[t>>>2>>>0],o=R()[t+4>>>2>>>0];t+=8;for(var l=0;l<o;l++){var d=B()[a+l>>>0],c=nr[e];0===d||10===d?((1===e?w:b)(Se(c)),c.length=0):c.push(d)}s+=o}return R()[r>>>2>>>0]=s,0}u||function(){for(var e=i.numThreads-1;e--;)be();ie.unshift(()=>{var e;Q++,e=()=>J(),u?e():Promise.all(pe.map(we)).then(e)})}();for(var sr=Array(256),ir=0;256>ir;++ir)sr[ir]=String.fromCharCode(ir);Ue=sr,We=i.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},i.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},rt.push(0,1,void 0,1,null,1,!0,1,!1,1),i.count_emval_handles=()=>rt.length/2-5-nt.length;var ar,or=[ue,de,ke,Ee,Pe,Fe,Oe,Le,Be,De,Ne,je,Re,Ve,Ge,qe,kn,Tn,Cn,Jn,Yn,Zn,er,tr,rr];!async function(){function e(e,t){return ar=e.exports,ar=function(){var e=ar,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?(...e)=>{Vt.push(n);try{return r(...e)}finally{F||(Vt.pop(),jt&&1===Nt&&0===Vt.length&&(Nt=0,oe+=1,Dt($r),typeof Fibers<"u"&&Fibers.rc()))}}:r;return t}(),n=ar,r=e=>t=>e(t)>>>0,s=e=>()=>e()>>>0,(n=Object.assign({},n)).Da=r(n.Da),n.fb=s(n.fb),n.hb=r(n.hb),n.tb=r(n.tb),n.ub=s(n.ub),n.__cxa_get_exception_ptr=r(n.__cxa_get_exception_ptr),ar=n,me.push(ar.ib),v=t,J(),ar;var n,r,s}Q++;var t=Z();if(i.instantiateWasm)return new Promise(n=>{i.instantiateWasm(t,(t,r)=>{e(t,r),n(t.exports)})});if(u)return new Promise(t=>{q=n=>{var r=new WebAssembly.Instance(n,Z());t(e(r,n))}});K??(K=i.locateFile?i.locateFile?i.locateFile("ort-wasm-simd-threaded.jsep.wasm",g):g+"ort-wasm-simd-threaded.jsep.wasm":new URL("/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href);try{var n=await async function(e){var t=K;if(!z&&"function"==typeof WebAssembly.instantiateStreaming&&!O(t))try{var n=fetch(t,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(n,e)}catch(r){b(`wasm streaming compile failed: ${r}`),b("falling back to ArrayBuffer instantiation")}return async function(e,t){try{var n=await async function(e){if(!z)try{var t=await h(e);return new Uint8Array(t)}catch{}if(e==K&&z)e=new Uint8Array(z);else{if(!m)throw"both async and sync fetching of the wasm failed";e=m(e)}return e}(e);return await WebAssembly.instantiate(n,t)}catch(r){b(`failed to asynchronously prepare wasm: ${r}`),Y(r)}}(t,e)}(t);return e(n.instance,n.module)}catch(r){return s(r),Promise.reject(r)}}();var lr=e=>(lr=ar.Da)(e),ur=()=>(ur=ar.Ea)();i._OrtInit=(e,t)=>(i._OrtInit=ar.Fa)(e,t),i._OrtGetLastError=(e,t)=>(i._OrtGetLastError=ar.Ga)(e,t),i._OrtCreateSessionOptions=(e,t,n,r,s,a,o,l,u,d)=>(i._OrtCreateSessionOptions=ar.Ha)(e,t,n,r,s,a,o,l,u,d),i._OrtAppendExecutionProvider=(e,t,n,r,s)=>(i._OrtAppendExecutionProvider=ar.Ia)(e,t,n,r,s),i._OrtAddFreeDimensionOverride=(e,t,n)=>(i._OrtAddFreeDimensionOverride=ar.Ja)(e,t,n),i._OrtAddSessionConfigEntry=(e,t,n)=>(i._OrtAddSessionConfigEntry=ar.Ka)(e,t,n),i._OrtReleaseSessionOptions=e=>(i._OrtReleaseSessionOptions=ar.La)(e),i._OrtCreateSession=(e,t,n)=>(i._OrtCreateSession=ar.Ma)(e,t,n),i._OrtReleaseSession=e=>(i._OrtReleaseSession=ar.Na)(e),i._OrtGetInputOutputCount=(e,t,n)=>(i._OrtGetInputOutputCount=ar.Oa)(e,t,n),i._OrtGetInputOutputMetadata=(e,t,n,r)=>(i._OrtGetInputOutputMetadata=ar.Pa)(e,t,n,r),i._OrtFree=e=>(i._OrtFree=ar.Qa)(e),i._OrtCreateTensor=(e,t,n,r,s,a)=>(i._OrtCreateTensor=ar.Ra)(e,t,n,r,s,a),i._OrtGetTensorData=(e,t,n,r,s)=>(i._OrtGetTensorData=ar.Sa)(e,t,n,r,s),i._OrtReleaseTensor=e=>(i._OrtReleaseTensor=ar.Ta)(e),i._OrtCreateRunOptions=(e,t,n,r)=>(i._OrtCreateRunOptions=ar.Ua)(e,t,n,r),i._OrtAddRunConfigEntry=(e,t,n)=>(i._OrtAddRunConfigEntry=ar.Va)(e,t,n),i._OrtReleaseRunOptions=e=>(i._OrtReleaseRunOptions=ar.Wa)(e),i._OrtCreateBinding=e=>(i._OrtCreateBinding=ar.Xa)(e),i._OrtBindInput=(e,t,n)=>(i._OrtBindInput=ar.Ya)(e,t,n),i._OrtBindOutput=(e,t,n,r)=>(i._OrtBindOutput=ar.Za)(e,t,n,r),i._OrtClearBoundOutputs=e=>(i._OrtClearBoundOutputs=ar._a)(e),i._OrtReleaseBinding=e=>(i._OrtReleaseBinding=ar.$a)(e),i._OrtRunWithBinding=(e,t,n,r,s)=>(i._OrtRunWithBinding=ar.ab)(e,t,n,r,s),i._OrtRun=(e,t,n,r,s,a,o,l)=>(i._OrtRun=ar.bb)(e,t,n,r,s,a,o,l),i._OrtEndProfiling=e=>(i._OrtEndProfiling=ar.cb)(e),i._JsepOutput=(e,t,n)=>(i._JsepOutput=ar.db)(e,t,n),i._JsepGetNodeName=e=>(i._JsepGetNodeName=ar.eb)(e);var dr=()=>(dr=ar.fb)(),cr=i._free=e=>(cr=i._free=ar.gb)(e),pr=i._malloc=e=>(pr=i._malloc=ar.hb)(e),hr=(e,t,n,r,s,i)=>(hr=ar.kb)(e,t,n,r,s,i),mr=()=>(mr=ar.lb)(),fr=(e,t,n,r,s)=>(fr=ar.mb)(e,t,n,r,s),_r=e=>(_r=ar.nb)(e),gr=e=>(gr=ar.ob)(e),wr=(e,t)=>(wr=ar.pb)(e,t),br=()=>(br=ar.qb)(),yr=(e,t)=>(yr=ar.rb)(e,t),vr=e=>(vr=ar.sb)(e),xr=e=>(xr=ar.tb)(e),Mr=()=>(Mr=ar.ub)(),kr=i.dynCall_ii=(e,t)=>(kr=i.dynCall_ii=ar.vb)(e,t),Tr=e=>(Tr=ar.wb)(e),$r=()=>($r=ar.xb)(),Sr=e=>(Sr=ar.yb)(e),Cr=()=>(Cr=ar.zb)();return i.stackSave=()=>Mr(),i.stackRestore=e=>vr(e),i.stackAlloc=e=>xr(e),i.setValue=function(e,t,n="i8"){switch(n.endsWith("*")&&(n="*"),n){case"i1":case"i8":L()[e>>>0]=t;break;case"i16":D()[e>>>1>>>0]=t;break;case"i32":j()[e>>>2>>>0]=t;break;case"i64":P[e>>>3]=BigInt(t);break;case"float":V()[e>>>2>>>0]=t;break;case"double":G()[e>>>3>>>0]=t;break;case"*":R()[e>>>2>>>0]=t;break;default:Y(`invalid type for setValue: ${n}`)}},i.getValue=function(e,t="i8"){switch(t.endsWith("*")&&(t="*"),t){case"i1":case"i8":return L()[e>>>0];case"i16":return D()[e>>>1>>>0];case"i32":return j()[e>>>2>>>0];case"i64":return P[e>>>3];case"float":return V()[e>>>2>>>0];case"double":return G()[e>>>3>>>0];case"*":return R()[e>>>2>>>0];default:Y(`invalid type for getValue: ${t}`)}},i.UTF8ToString=Ce,i.stringToUTF8=Ie,i.lengthBytesUTF8=Ae,function e(){if(0<Q)X=e;else if(u)r(i),H();else{for(;0<ie.length;)ie.shift()(i);0<Q?X=e:(i.calledRun=!0,F||(H(),r(i)))}}(),i.PTR_SIZE=4,a},Oe=Fe,(null==(n=null==(e=globalThis.self)?void 0:e.name)?void 0:n.startsWith("em-pthread"))&&Fe()}),wu=re(()=>{$e(),Le=typeof location>"u"?void 0:location.origin,Be=import.meta.url>"file:"&&import.meta.url<"file;",De=()=>{if(Be){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,Le).href}return import.meta.url},Ne=De(),je=()=>{if(Ne&&!Ne.startsWith("blob:"))return Ne.substring(0,Ne.lastIndexOf("/")+1)},Re=(e,t)=>{try{let n=t??Ne;return(n?new URL(e,n):new URL(e)).origin===Le}catch{return!1}},Ve=(e,t)=>{let n=t??Ne;try{return(n?new URL(e,n):new URL(e)).href}catch{return}},Ge=(e,t)=>`${t??"./"}${e}`,qe=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Ue=async e=>(await import(e)).default,We=(Ae(),ie(Se)).default,He=async()=>{if(!Ne)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(Re(Ne))return[void 0,We()];let e=await qe(Ne);return[e,We(e)]},Ke=(gu(),ie(Ie)).default,Qe=async(e,t,n)=>{if(!e&&!t&&Ke&&Ne&&Re(Ne))return[void 0,Ke];{let r="ort-wasm-simd-threaded.jsep.mjs",s=e??Ve(r,t),i=n&&s&&!Re(s,t),a=i?await qe(s):s??Ge(r,t);return[i?a:void 0,await Ue(a)]}}}),bu=re(()=>{wu(),Je=!1,Ye=!1,Ze=!1,et=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},tt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},nt=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},rt=async e=>{if(Je)return Promise.resolve();if(Ye)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Ze)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ye=!0;let t=e.initTimeout,n=e.numThreads;if(!1!==e.simd)if("relaxed"===e.simd){if(!nt())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!tt())throw new Error("WebAssembly SIMD is not supported in the current environment.");let r=et();n>1&&!r&&(typeof self<"u"&&self.crossOriginIsolated,e.numThreads=n=1);let s=e.wasmPaths,i="string"==typeof s?s:void 0,a=null==s?void 0:s.mjs,o=(null==a?void 0:a.href)??a,l=null==s?void 0:s.wasm,u=(null==l?void 0:l.href)??l,d=e.wasmBinary,[c,p]=await Qe(o,i,n>1),h=!1,m=[];if(t>0&&m.push(new Promise(e=>{setTimeout(()=>{h=!0,e()},t)})),m.push(new Promise((e,t)=>{let r={numThreads:n};if(d)r.wasmBinary=d;else if(u||i)r.locateFile=e=>u??i+e;else if(o&&0!==o.indexOf("blob:"))r.locateFile=e=>new URL(e,o).href;else if(c){let e=je();e&&(r.locateFile=t=>e+t)}p(r).then(t=>{Ye=!1,Je=!0,Xe=t,e(),c&&URL.revokeObjectURL(c)},e=>{Ye=!1,Ze=!0,t(e)})})),await Promise.race(m),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},st=()=>{if(Je&&Xe)return Xe;throw new Error("WebAssembly is not initialized yet.")}}),yu=re(()=>{bu(),it=(e,t)=>{let n=st(),r=n.lengthBytesUTF8(e)+1,s=n._malloc(r);return n.stringToUTF8(e,s,r),t.push(s),s},at=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach(([e,s])=>{let i=t?t+e:e;if("object"==typeof s)at(s,i+".",n,r);else if("string"==typeof s||"number"==typeof s)r(i,s.toString());else{if("boolean"!=typeof s)throw new Error("Can't handle extra config type: "+typeof s);r(i,s?"1":"0")}})},ot=e=>{let t=st(),n=t.stackSave();try{let n=t.PTR_SIZE,r=t.stackAlloc(2*n);t._OrtGetLastError(r,r+n);let s=Number(t.getValue(r,4===n?"i32":"i64")),i=t.getValue(r+n,"*"),a=i?t.UTF8ToString(i):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}}),vu=re(()=>{bu(),yu(),lt=e=>{let t=st(),n=0,r=[],s=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(s.terminate=!1);let i=0;return void 0!==(null==e?void 0:e.tag)&&(i=it(e.tag,r)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,i),0===n&&ot("Can't create run options."),void 0!==(null==e?void 0:e.extra)&&at(e.extra,"",new WeakSet,(e,s)=>{let i=it(e,r),a=it(s,r);0!==t._OrtAddRunConfigEntry(n,i,a)&&ot(`Can't set a run config entry: ${e} - ${s}.`)}),[n,r]}catch(i){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach(e=>t._free(e)),i}}}),xu=re(()=>{bu(),yu(),ut=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},dt=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},ct=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(e=>"webgpu"===("string"==typeof e?e:e.name))&&(e.enableMemPattern=!1)},pt=(e,t,n,r)=>{let s=it(t,r),i=it(n,r);0!==st()._OrtAddSessionConfigEntry(e,s,i)&&ot(`Can't set a session config entry: ${t} - ${n}.`)},ht=async(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name,s=[];switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=null==r?void 0:r.deviceType;t&&pt(e,"deviceType",t,n)}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(null==t?void 0:t.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);pt(e,"preferredLayout",t.preferredLayout,n)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let i=it(t,n),a=s.length,o=0,l=0;if(a>0){o=st()._malloc(a*st().PTR_SIZE),n.push(o),l=st()._malloc(a*st().PTR_SIZE),n.push(l);for(let e=0;e<a;e++)st().setValue(o+e*st().PTR_SIZE,s[e][0],"*"),st().setValue(l+e*st().PTR_SIZE,s[e][1],"*")}0!==await st()._OrtAppendExecutionProvider(e,i,o,l,a)&&ot(`Can't append execution provider: ${t}.`)}},mt=async e=>{let t=st(),n=0,r=[],s=e||{};ct(s);try{let e=ut(s.graphOptimizationLevel??"all"),i=dt(s.executionMode??"sequential"),a="string"==typeof s.logId?it(s.logId,r):0,o=s.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let l=s.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let u="string"==typeof s.optimizedModelFilePath?it(s.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!s.enableCpuMemArena,!!s.enableMemPattern,i,!!s.enableProfiling,0,a,o,l,u),0===n&&ot("Can't create session options."),s.executionProviders&&await ht(n,s.executionProviders,r),void 0!==s.enableGraphCapture){if("boolean"!=typeof s.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);pt(n,"enableGraphCapture",s.enableGraphCapture.toString(),r)}if(s.freeDimensionOverrides)for(let[d,c]of Object.entries(s.freeDimensionOverrides)){if("string"!=typeof d)throw new Error(`free dimension override name must be a string: ${d}`);if("number"!=typeof c||!Number.isInteger(c)||c<0)throw new Error(`free dimension override value must be a non-negative integer: ${c}`);let e=it(d,r);0!==t._OrtAddFreeDimensionOverride(n,e,c)&&ot(`Can't set a free dimension override: ${d} - ${c}.`)}return void 0!==s.extra&&at(s.extra,"",new WeakSet,(e,t)=>{pt(n,e,t,r)}),[n,r]}catch(i){throw 0!==n&&0!==t._OrtReleaseSessionOptions(n)&&ot("Can't release session options."),r.forEach(e=>t._free(e)),i}}}),Mu=re(()=>{ft=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},_t=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},gt=(e,t)=>{let n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],r="number"==typeof t?t:t.reduce((e,t)=>e*t,1);return n>0?Math.ceil(r*n):void 0},wt=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},bt=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},yt=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,vt=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint64"===e||"int8"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,xt=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),ku=re(()=>{$e(),Mt=async e=>{if("string"==typeof e){let n=await fetch(e);if(!n.ok)throw new Error(`failed to load external data file: ${e}`);let r=n.headers.get("Content-Length"),s=r?parseInt(r,10):0;if(s<1073741824)return new Uint8Array(await n.arrayBuffer());{if(!n.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let r,i=n.body.getReader();try{r=new ArrayBuffer(s)}catch(t){if(!(t instanceof RangeError))throw t;{let e=Math.ceil(s/65536);r=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let a=0;for(;;){let{done:e,value:t}=await i.read();if(e)break;let n=t.byteLength;new Uint8Array(r,a,n).set(t),a+=n}return new Uint8Array(r,0,s)}}return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Tu=re(()=>{Mu(),$t=(e,t)=>{kt=e,Tt=t},St=(e,t)=>{let n=bt(e);n>=bt(kt)&&"function"==typeof t&&t()},Ct=(...e)=>{Tt&&St(...e)}}),$u=re(()=>{Et=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Pt=class{static calcShape(e,t,n=!1){let r=e.length,s=t.length;if(0===r)return t;if(0===s)return e;let i=Math.max(e.length,t.length),a=new Array(i);if(n){if(r<2||s<2)return;let n=Et.calcMatMulShape([e[r-2],e[r-1]],[t[s-2],t[s-1]]);if(void 0===n)return;[a[i-2],a[i-1]]=n}for(let o=n?3:1;o<=i;o++){let n=r-o<0?1:e[r-o],l=s-o<0?1:t[s-o];if(n!==l&&n>1&&l>1)return;let u=Math.max(n,l);if(n&&l)a[i-o]=Math.max(n,l);else{if(u>1)return;a[i-o]=0}}return a}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let s=1;s<=n;s++)if(1!==e[n-s]&&e[n-s]!==t[r-s])return!1;return!0}},At=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){let n=e.length;if(0===n)return[];let r=new Array(n),s=n-1;for(;s>=0;){if(e[s]%t===0){r[s]=e[s]/t;break}if(t%e[s]!==0)throw new Error("cannot convert shape");r[s]=1,t/=e[s],s--}for(s--;s>=0;s--)r[s]=e[s];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let s=t;s<n;s++){if(e[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=Number(e[s])}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map(n=>this.normalizeAxis(n,t??e.length))}static sortBasedOnPerm(e,t){return t?t.map(t=>e[t]):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map((e,r)=>e+t[r]+t[r+n])}static areEqual(e,t){return e.length===t.length&&e.every((e,n)=>e===t[n])}},It=class e{static adjustPoolAttributes(e,t,n,r,s,i){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let a=0;a<t.length-2;a++)a>=n.length?n.push(t[a+2]):n[a]=t[a+2];for(let a=0;a<n.length;a++)if(a<r.length){if(r[a]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let a=0;a<n.length;a++)if(a<s.length){if(s[a]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let a=0;a<2*n.length;a++)if(a<i.length){if(i[a]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let a=0;a<n.length;a++){if(n[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[a]>=n[a]||i[a+n.length]>=n[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,s,i,a,o){if(o){if(i.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(a?1:2)],n[l],r[l],s[l],i,l,l+t.length-2,o)}}static computePoolOutputShape(t,n,r,s,i,a,o){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,s,i,a,o),l}static computeConvOutputShape(t,n,r,s,i,a,o){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,s,i,a,o),l}static computeShapeHelper(t,n,r,s,i,a,o,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let u=0;u<n.length-2;u++)r.push(e.adjustPadAndReturnShape(n[u+2],s[u],i[u],a[u],o,u,u+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,s,i,a,o){let l=n*(r-1)+1;if(!o||"NOTSET"===o)return Math.floor((e+s[i]+s[a]-l)/t+1);switch(o){case"VALID":return s[i]=0,s[a]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return s[i]=Math.floor("SAME_LOWER"===o?(n+1)/2:n/2),s[a]=n-s[i],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},zt=class{static getShapeOfGemmResult(e,t,n,r,s){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let i,a,o;t?(i=e[1],a=e[0]):(i=e[0],a=e[1]);let l=-1;if(r?(o=n[0],l=1):(o=n[1],l=0),n[l]!==a)throw new Error("dimension mismatch");if(i<=0||o<=0||a<=0)throw new Error("invalid shape specified");if(s&&!Pt.isValidBroadcast(s,[i,o]))throw new Error("gemm: invalid bias shape for broadcast");return[i,o,a]}},Ft=-34028234663852886e22,Ot=34028234663852886e22}),Su=re(()=>{Mu(),Lt=(e,t)=>new(wt(t))(e)}),Cu=re(()=>{Tu(),Bt=(e,t=!0)=>{if(e.byteLength%8!=0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let n=e.byteLength/8,r=new BigInt64Array(e.buffer,e.byteOffset,n),s=new Int32Array(n);for(let i=0;i<n;i++){let e=r[i];if(e>2147483647n||e<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${i}: ${e}`);s[i]=Number(e)}return t?new Uint8Array(s.buffer):s},Dt=(e,t=!0)=>{if(e.byteLength%4!=0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let n=e.byteLength/4,r=new Int32Array(e.buffer,e.byteOffset,n),s=BigInt64Array.from(r,BigInt);return t?new Uint8Array(s.buffer):s},Nt=1,jt=()=>Nt++,Rt=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Vt=(e,t)=>{let n=Rt.get(e);if(!n)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce((e,t)=>e*t)*n/8):0},Gt=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:t,context:n,tensor:r,dataType:s,shape:i,shouldConvertInt64toInt32:a=!1}=e;this.sessionId=t,this.mlContext=n,this.mlTensor=r,this.dataType=s,this.tensorShape=i,this.shouldConvertInt64toInt32=a}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Vt(this.dataType,this.tensorShape)}destroy(){Ct("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,t){if(e){let e=await this.mlContext.readTensor(this.mlTensor),n=Dt(new Uint8Array(e));return t?void(t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength)).set(n):n.buffer}return t?this.mlContext.readTensor(this.mlTensor,t):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,t,n){return this.mlContext===e&&this.dataType===t&&this.tensorShape.length===n.length&&this.tensorShape.every((e,t)=>e===n[t])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},qt=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,n,r){let s=t,i=this.tensorManager.getMLContext(e),a="int64"===s&&!i.opSupportLimits().input.dataTypes.includes("int64");if(a&&(s="int32",Ct("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(i,s,n))return this.wrapper.tensor;if(r){if(this.wrapper.byteLength!==Vt(s,n))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let o=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,s,n,o,!0,!0,a),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let t=e;if(this.wrapper){if(this.wrapper.shouldConvertInt64toInt32&&(t=Bt(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),t.byteLength===this.wrapper.byteLength)return void this.wrapper.write(t);Ct("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor()}this.activeUpload?this.activeUpload.set(t):this.activeUpload=new Uint8Array(t)}async download(e){var t,n,r;if(this.activeUpload){let n=(null==(t=this.wrapper)?void 0:t.isInt64ToInt32Converted)?Dt(this.activeUpload):this.activeUpload;return e?void(e instanceof ArrayBuffer?new Uint8Array(e).set(n):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(n)):n.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(null==(n=this.wrapper)?void 0:n.shouldConvertInt64toInt32,e):this.wrapper.read(null==(r=this.wrapper)?void 0:r.shouldConvertInt64toInt32)}},Ut=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let t=this.backend.getMLContext(e);if(!t)throw new Error("MLContext not found for session.");return t}reserveTensorId(){let e=jt();return this.tensorTrackersById.set(e,new qt(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,n,r,s){Ct("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${t}, dataType: ${n}, shape: ${r}, copyOld: ${s}}`);let i=this.tensorTrackersById.get(t);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(e,n,r,s)}upload(e,t){let n=this.tensorTrackersById.get(e);if(!n)throw new Error("Tensor not found.");n.upload(t)}async download(e,t){Ct("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${null==t?void 0:t.byteLength}}`);let n=this.tensorTrackersById.get(e);if(!n)throw new Error("Tensor not found.");return n.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter(t=>t.sessionId!==e)}registerTensor(e,t,n,r){let s=this.getMLContext(e),i=jt(),a=new Gt({sessionId:e,context:s,tensor:t,dataType:n,shape:r});return this.tensorTrackersById.set(i,new qt(this,a)),this.externalTensors.add(a),i}async getCachedTensor(e,t,n,r,s,i,a=!1){let o=this.getMLContext(e);for(let[u,d]of this.freeTensors.entries())if(d.canReuseTensor(o,t,n)){Ct("verbose",()=>`[WebNN] Reusing tensor {dataType: ${t}, shape: ${n}}`);let r=this.freeTensors.splice(u,1)[0];return r.sessionId=e,r}Ct("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${t}, shape: ${n}}`);let l=await o.createTensor({dataType:t,shape:n,dimensions:n,usage:r,writable:s,readable:i});return new Gt({sessionId:e,context:o,tensor:l,dataType:t,shape:n,shouldConvertInt64toInt32:a})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Wt=(...e)=>new Ut(...e)}),Eu=re(()=>{Mu(),bu(),Su(),Cu(),Tu(),Ht=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Kt=(e,t)=>{if(e===t)return!0;if(void 0===e||void 0===t)return!1;let n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every((n,s)=>n===r[s]&&e[n]===t[n])},Qt=class{constructor(e){this.tensorManager=Wt(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,$t(e.logLevel,!!e.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw new Error("No active session");return this.activeSessionId}onRunStart(e){Ct("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){Ct("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let t=this.temporarySessionTensorIds.get(e);if(t){for(let e of t)Ct("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(t=>t.gpuDevice===e);if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:t}),t}}if(void 0===e){let e=this.mlContextCache.findIndex(e=>void 0===e.options&&void 0===e.gpuDevice);if(-1!==e)return this.mlContextCache[e].mlContext;{let e=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:e}),e}}let t=this.mlContextCache.findIndex(t=>Kt(t.options,e));if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let n=this.sessionIdsByMLContext.get(t);n||(n=new Set,this.sessionIdsByMLContext.set(t,n)),n.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let n=this.sessionIdsByMLContext.get(t);if(n.delete(e),0===n.size){this.sessionIdsByMLContext.delete(t);let e=this.mlContextCache.findIndex(e=>e.mlContext===t);-1!==e&&this.mlContextCache.splice(e,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Ct("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,n,r,s){let i=Ht.get(n);if(!i)throw new Error(`Unsupported ONNX data type: ${n}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,t,i,r,s)}async createTemporaryTensor(e,t,n){Ct("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${t}, shape: ${n}}`);let r=Ht.get(t);if(!r)throw new Error(`Unsupported ONNX data type: ${t}`);let s=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,s,r,n,!1);let i=this.temporarySessionTensorIds.get(e);return i?i.push(s):this.temporarySessionTensorIds.set(e,[s]),s}uploadTensor(e,t){if(!st().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Ct("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let n=await this.tensorManager.download(e);return Lt(n,t)}}registerMLTensor(e,t,n,r){let s=Ht.get(n);if(!s)throw new Error(`Unsupported ONNX data type: ${n}`);let i=this.tensorManager.registerTensor(e,t,s,r);return Ct("verbose",()=>`[WebNN] registerMLTensor {tensor: ${t}, dataType: ${s}, dimensions: ${r}} -> {tensorId: ${i}}`),i}registerMLConstant(e,t,n,r,s,i,a=!1){if(!i)throw new Error("External mounted files are not available.");let o=e;e.startsWith("./")&&(o=e.substring(2));let l=i.get(o);if(!l)throw new Error(`File with name ${o} not found in preloaded files.`);if(t+n>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let u,d=l.slice(t,t+n).buffer;switch(s.dataType){case"float32":u=new Float32Array(d);break;case"float16":u=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(d):new Uint16Array(d);break;case"int32":u=new Int32Array(d);break;case"uint32":u=new Uint32Array(d);break;case"int64":a?(u=Bt(new Uint8Array(d),!1),s.dataType="int32"):u=new BigInt64Array(d);break;case"uint64":u=new BigUint64Array(d);break;case"int8":u=new Int8Array(d);break;case"int4":case"uint4":case"uint8":u=new Uint8Array(d);break;default:throw new Error(`Unsupported data type: ${s.dataType} in creating WebNN Constant from external data.`)}return Ct("verbose",()=>`[WebNN] registerMLConstant {dataType: ${s.dataType}, shape: ${s.shape}}} ${a?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),r.constant(s,u)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,t){let n=this.sessionGraphInputs.get(e);return!!n&&n.includes(t)}isInt64Supported(e){var t;return!!(null==(t=this.mlContextBySessionId.get(e))?void 0:t.opSupportLimits().input.dataTypes.includes("int64"))}flush(){}}}),Pu=re(()=>{}),Au=re(()=>{Tu(),Pu(),Xt=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Jt=[],Yt=e=>16*Math.ceil(Number(e)/16),Zt=e=>{for(let t=0;t<Jt.length;t++){let n=Jt[t];if(e<=n)return n}return 16*Math.ceil(e/16)},en=1,tn=()=>en++,nn=async(e,t,n,r)=>{let s=Yt(n),i=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,i,0,s),e.flush(),await i.mapAsync(GPUMapMode.READ);let o=i.getMappedRange();if(r){let e=r();return e.set(new Uint8Array(o,0,n)),e}return new Uint8Array(o.slice(0,n))}finally{i.destroy()}},rn=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[t]of Xt)Jt.push(t),this.freeBuffers.set(t,[]),this.freeUniformBuffers.set(t,[]);this.sessionCount=0}upload(e,t){let n=t.buffer,r=t.byteOffset,s=t.byteLength,i=Yt(s),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(Number(a.originalSize)!==s)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${s}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,s)),o.unmap();let u=this.backend.device.createCommandEncoder();u.copyBufferToBuffer(o,0,a.gpuData.buffer,0,i),this.backend.device.queue.submit([u.finish()]),o.destroy(),Ct("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Yt(n.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,s)}registerExternalBuffer(e,t,n){let r;if(n){if(r=n[0],e===n[1])return Ct("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!")}else r=tn();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),Ct("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`),r}unregisterExternalBuffer(e){void 0!==e&&(this.storageCache.delete(e),Ct("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,r=Zt(e),s=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||i){let e=(s?this.freeBuffers:this.freeUniformBuffers).get(r);n=e&&e.length>0?e.pop():this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let a={id:tn(),type:0,buffer:n};return this.storageCache.set(a.id,{gpuData:a,originalSize:Number(e)}),Ct("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`),a}get(e){var t;return null==(t=this.storageCache.get(e))?void 0:t.gpuData}release(e){let t="bigint"==typeof e?Number(e):e,n=this.storageCache.get(t);if(!n){if(0===this.storageCache.size)return 0;throw new Error("releasing data does not exist")}return Ct("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${n.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,t){let n=this.storageCache.get(Number(e));if(!n)throw new Error("data does not exist");await nn(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){if(0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending){let t=Xt.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let n=this.freeBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let n=this.freeUniformBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(e=>{e.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(e=>{e.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(e=>{e.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach(e=>{e.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,0===this.sessionCount&&(Ct("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.storageCache=new Map)}},sn=(...e)=>new rn(...e)}),Iu=re(()=>{an=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},on=e=>new an(e)}),zu=re(()=>{Mu(),$u(),ln=64,un=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},dn=(e,t=1)=>{let n=un(e,t);return"string"==typeof n?n:n[0]},cn=(e,t=1)=>{let n=un(e,t);return"string"==typeof n?n:n[1]},pn=(...e)=>{let t=[];return e.forEach(e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:At.computeStrides(e)})}),t},hn=e=>e%4==0?4:e%2==0?2:1,mn=(e="f32",t,n="0")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,fn=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}<f32>(${n})`,_n=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,gn=(e,t,n,r)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,wn=(e,t,n,r,s)=>{let i="number"==typeof n,a=i?n:n.length,o=[...new Array(a).keys()],l=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,u=un(t,s),d="string"==typeof u?u:u[1],c="string"==typeof u?u:u[0],p={indices:l,value:d,storage:c,tensor:t},h=e=>"string"==typeof e?e:`${e}u`,m={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},f=i?"uniforms.":"",_=`${f}${e}_shape`,g=`${f}${e}_strides`,w="";for(let A=0;A<a-1;A++)w+=`\n    let dim${A} = current / ${gn(g,A,a)};\n    let rest${A} = current % ${gn(g,A,a)};\n    indices[${A}] = dim${A};\n    current = rest${A};\n    `;w+=`indices[${a-1}] = current;`;let b=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${w}\n    return indices;\n  }`,y=[];if(a>=2)for(let A=a-1;A>=0;A--)y.push(`${gn(g,A,a)} * (indices[${A}])`);let v=a<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${y.join("+")};\n  }`,x=(...e)=>0===a?"0u":`${p.indices}(${e.map(h).join(",")})`,M=(e,t)=>a<2?`${e}`:`${gn(e,t,a)}`,k={},T=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),$=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),S=a<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${d} {\n    return ${$(`i2o_${e}(indices)`)};\n  }`,C=a<2?"":(()=>{let t=o.map(e=>`d${e}: u32`).join(", "),n=o.map(e=>`d${e}`).join(", ");return`\n  fn get_${e}(${t}) -> ${d} {\n    return get_${e}ByIndices(${x(n)});\n  }`})(),E=a<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${d}) {\n    ${T(`i2o_${e}(indices)`,"value")}\n  }`,P=a<2?"":(()=>{let t=o.map(e=>`d${e}: u32`).join(", "),n=o.map(e=>`d${e}`).join(", ");return`\n  fn set_${e}(${t}, value: ${d}) {\n    set_${e}ByIndices(${x(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return m.offsetToIndices&&(e.push(b),t=!0),m.indicesToOffset&&(e.push(v),t=!0),m.broadcastedIndicesToOffset&&(Object.values(k).forEach(t=>e.push(t)),t=!0),m.set&&(e.push(P),t=!0),m.setByIndices&&(e.push(E),t=!0),m.get&&(e.push(C),t=!0),m.getByIndices&&(e.push(S),t=!0),!i&&t&&e.unshift(`const ${_} = ${p.indices}(${n.join(",")});`,`const ${g} = ${p.indices}(${At.computeStrides(n).join(",")});`),e.join("\n")},type:p,offsetToIndices:t=>(m.offsetToIndices=!0,a<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(m.indicesToOffset=!0,a<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{m.broadcastedIndicesToOffset=!0;let r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in k)return`${r}(${t})`;let s=[];for(let e=a-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-a);s.push(`${M(g,e)} * (${t} % ${M(_,e)})`)}return k[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${s.length>0?s.join("+"):"0u"};\n           }`,`${r}(${t})`},indices:x,indicesGet:M,indicesSet:(e,t,n)=>a<2?`${e}=${n};`:`${gn(e,t,a)}=${n};`,set:(...t)=>{if(t.length!==a+1)throw new Error(`indices length must be ${a}`);let n=t[a];if("string"!=typeof n)throw new Error("value must be string");let r=t.slice(0,a).map(h).join(",");return 0===a?T("0u",n):1===a?T(r[0],n):(m.set=!0,m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:T,setByIndices:(t,n)=>a<2?T(t,n):(m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==a)throw new Error(`indices length must be ${a}`);let n=t.map(h).join(",");return 0===a?$("0u"):1===a?$(n[0]):(m.get=!0,m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:$,getByIndices:t=>a<2?$(t):(m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:g,shape:_,rank:a}},bn=(e,t,n,r=1)=>wn(e,t,n,"input",r),yn=(e,t,n,r=1)=>wn(e,t,n,"output",r),vn=(e,t,n)=>wn(e,t,n,"atomicOutput",1),xn=(e,t,n,r=1)=>wn(e,t,n,"internal",r),Mn=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=ln){let t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||n>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*n*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let s=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\n  fn main(${s?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${s?"let global_idx = global_id.x;\n         let workgroup_index = workgroup_id.x;":`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n             workgroup_id.y * num_workgroups[0] + workgroup_id.x;\n         let global_idx = workgroup_index * ${t*n*r}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",r="atomicOutput"===e.usage?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map(e=>this.declareVariable(e,this.variableIndex++)).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(e=>this.registerInternalVariable(e)),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{let s=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${s}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join("\n")+this.internalVariables.map(e=>e.impl()).join("\n")}get variablesInfo(){if(0===this.uniforms.length)return;let e=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map(t=>[e(t.type),t.length??1])}},kn=(e,t)=>new Mn(e,t)}),Fu=re(()=>{Mu(),$u(),Iu(),zu(),Tn=(e,t)=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(0!==t.length&&t.length!==e[0].dims.length)throw new Error(`perm size ${t.length} does not match input rank ${e[0].dims.length}`)},$n=(e,t)=>0!==t.length?t:[...new Array(e).keys()].reverse(),Sn=(e,t)=>At.sortBasedOnPerm(e,$n(e.length,t)),Cn=(e,t,n,r)=>{let s=`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`;for(let i=0;i<t;++i)s+=`a[${e[i]}]=i[${i}];`;return s+"return a;}"},En=(e,t)=>{let n=[],r=[];for(let s=0;s<e.length;++s)1!==e[s]&&n.push(e[s]),1!==e[t[s]]&&r.push(t[s]);return{newShape:n,newPerm:r}},Pn=(e,t)=>{let n=0;for(let r=0;r<e.length;++r)if(1!==t[e[r]]){if(e[r]<n)return!1;n=e[r]}return!0},An=(e,t)=>{let n,r=e.dataType,s=e.dims.length,i=$n(s,t),a=Sn(e.dims,i),o=e.dims,l=a;if(s<2||Pn(i,e.dims))return n=e=>{let t=bn("input",r,o,4),n=yn("output",r,l,4);return`\n  ${e.registerUniform("output_size","u32").declareVariables(t,n)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    output[global_idx] = input[global_idx];\n  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let t=At.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(t/64/4)},programUniforms:[{type:12,data:Math.ceil(t/4)}]}},getShaderSource:n};let{newShape:u,newPerm:d}=En(e.dims,i),c=At.areEqual(d,[2,3,1]),p=At.areEqual(d,[3,1,2]);if(2===u.length||c||p){o=c?[u[0],u[1]*u[2]]:p?[u[0]*u[1],u[2]]:u,l=[o[1],o[0]];let t=16;return n=e=>{let n=bn("a",r,o.length),s=yn("output",r,l.length);return`\n  ${e.registerUniform("output_size","u32").declareVariables(n,s)}\n  var<workgroup> tile : array<array<${s.type.value}, ${t+1}>, ${t}>;\n  ${e.mainStart([t,t,1])}\n    let stride = (uniforms.output_shape[1] - 1) / ${t} + 1;\n    let workgroup_id_x = workgroup_index % stride;\n    let workgroup_id_y = workgroup_index / stride;\n    let input_col = workgroup_id_y * ${t}u + local_id.x;\n    let input_row = workgroup_id_x * ${t}u + local_id.y;\n    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {\n      tile[local_id.y][local_id.x] = ${n.getByIndices(`${n.type.indices}(input_row, input_col)`)};\n    }\n    workgroupBarrier();\n\n    let output_col = workgroup_id_x * ${t}u + local_id.x;\n    let output_row = workgroup_id_y * ${t}u + local_id.y;\n    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {\n      ${s.setByIndices(`${s.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}\n    }\n  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let n=At.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(l[1]/t),y:Math.ceil(l[0]/t)},programUniforms:[{type:12,data:n},...pn(o,l)]}},getShaderSource:n}}return n=e=>{let t=bn("a",r,o.length),n=yn("output",r,l.length);return`\n  ${e.registerUniform("output_size","u32").declareVariables(t,n)}\n\n  ${Cn(i,s,t,n)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${n.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${n.setByOffset("global_idx",t.getByIndices("aIndices"))}\n  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let t=At.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...pn(o,l)]}},getShaderSource:n}},In=(e,t)=>{Tn(e.inputs,t.perm),e.compute(An(e.inputs[0],t.perm))},zn=e=>on({perm:e.perm})}),Ou=re(()=>{Mu(),$u(),zu(),Lu(),Fu(),Fn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},On={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ln={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Bn={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Dn=(e,t)=>{let n=[];for(let r=t-e;r<t;++r)n.push(r);return n},Nn=(e,t)=>{let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map(t=>e[t])]},jn=(e,t)=>{let n=e.length+t.length,r=[],s=0;for(let i=0;i<n;i++)-1===t.indexOf(i)?r.push(e[s++]):r.push(1);return r},Rn=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},Vn=(e,t)=>{let n=[];if(!Rn(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach(e=>n.push(e))}return n},Gn=(e,t,n,r,s,i,a)=>{let o=n[0].dims,l=At.size(i),u=At.size(a),d=bn("_A",n[0].dataType,o),c=yn("output",s,i),p=64;1===l&&(p=256);let h=`\n          var<workgroup> aBestValues : array<f32, ${p}>;\n       `;return{name:e,shaderCache:{hint:`${t};${p}`,inputDependencies:["type"]},getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(d,c)}\n        ${h}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(p)}\n\n          let outputIndex = global_idx / ${p};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ln[r]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${p}) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Fn[r]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${p}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${On[r]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${c.setByOffset("outputIndex",""+("mean"===r?`${c.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${c.type.storage}(${Bn[r]})`))};\n         }\n        }`,getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},qn=(e,t,n,r)=>{let s=1===e.inputs.length?n:sr(e.inputs,n),i=s.axes;0===i.length&&!s.noopWithEmptyAxes&&(i=e.inputs[0].dims.map((e,t)=>t));let a=At.normalizeAxes(i,e.inputs[0].dims.length),o=a,l=e.inputs[0],u=Vn(o,e.inputs[0].dims.length);u.length>0&&(l=e.compute(An(e.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=Dn(o.length,l.dims.length));let[d,c]=Nn(l.dims,o),p=d;s.keepDims&&(p=jn(d,a)),e.compute(Gn(t,s.cacheKey,[l],r,e.inputs[0].dataType,p,c),{inputs:[l]})},Un=(e,t)=>{qn(e,"ReduceMeanShared",t,"mean")},Wn=(e,t)=>{qn(e,"ReduceL1Shared",t,"l1")},Hn=(e,t)=>{qn(e,"ReduceL2Shared",t,"l2")},Kn=(e,t)=>{qn(e,"ReduceLogSumExpShared",t,"logSumExp")},Qn=(e,t)=>{qn(e,"ReduceMaxShared",t,"max")},Xn=(e,t)=>{qn(e,"ReduceMinShared",t,"min")},Jn=(e,t)=>{qn(e,"ReduceProdShared",t,"prod")},Yn=(e,t)=>{qn(e,"ReduceSumShared",t,"sum")},Zn=(e,t)=>{qn(e,"ReduceSumSquareShared",t,"sumSquare")},er=(e,t)=>{qn(e,"ReduceLogSumShared",t,"logSum")}}),Lu=re(()=>{Mu(),$u(),Iu(),zu(),Ou(),tr=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},nr=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],rr=(e,t,n,r,s,i,a=!1,o=!1)=>{let l=[],u=n[0].dims,d=u.length,c=At.normalizeAxes(s,d),p=!o&&0===c.length;u.forEach((e,t)=>{p||c.indexOf(t)>=0?a&&l.push(1):l.push(e)});let h=l.length,m=At.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],s=bn("_A",n[0].dataType,d),o=yn("output",i,h),l=r(s,o,c),m=l[2];for(let n=0,r=0;n<d;n++)p||c.indexOf(n)>=0?(a&&r++,m=`for(var j${n}: u32 = 0; j${n} < ${u[n]}; j${n}++) {\n                  ${l[2].includes("last_index")?`let last_index = j${n};`:""}\n                  ${s.indicesSet("input_indices",n,`j${n}`)}\n                  ${m}\n                }`):(t.push(`${s.indicesSet("input_indices",n,o.indicesGet("output_indices",r))};`),r++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(s,o)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${s.type.indices};\n          let output_indices = ${o.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${l[0]}       // init ops for reduce max/min\n          ${l[1]}\n          ${m}\n          ${l[3]}\n          ${4===l.length?o.setByOffset("global_idx","value"):l.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...pn(u,l)]})}},sr=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(e=>n.push(Number(e))),on({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},ir=(e,t,n,r)=>{let s=e.inputs,i=1===s.length?n:sr(s,n);e.compute(rr(t,{hint:i.cacheKey,inputDependencies:["rank"]},[s[0]],i.noopWithEmptyAxes&&0===i.axes.length?nr:r,i.axes,s[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},ar=(e,t)=>{tr(e.inputs),ir(e,"ReduceLogSum",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"])},or=(e,t)=>{tr(e.inputs),ir(e,"ReduceL1",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""])},lr=(e,t)=>{tr(e.inputs),ir(e,"ReduceL2",t,(e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},ur=(e,t)=>{tr(e.inputs),ir(e,"ReduceLogSumExp",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"])},dr=(e,t)=>{tr(e.inputs),ir(e,"ReduceMax",t,(e,t,n)=>{let r=[];for(let s=0;s<e.rank;s++)(n.indexOf(s)>=0||0===n.length)&&r.push(e.indicesSet("input_indices",s,0));return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]})},cr=(e,t)=>{tr(e.inputs),ir(e,"ReduceMean",t,(t,n,r)=>{let s=1;for(let i=0;i<t.rank;i++)(r.indexOf(i)>=0||0===r.length)&&(s*=e.inputs[0].dims[i]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]})},pr=(e,t)=>{tr(e.inputs),ir(e,"ReduceMin",t,(e,t,n)=>{let r=[];for(let s=0;s<e.rank;s++)(n.indexOf(s)>=0||0===n.length)&&r.push(`input_indices[${s}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]})},hr=(e,t)=>{tr(e.inputs),ir(e,"ReduceProd",t,(e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""])},mr=(e,t)=>{tr(e.inputs),ir(e,"ReduceSum",t,(e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""])},fr=(e,t)=>{tr(e.inputs),ir(e,"ReduceSumSquare",t,(e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""])},_r=(e,t,n)=>{if(0===t.length)return n;let r=1,s=1;for(let i=0;i<t.length;i++)-1===t.indexOf(i)?r*=e[i]:s*=e[i];return s<32&&r>1024},gr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?cr(e,t):Un(e,t)},wr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?or(e,t):Wn(e,t)},br=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?lr(e,t):Hn(e,t)},yr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ur(e,t):Kn(e,t)},vr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?dr(e,t):Qn(e,t)},xr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?pr(e,t):Xn(e,t)},Mr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?hr(e,t):Jn(e,t)},kr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?mr(e,t):Yn(e,t)},Tr=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?fr(e,t):Zn(e,t)},$r=(e,t)=>{_r(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ar(e,t):er(e,t)}}),Bu=re(()=>{Mu(),Iu(),Lu(),Sr=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},Cr=(e,t)=>{Sr(e.inputs);e.compute(rr("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],(e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]},[t.axis],7,t.keepDims),{inputs:[0]})},Er=(e,t)=>{Sr(e.inputs);e.compute(rr("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],(e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]},[t.axis],7,t.keepDims),{inputs:[0]})},Pr=e=>on(e)}),Du=re(()=>{Mu(),$u(),Pu(),zu(),Ar=(e,t)=>{let n=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5];if(a&&o)throw new Error("Attention cannot have both past and attention_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let l=n.dims[0],u=n.dims[1],d=n.dims[2];if(1!==s.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=s.dims[0]/3,p=c,h=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],h=t.qkvHiddenSizes[2]}let m=u;if(c!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==c+p+h)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let f=0;if(a){if(p!==h)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==a.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==a.dims[0])throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==p/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(f=a.dims[3])}let _=m+f;if(i)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(o){if(4!==o.dims.length)throw new Error('Input "attention_bias" must have 4 dimensions');if(o.dims[0]!==l||o.dims[1]!==t.numHeads||o.dims[2]!==u||o.dims[3]!==_)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:u,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:_,maxSequenceLength:-1,inputHiddenSize:d,hiddenSize:c,vHiddenSize:h,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(h/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Ir=(e,t,n)=>t&&e?`\n      let total_sequence_length_input = u32(${t.getByOffset("0")});\n      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);\n      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;\n      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;\n      total_sequence_length = u32(${null==e?void 0:e.getByOffset("batchIdx")}) + 1;\n      var past_sequence_length: u32 = 0;\n      if (is_first_prompt == false) {\n        past_sequence_length = total_sequence_length - sequence_length;\n      }\n       `:`\n    ${n?"let past_sequence_length = uniforms.past_sequence_length":""};\n    let present_sequence_length = total_sequence_length;\n    `,zr=(e,t,n,r,s,i,a,o)=>{let l=hn(a?1:i),u=64,d=i/l;d<u&&(u=32);let c=Math.ceil(i/l/u),p=[{type:12,data:t},{type:12,data:n},{type:12,data:r},{type:12,data:s},{type:12,data:d},{type:12,data:c}],h=dn(e.dataType,l),m=cn(1,l),f=["type"];a&&f.push("type"),o&&f.push("type");return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${l}`,inputDependencies:f},getShaderSource:t=>{let n=yn("x",e.dataType,e.dims,l),r=[n],s=a?bn("seq_lens",a.dataType,a.dims):void 0;s&&r.push(s);let i=o?bn("total_sequence_length_input",o.dataType,o.dims):void 0;i&&r.push(i);let d=cn(e.dataType);return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${t.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...r)}\n  ${t.mainStart([u,1,1])}\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\n    let headIdx = workgroup_id.z % uniforms.num_heads;\n    let sequence_length = uniforms.sequence_length;\n    var total_sequence_length = uniforms.total_sequence_length;\n    ${Ir(s,i,!1)}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = (global_idx / ${u}) * uniforms.total_sequence_length + local_offset;\n    let seq_causal_length = ${a?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};\n    var thread_max_vector = ${m}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n      thread_max_vector = max(${m}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${m}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n      sum_vector += exp(${m}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n        x[offset + i] = ${n.type.value}(${d}(1.0) / ${d}(seq_causal_length));\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n        var f32input = ${m}(x[offset + i]);\n        x[offset + i] = ${n.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n      ${a?`\n        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {\n          x[offset + total_seq_id] = ${n.type.value}(${d}(0));\n        }`:""};\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:s,z:t*n},programUniforms:p})}},Fr=(e,t,n,r,s,i,a,o,l)=>{let u=a+i.kvSequenceLength,d=[i.batchSize,i.numHeads,i.sequenceLength,u],c=e>1&&r,p=i.kvNumHeads?i.kvNumHeads:i.numHeads,h=c?[i.batchSize,p,u,i.headSize]:void 0,m=i.nReps?i.nReps:1,f=0===i.scale?1/Math.sqrt(i.headSize):i.scale,_=hn(i.headSize),g=i.headSize/_,w=12,b={x:Math.ceil(u/w),y:Math.ceil(i.sequenceLength/w),z:i.batchSize*i.numHeads},y=[{type:12,data:i.sequenceLength},{type:12,data:g},{type:12,data:u},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:1,data:f},{type:12,data:a},{type:12,data:i.kvSequenceLength},{type:12,data:m}],v=c&&r&&At.size(r.dims)>0,x=["type","type"];v&&x.push("type"),s&&x.push("type"),o&&x.push("type"),l&&x.push("type");let M=[{dims:d,dataType:t.dataType,gpuDataType:0}];c&&M.push({dims:h,dataType:t.dataType,gpuDataType:0});return{name:"AttentionProbs",shaderCache:{hint:`${_};${void 0!==s};${void 0!==r};${e}`,inputDependencies:x},getRunData:()=>({outputs:M,dispatchGroup:b,programUniforms:y}),getShaderSource:e=>{let i=bn("q",t.dataType,t.dims,_),a=[i,bn("key",n.dataType,n.dims,_)];if(v){let e=bn("past_key",r.dataType,r.dims,_);a.push(e)}s&&a.push(bn("attention_bias",s.dataType,s.dims));let u=o?bn("seq_lens",o.dataType,o.dims):void 0;u&&a.push(u);let p=l?bn("total_sequence_length_input",l.dataType,l.dims):void 0;p&&a.push(p);let f=yn("output",t.dataType,d),g=[f];c&&g.push(yn("present_key",t.dataType,h,_));let b=cn(1,_);return`\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${i.type.storage}, 144>;\n  var<workgroup> tileK: array<${i.type.storage}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...a,...g)}\n  ${e.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z % uniforms.num_heads;\n    let kvHeadIdx = ${1===m?"headIdx":"headIdx / uniforms.n_reps"};\n    let kv_num_heads = ${1===m?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let sequence_length = uniforms.M;\n    var total_sequence_length = uniforms.N;\n    ${Ir(u,p,!0)}\n    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;\n    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\n    ${v&&c?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};\n    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;\n    ${c?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}\n    var value = ${b}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n      ${v&&c?"\n              if (n + local_id.y < past_sequence_length) {\n                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\n                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];\n              }":"\n          if (n + local_id.y < uniforms.kv_sequence_length) {\n            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n          }"}\n      ${c?"if (n + local_id.y < present_sequence_length) {\n        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];\n      }":""}\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n          value += ${b}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {\n      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(_){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${_}`)}})()};\n        output[outputIdx] = ${f.type.value} (sum * uniforms.alpha) + ${s?"attention_bias[outputIdx]":"0.0"};\n    }\n  }`}}},Or=(e,t,n,r,s,i,a=void 0,o=void 0)=>{let l=i+s.kvSequenceLength,u=s.nReps?s.nReps:1,d=s.vHiddenSize*u,c=e>1&&r,p=s.kvNumHeads?s.kvNumHeads:s.numHeads,h=c?[s.batchSize,p,l,s.headSize]:void 0,m=[s.batchSize,s.sequenceLength,d],f=12,_={x:Math.ceil(s.vHeadSize/f),y:Math.ceil(s.sequenceLength/f),z:s.batchSize*s.numHeads},g=[{type:12,data:s.sequenceLength},{type:12,data:l},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:12,data:d},{type:12,data:i},{type:12,data:s.kvSequenceLength},{type:12,data:u}],w=c&&r&&At.size(r.dims)>0,b=["type","type"];w&&b.push("type"),a&&b.push("type"),o&&b.push("type");let y=[{dims:m,dataType:t.dataType,gpuDataType:0}];c&&y.push({dims:h,dataType:t.dataType,gpuDataType:0});return{name:"AttentionScore",shaderCache:{hint:`${void 0!==r};${e}`,inputDependencies:b},getRunData:()=>({outputs:y,dispatchGroup:_,programUniforms:g}),getShaderSource:e=>{let s=bn("probs",t.dataType,t.dims),i=[s,bn("v",n.dataType,n.dims)];w&&i.push(bn("past_value",r.dataType,r.dims));let l=a?bn("seq_lens",a.dataType,a.dims):void 0;a&&i.push(l);let d=o?bn("total_sequence_length_input",o.dataType,o.dims):void 0;o&&i.push(d);let p=[yn("output",t.dataType,m)];c&&p.push(yn("present_value",t.dataType,h));return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${s.type.value}, 144>;\n  var<workgroup> tileV: array<${s.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...i,...p)}\n  ${e.mainStart([f,f,1])}\n   let headIdx = workgroup_id.z % uniforms.num_heads;\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let kvHeadIdx = ${1===u?"headIdx":"headIdx / uniforms.n_reps"};\n   let kv_num_heads = ${1===u?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};\n   let m = global_id.y;\n   let n = global_id.x;\n   let sequence_length = uniforms.M;\n   var total_sequence_length = uniforms.K;\n   ${Ir(l,d,!0)}\n   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\n   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch\n   ${w&&c?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};\n   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;\n   ${c?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}\n   var value = ${s.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n        ${w&&c?"\n        if (w + local_id.y < past_sequence_length) {\n          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];\n        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\n          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];\n        }\n      ":"\n            if (w + local_id.y < uniforms.kv_sequence_length) {\n              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];\n            }"}\n        ${c?"\n            if (w + local_id.y < present_sequence_length) {\n          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];\n        }":""}\n      }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + headIdx * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Lr=(e,t,n,r,s,i,a,o,l,u,d=void 0,c=void 0)=>{let p=Math.min(e.outputCount,1+(a?1:0)+(o?1:0)),h=p>1?u.pastSequenceLength:0,m=h+u.kvSequenceLength,f=l&&At.size(l.dims)>0?l:void 0,_=[t,n];p>1&&a&&At.size(a.dims)>0&&_.push(a),f&&_.push(f),d&&_.push(d),c&&_.push(c);let g=e.compute(Fr(p,t,n,a,f,u,h,d,c),{inputs:_,outputs:p>1?[-1,1]:[-1]})[0];e.compute(zr(g,u.batchSize,u.numHeads,h,u.sequenceLength,m,d,c),{inputs:d&&c?[g,d,c]:[g],outputs:[]});let w=[g,r];p>1&&o&&At.size(o.dims)>0&&w.push(o),d&&w.push(d),c&&w.push(c),e.compute(Or(p,g,r,o,u,h,d,c),{inputs:w,outputs:p>1?[0,2]:[0]})},Br=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,s=t.inputHiddenSize,i=t.headSize,a=12,o={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],u=[{type:12,data:r},{type:12,data:s},{type:12,data:i},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:u}),getShaderSource:e=>{let t=yn("output_q",l[0].dataType,n),r=yn("output_k",l[0].dataType,n),s=yn("output_v",l[0].dataType,n),i=bn("input",l[0].dataType,l[0].dims),o=bn("weight",l[1].dataType,l[1].dims),u=bn("bias",l[2].dataType,l[2].dims),d=i.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${d}, 144>;\n  var<workgroup> tileWeightQ: array<${d}, 144>;\n  var<workgroup> tileWeightK: array<${d}, 144>;\n  var<workgroup> tileWeightV: array<${d}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(i,o,u,t,r,s)}\n  ${e.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${d}(0);\n    var valueK = ${d}(0);\n    var valueV = ${d}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:l,outputs:[-1,-1,-1]})},Dr=(e,t)=>{let n=Ar(e.inputs,t),[r,s,i]=Br(e,n);return Lr(e,r,s,i,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n)}}),Nu=re(()=>{Te(),Mu(),$u(),Iu(),zu(),Nr=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)})};if(e[0].dims.length>1){let r="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,"Invalid input scale"),n(e[2].dims,r,"Invalid input B"),n(e[3].dims,r,"Invalid input mean"),n(e[4].dims,r,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},jr=(e,t)=>{let{epsilon:n,spatial:r,format:s}=t,i=e[0].dims,a=r?hn(i[i.length-1]):1,o="NHWC"===s&&i.length>1?a:1,l=At.size(i)/a,u=r,d=u?i.length:i,c=bn("x",e[0].dataType,e[0].dims,a),p=bn("scale",e[1].dataType,e[1].dims,o),h=bn("bias",e[2].dataType,e[2].dims,o),m=bn("inputMean",e[3].dataType,e[3].dims,o),f=bn("inputVar",e[4].dataType,e[4].dims,o),_=yn("y",e[0].dataType,d,a);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${a}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(c,p,h,m,f,_)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};\n    ${(()=>{let e="";if(r)e=`let cOffset = ${1===i.length?"0u":"NHWC"===s?`outputIndices[${i.length-1}] / ${a}`:"outputIndices[1]"};`;else if("NCHW"===s)e=`\n            ${_.indicesSet("outputIndices","0","0")}\n            let cOffset = ${_.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${p.type.indices}(0);\n                       cIndices[0] = outputIndices[${i.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${p.getByOffset("cOffset")};\n    let bias = ${h.getByOffset("cOffset")};\n    let inputMean = ${m.getByOffset("cOffset")};\n    let inputVar = ${f.getByOffset("cOffset")};\n    let x = ${c.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${_.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...pn(i)]:[{type:12,data:l}]})}},Rr=e=>on(e),Vr=(e,t)=>{let{inputs:n,outputCount:r}=e,s=Rr({...t,outputCount:r});if(E.webgpu.validateInputContent&&Nr(n,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(jr(n,s))}}),ju=re(()=>{$u(),zu(),Gr=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},qr=e=>{let t=e[0].dims,n=e[0].dims[2],r=At.size(t)/4,s=e[0].dataType,i=bn("input",s,t,4),a=bn("bias",s,[n],4),o=bn("residual",s,t,4),l=yn("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(i,a,o,l)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\n    let value = ${i.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx","value")}\n  }`}},Ur=e=>{Gr(e.inputs),e.compute(qr(e.inputs))}}),Ru=re(()=>{Mu(),$u(),Iu(),zu(),Wr=(e,t,n,r,s,i,a)=>{let o=Math.ceil(t/4),l="";l="string"==typeof s?`${s}(a)`:s("a");let u=bn("inputData",n,[o],4),d=yn("outputData",r,[o],4),c=[{name:"vec_size",type:"u32"}];return a&&c.push(...a),`\n      ${e.registerUniforms(c).declareVariables(u,d)}\n\n  ${i??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${u.getByOffset("global_idx")};\n    ${d.setByOffset("global_idx",l)}\n  }`},Hr=(e,t,n,r,s,i=e.dataType,a,o)=>{let l=[{type:12,data:Math.ceil(At.size(e.dims)/4)}];return a&&l.push(...a),{name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:t=>Wr(t,At.size(e.dims),e.dataType,i,n,r,o),getRunData:t=>({outputs:[{dims:e.dims,dataType:i}],dispatchGroup:{x:Math.ceil(At.size(t[0].dims)/64/4)},programUniforms:l})}},Kr=e=>{e.compute(Hr(e.inputs[0],"Abs","abs"))},Qr=e=>{e.compute(Hr(e.inputs[0],"Acos","acos"))},Xr=e=>{e.compute(Hr(e.inputs[0],"Acosh","acosh"))},Jr=e=>{e.compute(Hr(e.inputs[0],"Asin","asin"))},Yr=e=>{e.compute(Hr(e.inputs[0],"Asinh","asinh"))},Zr=e=>{e.compute(Hr(e.inputs[0],"Atan","atan"))},es=e=>{e.compute(Hr(e.inputs[0],"Atanh","atanh"))},ts=e=>on(e),ns=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Hr(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},rs=e=>{let t,n,r=e.length>=2&&0!==e[1].data,s=e.length>=3&&0!==e[2].data;switch(e[0].dataType){case 1:t=r?e[1].getFloat32Array()[0]:-34028234663852886e22,n=s?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=r?e[1].getUint16Array()[0]:64511,n=s?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return on({min:t,max:n})},ss=(e,t)=>{let n=t||rs(e.inputs),r=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"Clip",e=>`clamp(${e}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`,void 0,n.cacheKey,void 0,[{type:e.inputs[0].dataType,data:n.min},{type:e.inputs[0].dataType,data:n.max}],[{name:"min",type:r},{name:"max",type:r}]),{inputs:[0]})},is=e=>{e.compute(Hr(e.inputs[0],"Ceil","ceil"))},as=e=>{e.compute(Hr(e.inputs[0],"Cos","cos"))},os=e=>{e.compute(Hr(e.inputs[0],"Cosh","cosh"))},ls=e=>on(e),us=(e,t)=>{let n=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"Elu",e=>`elu_vf32(${e})`,`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},ds=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,cs=e=>{let t=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"Erf",e=>`erf_vf32(${e})`,ds(t)))},ps=e=>{e.compute(Hr(e.inputs[0],"Exp","exp"))},hs=e=>{e.compute(Hr(e.inputs[0],"Floor","floor"))},ms=e=>{let t=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"Gelu",e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`,ds(t)))},fs=(e,t)=>{let n=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"LeakyRelu",e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`,`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},_s=e=>{e.compute(Hr(e.inputs[0],"Not",e=>`!${e}`))},gs=e=>{e.compute(Hr(e.inputs[0],"Neg",e=>`-${e}`))},ws=e=>{e.compute(Hr(e.inputs[0],"Reciprocal",e=>`1.0/${e}`))},bs=e=>{let t=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"Relu",e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`))},ys=e=>{e.compute(Hr(e.inputs[0],"Sigmoid",e=>`(1.0 / (1.0 + exp(-${e})))`))},vs=e=>on(e),xs=(e,t)=>{let n=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"HardSigmoid",e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`,void 0,t.cacheKey))},Ms=e=>{e.compute(Hr(e.inputs[0],"Sin","sin"))},ks=e=>{e.compute(Hr(e.inputs[0],"Sinh","sinh"))},Ts=e=>{e.compute(Hr(e.inputs[0],"Sqrt","sqrt"))},$s=e=>{e.compute(Hr(e.inputs[0],"Tan","tan"))},Ss=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Cs=e=>{e.compute(Hr(e.inputs[0],"Tanh",Ss))},Es=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Ss("v")};\n}\n`,Ps=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,As=e=>{let t=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"FastGelu",Ps,Es(t),void 0,e.inputs[0].dataType))},Is=(e,t)=>{let n=cn(e.inputs[0].dataType);return e.compute(Hr(e.inputs[0],"ThresholdedRelu",e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},zs=e=>{e.compute(Hr(e.inputs[0],"Log","log"))},Fs=(e,t)=>`\nconst alpha = vec4<${e}>(${t});\nconst one = ${e}(1.0);\nconst zero = ${e}(0.0);\n\nfn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {\n  let v = x *alpha;\n  var x1 : vec4<${e}>;\n  for (var i = 0; i < 4; i = i + 1) {\n    if (v[i] >= zero) {\n      x1[i] = one / (one + exp(-v[i]));\n    } else {\n      x1[i] = one - one / (one + exp(v[i]));\n    }\n  }\n  return x * x1;\n}\n`,Os=e=>`quick_gelu_impl(${e})`,Ls=(e,t)=>{let n=cn(e.inputs[0].dataType);e.compute(Hr(e.inputs[0],"QuickGelu",Os,Fs(n,t.alpha),t.cacheKey,e.inputs[0].dataType))}}),Vu=re(()=>{$u(),zu(),Ru(),Bs=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ds=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=bn("input",e[0].dataType,e[0].dims,4),r=bn("bias",e[0].dataType,[e[0].dims[2]],4),s=yn("output",e[0].dataType,t,4),i=At.size(t)/4,a=dn(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,r,s)}\n\n  ${ds(a)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${s.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Ns=e=>{Bs(e.inputs),e.compute(Ds(e.inputs))}}),Gu=re(()=>{Mu(),$u(),zu(),js=(e,t,n,r,s,i,a,o,l,u,d,c)=>{let p,h;"string"==typeof o?p=h=(e,t)=>`${o}((${e}),(${t}))`:"function"==typeof o?p=h=o:(p=o.scalar,h=o.vector);let m,f=yn("outputData",d,r.length,4),_=bn("aData",l,t.length,4),g=bn("bData",u,n.length,4);if(s)if(i){let e=1===At.size(t),r=1===At.size(n),s=t.length>0&&t[t.length-1]%4==0,i=n.length>0&&n[n.length-1]%4==0;m=e||r?f.setByOffset("global_idx",h(e?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"),r?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"))):`\n            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${_.broadcastedIndicesToOffset("outputIndices",f)};\n            let offsetB = ${g.broadcastedIndicesToOffset("outputIndices",f)};\n            ${f.setByOffset("global_idx",h(a||s?_.getByOffset("offsetA / 4u"):`${_.type.value}(${_.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||i?g.getByOffset("offsetB / 4u"):`${g.type.value}(${g.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else m=f.setByOffset("global_idx",h(_.getByOffset("global_idx"),g.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=(e,t,n="")=>{let r=`aData[indexA${t}][componentA${t}]`,s=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${f.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let offsetB${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${p(r,s)});\n          `};m=9===d?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(_,g,f)}\n\n        ${c??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${m}\n      }`},Rs=(e,t,n,r,s,i,a=n.dataType)=>{let o=n.dims.map(e=>Number(e)??1),l=r.dims.map(e=>Number(e)??1),u=!At.areEqual(o,l),d=o,c=At.size(o),p=!1,h=!1,m=[u];if(u){let e=Pt.calcShape(o,l,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");d=e.slice(),c=At.size(d);let t=1===At.size(o),n=1===At.size(l),r=o.length>0&&o[o.length-1]%4==0,s=l.length>0&&l[l.length-1]%4==0;m.push(t),m.push(n),m.push(r),m.push(s);let i=1;for(let a=1;a<d.length;a++){let e=o[o.length-a];if(e!==l[l.length-a])break;i*=e}i%4==0?(h=!0,p=!0):(t||n||r||s)&&(p=!0)}else p=!0;return m.push(p),{name:e,shaderCache:{hint:t+m.map(e=>e.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>js(e,o,l,d,p,u,h,s,n.dataType,r.dataType,a,i),getRunData:()=>({outputs:[{dims:d,dataType:a}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:Math.ceil(At.size(d)/4)},...pn(o,l,d)]})}},Vs=(e,t,n,r,s,i)=>{e.compute(Rs(t,s??"",e.inputs[0],e.inputs[1],n,r,i))},Gs=e=>{Vs(e,"Add",(e,t)=>`${e}+${t}`)},qs=e=>{Vs(e,"Div",(e,t)=>`${e}/${t}`)},Us=e=>{Vs(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},Ws=e=>{Vs(e,"Mul",(e,t)=>`${e}*${t}`)},Hs=e=>{let t=bn("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Vs(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Ks=e=>{Vs(e,"Sub",(e,t)=>`${e}-${t}`)},Qs=e=>{Vs(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},Xs=e=>{Vs(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},Js=e=>{Vs(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},Ys=e=>{Vs(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}}),qu=re(()=>{Mu(),$u(),Iu(),zu(),Zs=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let n=e[0],r=n.dataType,s=n.dims.length;e.forEach((e,i)=>{if(0!==i){if(e.dataType!==r)throw new Error("input tensors should be one type");if(e.dims.length!==s)throw new Error("input tensors should have the same shape");e.dims.forEach((e,r)=>{if(r!==t&&e!==n.dims[r])throw new Error("non concat dimensions must match")})}})},ei=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,ti=(e,t)=>{let n=e.length,r=[];for(let s=0;s<n;++s){let i=t.setByOffset("global_idx",e[s].getByIndices("indices"));1===n?r.push(i):0===s?r.push(`if (inputIndex == ${s}u) { ${i} }`):s===n-1?r.push(`else { ${i} }`):r.push(`else if (inputIndex == ${s}) { ${i} }`)}return r.join("\n")},ni=(e,t,n,r)=>{let s=At.size(n),i=new Array(e.length),a=new Array(e.length),o=0,l=[],u=[],d=[{type:12,data:s}];for(let m=0;m<e.length;++m)o+=e[m].dims[t],i[m]=o,u.push(e[m].dims.length),a[m]=bn(`input${m}`,r,u[m]),l.push("rank"),d.push({type:12,data:i[m]});for(let m=0;m<e.length;++m)d.push(...pn(e[m].dims));d.push(...pn(n));let c=yn("output",r,n.length),p=c.indicesGet("indices",t),h=Array.from(Array(i.length).keys()).map(e=>`uniforms.sizeInConcatAxis${e}`).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...a,c)})()}\n\n  ${ei(i.length,h)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${p});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${i.length}u>(${h});\n      ${p} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${ti(a,c)}\n  }`}},ri=(e,t)=>{let n=e.inputs,r=n[0].dims,s=At.normalizeAxis(t.axis,r.length);Zs(n,s);let i=r.slice();i[s]=n.reduce((e,t)=>e+(t.dims.length>s?t.dims[s]:0),0);let a=n.filter(e=>At.size(e.dims)>0);e.compute(ni(a,s,i,n[0].dataType),{inputs:a})},si=e=>on({axis:e.axis})}),Uu=re(()=>{Mu(),$u(),ii=(e,t,n="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return"let e2x = exp(-2.0 * abs(value));\n              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);\n        ";case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},ai=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},oi=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},li=e=>{let t=(null==e?void 0:e.activation)||"";if("HardSigmoid"===t){let[n,r]=(null==e?void 0:e.activation_params)||[.2,.5];return{activation:t,alpha:n,beta:r}}if("Clip"===t){let[n,r]=(null==e?void 0:e.activation_params)||[Ft,Ot];return{activation:t,clipMax:r,clipMin:n}}if("LeakyRelu"===t){let[n]=(null==e?void 0:e.activation_params)||[.01];return{activation:t,alpha:n}}return{activation:t}}}),Wu=re(()=>{ui=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},di=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `}),Hu=re(()=>{ci=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`}),Ku=re(()=>{Mu(),$u(),zu(),Uu(),pi=(e,t,n,r,s)=>{let i=r-n;return`\n      ${Array.from({length:n}).map((n,a)=>`\n      if (${gn(t.shape,a,t.rank)} != 1) {\n        ${t.indicesSet(e,a,gn(s,a+i,r))}\n      } else {\n        ${t.indicesSet(e,a,0)}\n      }`).join("")}\n`},hi=(e,t,n,r,s=!1,i)=>{let a=e[0].dims,o=e[1].dims,l=a[a.length-2],u=o[o.length-1],d=a[a.length-1],c=hn(u),p=hn(d),h=hn(l),m=At.size(n)/c/h,f=e.length>2,_=r?r.slice(0,-2):n.slice(0,-2),g=[At.size(_),l,u],w=[{type:12,data:m},{type:12,data:l},{type:12,data:u},{type:12,data:d}];ai(t,w),w.push(...pn(_,a,o)),f&&w.push(...pn(e[2].dims)),w.push(...pn(g));return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${c};${p};${h};${s}`,inputDependencies:f?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:w}),getShaderSource:r=>{let i=xn("batch_dims",e[0].dataType,_.length),l=bn("a",e[0].dataType,a.length,p),u=bn("b",e[1].dataType,o.length,c),d=yn("output",e[0].dataType,g.length,c),m=dn(d.type.tensor),w=ii(t,d.type.value,m),b=[l,u],y="";if(f){let t=s?c:1;b.push(bn("bias",e[2].dataType,e[2].dims.length,t)),y=""+(s?`value += bias[col / ${t}];`:`value += ${d.type.value}(bias[row + i]);`)}let v=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];oi(t,v);return`\n  ${r.registerUniforms(v).registerInternalVariables(i).declareVariables(...b,d)}\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${c})) * ${c};\n    var index1 = global_idx / (uniforms.N / ${c});\n    let stride1 = uniforms.M / ${h};\n    let row = (index1 % stride1) * ${h};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${i.offsetToIndices("batch")};`}\n\n    var a_indices: ${l.type.indices};\n    ${pi("a_indices",l,l.rank-2,i.rank,"batch_indices")}\n    ${l.indicesSet("a_indices",l.rank-2,0)}\n    ${l.indicesSet("a_indices",l.rank-1,0)}\n    let a_offset = ${l.indicesToOffset("a_indices")};\n\n    var b_indices: ${u.type.indices};\n    ${pi("b_indices",u,u.rank-2,i.rank,"batch_indices")}\n    ${u.indicesSet("b_indices",u.rank-2,0)}\n    ${u.indicesSet("b_indices",u.rank-1,0)}\n    let b_offset = ${u.indicesToOffset("b_indices")};\n    var values: array<${d.type.value}, ${h}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<p;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${c}];`;for(let t=0;t<h;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${p}];`;for(let n=0;n<p;n++)e+=`\n            values[${t}] = fma(${u.type.value}(a_data${1===p?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${h}u; i++) {\n      var value = values[i];\n      ${y}\n      ${w}\n      let cur_indices = ${d.type.indices}(batch, row + i, col);\n      let offset = ${d.indicesToOffset("cur_indices")};\n      ${d.setByOffset(`offset / ${c}`,"value")};\n    }\n  }\n  `}}}}),Qu=re(()=>{Mu(),$u(),zu(),Uu(),Ku(),Wu(),mi=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,fi=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,_i=(e,t,n="f32",r,s=!1,i=32,a=!1,o=32)=>{let l=t[1]*e[1],u=t[0]*e[0],d=s?l:i,c=s?i:l,p=d/t[0],h=i/t[1];if((!s||4!==p||4!==e[1])&&(s||3!==p&&4!==p)||d%t[0]!==0||i%t[1]!==0||4!==e[0])throw new Error(`If transposeA ${s} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${d/p}>, ${c}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${u/e[0]}>, ${i}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${h};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${mi(s,r)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${fi(s,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},gi=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,wi=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",bi=(e,t,n="f32",r,s=!1,i=32,a=!1,o=32,l=!1)=>{let u=e[1]*t[1],d=e[0]*t[0],c=s?u:i,p=s?i:u;if(p%t[1]!==0||c%t[0]!==0||i%t[1]!==0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${i} must be divisible by workgroupSize[1]${t[1]}`);let h=p/t[1],m=c/t[0],f=i/t[1],_=l?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${gi(s,r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${r?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${h};\nlet tileColA = i32(localId.x) * ${m};\nlet tileRowB = i32(localId.y) * ${f};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${gi(s,r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${r?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${wi(s)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${p}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${o}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n    ${_}\n  }\n`},yi=(e,t,n,r,s=!1)=>{let[i,a,o,l]=r,u=dn(r[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${ui(e,u)} {\n      var value = ${ui(e,u)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        var aIndices: ${a.type.indices};\n        ${pi("aIndices",a,a.rank-2,i.rank,"batchIndices")}\n        ${a.indicesSet("aIndices",a.rank-2,"u32(row)")}\n        ${a.indicesSet("aIndices",a.rank-1,"u32(colIn)")}\n        value = ${a.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${ui(e,u)} {\n      var value = ${ui(e,u)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        var bIndices: ${o.type.indices};\n        ${pi("bIndices",o,o.rank-2,i.rank,"batchIndices")}\n        ${o.indicesSet("bIndices",o.rank-2,"u32(row)")}\n        ${o.indicesSet("bIndices",o.rank-1,"u32(colIn)")}\n        value = ${o.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ui(e,u)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${ui(e,u)}(bias[row])`};`:""}\n        ${n}\n        ${l.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},vi=(e,t,n,r,s=!1,i)=>{let a=e[0].dims,o=e[1].dims,l=a.slice(0,-2),u=o.slice(0,-2),d=r?r.slice(0,-2):n.slice(0,-2),c=At.size(d),p=a[a.length-2],h=a[a.length-1],m=o[o.length-1],f=h%4==0&&m%4==0,_=p<=8?[4,1,1]:[4,4,1],g=[8,8,1],w=[Math.ceil(m/g[0]/_[0]),Math.ceil(p/g[1]/_[1]),Math.ceil(c/g[2]/_[2])],b=f?4:1,y=[...l,p,h/b],v=y.length,x=[...u,h,m/b],M=x.length,k=[c,p,m/b],T=[{type:6,data:p},{type:6,data:m},{type:6,data:h}];ai(t,T),T.push(...pn(d,y,x));let $=["rank","rank"],S=e.length>2;S&&(T.push(...pn(e[2].dims)),$.push("rank")),T.push(...pn(k));return{name:"MatMul",shaderCache:{hint:`${_};${t.activation};${f};${s}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:i?i(n):n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:T}),getShaderSource:n=>{let r=d.length,i=xn("batchDims",e[0].dataType,r,1),a=dn(e[0].dataType),o=bn("a",e[0].dataType,v,b),l=bn("b",e[1].dataType,M,b),u=yn("result",e[0].dataType,k.length,b),c=[o,l];if(S){let t=s?b:1;c.push(bn("bias",e[2].dataType,e[2].dims.length,t))}let p=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];oi(t,p);let h=dn(u.type.tensor),m=ii(t,u.type.value,h),w=yi(b,S,m,[i,o,l,u],s);return`\n  ${n.registerUniforms(p).registerInternalVariables(i).declareVariables(...c,u)}\n  ${w}\n  ${f?_i(_,g,a,i):bi(_,g,a,i)}\n                   `}}}}),Xu=re(()=>{Mu(),Tu(),zu(),Uu(),Wu(),Hu(),Qu(),xi=(e,t,n,r,s=!1,i,a=4,o=4,l=4,u="f32")=>{let d=e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}},c=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",p=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",h=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",m=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",_=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${f} / outWidth;\n    let outCol = ${f} % outWidth;\n\n    let WRow = ${_} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${_} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${_} % inChannels;\n    var resData = ${ui(a,u)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${h} && xCol >= 0 && xCol < ${m}) {\n      ${c}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(a)}\n    }\n    return resData;`,w=e?t&&r?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${ui(a,u)}(0.0);`:r&&n?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${ui(a,u)}(0.0);`,b=e?r&&n?d(o):`\n    let col = colIn * ${o};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${d(o)}\n    }\n    return ${ui(o,u)}(0.0);`:`\n    let col = colIn * ${o};\n    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {\n      ${d(o)}\n    }\n    return ${ui(o,u)}(0.0);`,y=ui(l,u),v=ui(e?a:o,u),x=ui(e?o:a,u),M=ii(i,y,u);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${v} {\n      ${e?w:b}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {\n      ${e?b:w}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${p}\n      ${di(s)}\n      ${M}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Mi=(e,t,n,r,s,i,a,o,l)=>{let u="NHWC"===t.format,d=u?e[0].dims[3]:e[0].dims[1],c=n[0],p=u?n[2]:n[3],h=u?n[1]:n[2],m=u?n[3]:n[1],f=u&&(d%4==0||d%3==0)&&m%4==0,_=u?m:p*h,g=u?p*h:m,w=[8,8,1],b=r<=8?[4,1,1]:[4,4,1],y=[Math.ceil(_/w[0]/b[0]),Math.ceil(g/w[1]/b[1]),Math.ceil(c/w[2]/b[2])];Ct("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${y}`);let v=f?u&&d%4!=0?3:4:1,x=w[1]*b[1],M=w[0]*b[0],k=Math.max(w[0]*v,w[1]),T=r%x===0,$=s%M===0,S=i%k===0,C=f?[v,4,4]:[1,1,1],E=[{type:6,data:r},{type:6,data:s},{type:6,data:i},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];ai(t,E),E.push(...pn(e[0].dims,e[1].dims));let P=["rank","rank"];a&&(E.push(...pn(e[2].dims)),P.push("rank")),E.push(...pn(n));return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${v};${f};${T};${$};${S};${x};${M};${k}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:l?l(n):n,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:E}),getShaderSource:r=>{let s=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];oi(t,s);let i=f?4:1,l=dn(e[0].dataType),d=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${f?`vec4<${l}>`:l}) {\n        result[flatIndex] = ${f?`vec4<${l}>`:l}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${f?`vec4<${l}>`:l}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${f?"/ 4":""}, value);\n      }`,c=[bn("x",e[0].dataType,e[0].dims.length,3===v?1:v),bn("w",e[1].dataType,e[1].dims.length,i)],p=yn("result",e[0].dataType,n.length,i);if(a){let t=bn("bias",e[2].dataType,e[2].dims.length,i);c.push(t),d+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?`vec4<${l}>`:l} {\n          return bias[coords.${u?"w":"y"}${f?"/ 4":""}];\n        }`}return`\n        ${ci("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${r.registerUniforms(s).declareVariables(...c,p)}\n        ${d}\n        ${xi(u,T,$,S,a,t,C[0],C[1],C[2],l)}\n        ${f?_i(b,w,l,void 0,!u,k):bi(b,w,l,void 0,!u,k,!1,void 0,o)}`}}}}),Ju=re(()=>{Mu(),Tu(),$u(),zu(),Uu(),Wu(),ki=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t},Ti=e=>"number"==typeof e?[e,e,e]:e,$i=(e,t)=>t<=1?e:e+(e-1)*(t-1),Si=(e,t,n,r=1)=>{let s=$i(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)},Ci=(e,t,n,r,s)=>{null==s&&(s=Si(e,t[0],r[0]));let i=[0,0,0,n];for(let a=0;a<3;a++)e[a]+2*s>=t[a]&&(i[a]=Math.trunc((e[a]-t[a]+2*s)/r[a]+1));return i},Ei=(e,t,n,r,s,i,a,o,l,u)=>{let d,c,p,h;if("VALID"===e&&(e=0),"number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e};let m=Ci([t,n,r,1],[o,l,u],1,[s,i,a],e);c=m[0],p=m[1],h=m[2]}else if(Array.isArray(e)){if(!e.every((e,t,n)=>e===n[0]))throw Error(`Unsupported padding parameter: ${e}`);d={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let m=Ci([t,n,r,1],[o,l,u],1,[s,i,a],e[0]);c=m[0],p=m[1],h=m[2]}else{if("SAME_UPPER"!==e)throw Error(`Unknown padding parameter: ${e}`);{c=Math.ceil(t/s),p=Math.ceil(n/i),h=Math.ceil(r/a);let e=(c-1)*s+o-t,m=(p-1)*i+l-n,f=(h-1)*a+u-r,_=Math.floor(e/2),g=e-_,w=Math.floor(m/2),b=m-w,y=Math.floor(f/2);d={top:w,bottom:b,left:y,right:f-y,front:_,back:g}}}return{padInfo:d,outDepth:c,outHeight:p,outWidth:h}},Pi=(e,t,n,r,s,i=!1,a="channelsLast")=>{let o,l,u,d,c;if("channelsLast"===a)[o,l,u,d,c]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[o,c,l,u,d]=e}let[p,,h,m,f]=t,[_,g,w]=Ti(n),[b,y,v]=Ti(r),x=$i(h,b),M=$i(m,y),k=$i(f,v),{padInfo:T,outDepth:$,outHeight:S,outWidth:C}=Ei(s,l,u,d,_,g,w,x,M,k),E=i?p*c:p,P=[0,0,0,0,0];return"channelsFirst"===a?P=[o,E,$,S,C]:"channelsLast"===a&&(P=[o,$,S,C,E]),{batchSize:o,dataFormat:a,inDepth:l,inHeight:u,inWidth:d,inChannels:c,outDepth:$,outHeight:S,outWidth:C,outChannels:E,padInfo:T,strideDepth:_,strideHeight:g,strideWidth:w,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:x,effectiveFilterHeight:M,effectiveFilterWidth:k,dilationDepth:b,dilationHeight:y,dilationWidth:v,inShape:e,outShape:P,filterShape:t}},Ai=(e,t,n,r,s,i)=>{let a="channelsLast"===i;a?e[0].dims[3]:e[0].dims[1];let o={x:n.map((e,t)=>t)},l=[Math.ceil(ki(o.x.map(e=>n[e]))/64),1,1];Ct("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${l}`);let u=[{type:12,data:At.size(n)},{type:12,data:r},{type:12,data:s},{type:12,data:t.strides},{type:12,data:t.dilations}];ai(t,u),u.push(...pn(e[0].dims,e[1].dims));let d=["rank","rank"],c=3===e.length;c&&(u.push(...pn(e[2].dims)),d.push("rank")),u.push(...pn(n));return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${a};1;${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:u}),getShaderSource:i=>{let o=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:r.length},{name:"pads",type:"u32",length:s.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];oi(t,o);let l=dn(e[0].dataType),u=bn("x",e[0].dataType,e[0].dims.length,1),d=bn("W",e[1].dataType,e[1].dims.length,1),p=[u,d],h=yn("result",e[0].dataType,n.length,1),m="";if(c){let t=bn("bias",e[2].dataType,e[2].dims.length,1);p.push(t),m+=`\n        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${l} {\n          return bias[${gn("coords",a?4:1,5)}];\n        }`}let f=ui(1,l),_=ii(t,f,l);return`\n            ${m}\n            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${u.getByIndices("aIndices")};\n            }\n            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${d.getByIndices("aIndices")};\n            }\n          ${i.registerUniforms(o).declareVariables(...p,h)}\n          ${i.mainStart()}\n          ${i.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n              let coords = ${h.offsetToIndices("global_idx")};\n              let batch = ${gn("coords",0,u.rank)};\n              let d2 = ${gn("coords",a?u.rank-1:1,u.rank)};\n              let xFRCCorner = vec3<u32>(${gn("coords",a?1:2,u.rank)},\n              ${gn("coords",a?2:3,u.rank)},\n              ${gn("coords",a?3:4,u.rank)}) * uniforms.strides - uniforms.pads;\n              let xFCorner = xFRCCorner.x;\n              let xRCorner = xFRCCorner.y;\n              let xCCorner = xFRCCorner.z;\n              let xShapeY = ${gn("uniforms.x_shape",a?1:2,u.rank)};\n              let xShapeZ = ${gn("uniforms.x_shape",a?2:3,u.rank)};\n              let xShapeW = ${gn("uniforms.x_shape",a?3:4,u.rank)};\n              let xShapeU = ${gn("uniforms.x_shape",a?4:1,u.rank)};\n              let inputDepthNearestVec4 = (xShapeU / 4) * 4;\n              let inputDepthVec4Remainder = xShapeU % 4;\n\n              var value = 0.0;\n              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {\n                let xF = xFCorner + wF * uniforms.dilations[0];\n                if (xF < 0 || xF >= xShapeY) {\n                  continue;\n                }\n\n                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {\n                  let xR = xRCorner + wR * uniforms.dilations[1];\n                  if (xR < 0 || xR >= xShapeZ) {\n                    continue;\n                  }\n\n                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {\n                    let xC = xCCorner + wC * uniforms.dilations[2];\n                    if (xC < 0 || xC >= xShapeW) {\n                      continue;\n                    }\n\n                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {\n                      ${a?"let xValues = vec4<f32>(\n                               getX(batch, xF, xR, xC, d1),\n                               getX(batch, xF, xR, xC, d1 + 1),\n                               getX(batch, xF, xR, xC, d1 + 2),\n                               getX(batch, xF, xR, xC, d1 + 3));\n                            ":"let xValues = vec4<f32>(\n                               getX(batch, d1, xF, xR, xC),\n                               getX(batch, d1 + 1, xF, xR, xC),\n                               getX(batch, d1 + 2, xF, xR, xC),\n                               getX(batch, d1 + 3, xF, xR, xC));\n                            "}\n                            let wValues = vec4<f32>(\n                              getW(d2, d1, wF, wR, wC),\n                              getW(d2, d1 + 1, wF, wR, wC),\n                              getW(d2, d1 + 2, wF, wR, wC),\n                              getW(d2, d1 + 3, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                    if (inputDepthVec4Remainder == 1) {\n                        ${a?"value += getX(batch, xF, xR, xC, inputDepthNearestVec4)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);":"value += getX(batch, inputDepthNearestVec4, xF, xR, xC)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);"}\n                    } else if (inputDepthVec4Remainder == 2) {\n                      ${a?"let xValues = vec2<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));\n                      ":"let xValues = vec2<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));\n                    "}\n                    let wValues = vec2<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    } else if (inputDepthVec4Remainder == 3) {\n                      ${a?"let xValues = vec3<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));\n                      ":"let xValues = vec3<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));\n                    "}\n                    let wValues = vec3<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                  }\n                }\n              }\n              ${c?"value = value + getBiasByOutputCoords(coords)":""};\n              ${_}\n              result[global_idx] = f32(value);\n          }`}}}}),Yu=re(()=>{Mu(),$u(),zu(),Uu(),Ii=(e,t,n,r)=>{let s=e.length>2,i=s?"value += b[output_channel];":"",a=e[0].dims,o=e[1].dims,l="NHWC"===t.format,u=l?n[3]:n[1],d=u/t.group,c=l&&d>=4?hn(u):1,p=At.size(n)/c,h=[{type:12,data:p},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:d}];ai(t,h),h.push(...pn(a,[o[0],o[1],o[2],o[3]/c]));let m=s?["rank","rank","rank"]:["rank","rank"];h.push(...pn([n[0],n[1],n[2],n[3]/c]));return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${c}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:r=>{let u=yn("output",e[0].dataType,n.length,c),d=dn(u.type.tensor),p=ii(t,u.type.value,d),h=bn("x",e[0].dataType,a.length),m=bn("w",e[1].dataType,o.length,c),f=[h,m];s&&f.push(bn("b",e[2].dataType,e[2].dims,c));let _=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];oi(t,_);let g=l?`\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {\n            let input_channel = in_channel_offset + wInChannel;\n            let xVal = ${h.get("batch","xHeight","xWidth","input_channel")};\n            let wVal = ${m.get("wHeight","wWidth","wInChannel","output_channel")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `:`\n      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n        let input_channel = in_channel_offset + wInChannel;\n        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {\n              continue;\n            }\n\n            let xVal = ${h.get("batch","input_channel","xHeight","xWidth")};\n            let wVal = ${m.get("output_channel","wInChannel","wHeight","wWidth")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `;return`\n  ${r.registerUniforms(_).declareVariables(...f,u)}\n\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${u.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${l?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel * ${c} / uniforms.output_channels_per_group;\n    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];\n\n    var value: ${u.type.value} = ${u.type.value}(0);\n    ${g}\n    ${i}\n    ${p}\n    ${u.setByOffset("global_idx","value")}\n  }`}}},zi=(e,t,n,r)=>{let s=e.length>2,i=hn(n[3]),a=hn(n[2]),o=At.size(n)/i/a,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],u=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],d=[n[0],n[1],n[2],n[3]/i],c=[{type:12,data:o},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];ai(t,c),c.push(...pn(l,u,d));let p=(a-1)*t.strides[1]+u[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${a};${p};${u[0]};${u[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:c}),getShaderSource:n=>{let r=yn("output",e[0].dataType,d.length,i),o=dn(r.type.tensor),c=ii(t,r.type.value,o),h=bn("x",e[0].dataType,l.length,i),m=bn("w",e[1].dataType,u.length,i),f=[h,m];s&&f.push(bn("b",e[2].dataType,e[2].dims,i));let _=s?"value += b[output_channel];":"",g=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return oi(t,g),`\n  ${n.registerUniforms(g).declareVariables(...f,r)}\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${a}u;\n    let col = (index1 % width1) * ${a}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${h.type.value}, ${p}>;\n    var values: array<${r.type.value}, ${a}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w's height/width.\n    for (var w_height: u32 = 0u; w_height < ${u[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${p}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${h.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${h.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${u[1]}; w_width++) {\n          let w_val = ${m.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${a}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${a}u; i++) {\n      var value = values[i];\n      ${_}\n      ${c}\n      ${r.set("batch","row","col + i","output_channel","value")};\n    }\n  }`}}}}),Zu=re(()=>{$u(),Xu(),Ju(),Qu(),Yu(),Uu(),Ku(),Fu(),Fi=(e,t,n,r,s,i)=>{let a=e[0],o=e.slice(i?1:2,i?3:4),l=o.length,u=t[0],d=t.slice(2).map((e,t)=>e+(e-1)*(n[t]-1)),c=o.map((e,t)=>e+r[t]+r[t+l]).map((e,t)=>Math.floor((e-d[t]+s[t])/s[t]));return c.splice(0,0,a),c.splice(i?3:1,0,u),c},Oi=[2,3,1,0],Li=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Bi=(e,t)=>{let n=e.kernelShape.slice();n.length<t[1].dims.length-2&&n.push(...Array(t[1].dims.length-2-n.length).fill(0));for(let i=2;i<t[1].dims.length;++i)0===n[i-2]&&(n[i-2]=t[1].dims[i]);let r=e.pads.slice();It.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:n,pads:r}),s},Di=e=>{let t=li(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},Ni=(e,t,n,r)=>{let s="NHWC"===n.format,i=Fi(t[0].dims,t[1].dims,n.dilations,n.pads,n.strides,s);if(1!==n.group){let a=[t[0]];if(s){let r=e.kernelCustomData.wT??e.compute(An(t[1],Oi),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),a.push(r)}else a.push(t[1]);return 3===t.length&&a.push(t[2]),void(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===n.group&&1===t[1].dims[1]&&1===n.dilations[0]&&1===n.dilations[1]?e.compute(zi(a,n,i,r),{inputs:a}):e.compute(Ii(a,n,i,r),{inputs:a}))}let a=3===t.length,o=t[0].dims[s?1:2],l=t[0].dims[s?2:3],u=t[0].dims[s?3:1],d=t[1].dims[2],c=t[1].dims[3],p=i[s?1:2],h=i[s?2:3],m=i[s?3:1],f=s&&d===o&&c===l&&0===n.pads[0]&&0===n.pads[1];if(f||1===d&&1===c&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let d,c,_,g=i[0],w=[];if(s){let r=e.kernelCustomData.wT??e.compute(An(t[1],Oi),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),f){let e=o*l*u;d=t[0].reshape([1,g,e]),c=r.reshape([1,e,m]),_=[1,g,m]}else d=t[0].reshape([g,o*l,u]),c=r.reshape([1,u,m]),_=[g,p*h,m];w.push(d),w.push(c)}else d=t[0].reshape([g,u,o*l]),c=t[1].reshape([1,m,u]),_=[g,m,p*h],w.push(c),w.push(d);a&&w.push(t[2]);let b=_[2],y=w[0].dims[w[0].dims.length-1];return void(b<8&&y<8?e.compute(hi(w,n,i,_,s,r),{inputs:w}):e.compute(vi(w,n,i,_,s,r),{inputs:w}))}let _=e.kernelCustomData.wT??e.compute(An(t[1],Oi),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=_);let g=[t[0],_];a&&g.push(t[2]);let w=s?p*h:m,b=s?m:p*h,y=d*c*u;e.compute(Mi(g,n,i,w,b,y,a,!0,r),{inputs:g})},ji=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),a=[1].concat(t.dilations),o=[1].concat(t.kernelShape),l=Bi({...t,pads:s,strides:i,dilations:a,kernelShape:o},r);Ni(e,r,l,e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])},Ri=(e,t,n)=>{let r="NHWC"===n.format?"channelsLast":"channelsFirst",s=Bi(n,t),i="NOTSET"===n.autoPad?n.pads:n.autoPad,a=Pi(t[0].dims,t[1].dims,n.strides,n.dilations,i,!1,r);e.compute(Ai(t,s,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],r))},Vi=(e,t)=>{if(Li(e.inputs,t),3===e.inputs[0].dims.length)ji(e,t);else if(5===e.inputs[0].dims.length)Ri(e,e.inputs,t);else{let n=Bi(t,e.inputs);Ni(e,e.inputs,n)}}}),ed=re(()=>{Mu(),Tu(),$u(),zu(),Gi=(e,t,n)=>{let r=e.length>2,s=t.outputShape,i="NHWC"===t.format,a=t.group,o=e[1].dims,l=o[2]/a,u=o[3],d=i?hn(l):1,c=i&&1===u&&l>=4,p=c?4*Math.floor(l/4):Math.floor(l/d)*d,h=l-p,m=i?hn(u):1,f=i?1===u?d:m:1,_=At.size(s)/m,g=[Math.ceil(_/64),1,1];Ct("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${g}`);let w=["rank","rank"],b=[t.strides[0],t.strides[1]],y=[t.kernelShape[i?1:2],t.kernelShape[i?2:3]],v=[t.dilations[0],t.dilations[1]],x=[y[0]+(t.dilations[0]<=1?0:(t.kernelShape[i?1:2]-1)*(t.dilations[0]-1)),y[1]+(t.dilations[1]<=1?0:(t.kernelShape[i?2:3]-1)*(t.dilations[1]-1))],M=[x[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),x[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],k=[{type:12,data:_},{type:12,data:b},{type:12,data:y},{type:12,data:v},{type:12,data:x},{type:6,data:M},{type:12,data:p},{type:12,data:l},{type:12,data:u},...pn(e[0].dims,e[1].dims)];r&&(k.push(...pn(e[2].dims)),w.push("rank")),k.push(...pn(s));return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${d}${f}${m}${c}${h}`,inputDependencies:w},getRunData:()=>({dispatchGroup:{x:g[0],y:g[1],z:g[2]},outputs:[{dims:n?n(s):s,dataType:e[0].dataType}],programUniforms:k}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:b.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:x.length},{name:"pads",type:"i32",length:M.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],a=dn(e[0].dataType),o=i?1:2,l=i?2:3,u=i?3:1,p=bn("W",e[1].dataType,e[1].dims.length,f),_=bn("Dy",e[0].dataType,e[0].dims.length,d),g=[_,p];r&&g.push(bn("bias",e[2].dataType,[s[u]].length,m));let w=yn("result",e[0].dataType,s.length,m),v=`\n            let outputIndices = ${w.offsetToIndices(`global_idx * ${m}`)};\n            let batch = ${w.indicesGet("outputIndices",0)};\n            let d1 = ${w.indicesGet("outputIndices",u)};\n            let r = ${w.indicesGet("outputIndices",o)};\n            let c = ${w.indicesGet("outputIndices",l)};\n            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n            let dyRCorner = dyCorner.x;\n            let dyCCorner = dyCorner.y;\n            let groupId = d1 / uniforms.output_channels_per_group;\n            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n            // ? = to be determined. : = across all values in that axis.\n            var dotProd = ${w.type.value}(0.0);\n            var wR: u32 = 0;\n            if (uniforms.dilations.x == 1) {\n              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0\n              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);\n            }\n            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n              if (wR % uniforms.dilations.x != 0) {\n                continue;\n              }\n              let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n              if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${o}]) || fract(dyR) > 0.0 ||\n                  wRPerm < 0) {\n                continue;\n              }\n              let idyR: u32 = u32(dyR);\n              var wC: u32 = 0;\n              if (uniforms.dilations.y == 1) {\n                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0\n                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);\n              }\n              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n                if (wC % uniforms.dilations.y != 0) {\n                  continue;\n                }\n                let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n                if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${l}]) ||\n                    fract(dyC) > 0.0 || wCPerm < 0) {\n                  continue;\n                }\n                let idyC: u32 = u32(dyC);\n                var inputChannel = groupId * uniforms.input_channels_per_group;\n                ${c?`\n                var x_offset = ${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${d};\n                var w_offset = ${p.indicesToOffset(`${p.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${f};\n                  `:""}\n                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${c?4:d}) {\n                  ${(()=>{let e="";if(c)4===d?e+=`\n        let xValue = ${_.getByOffset("x_offset")};\n        let wValue = ${p.getByOffset("w_offset")};\n        dotProd = dotProd + dot(xValue, wValue);\n        x_offset += 1u;\n        w_offset += 1u;`:2===d?e+=`\n          dotProd = dotProd + dot(vec4<${a}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}), vec4<${a}>(${p.getByOffset("w_offset")}, ${p.getByOffset("w_offset + 1u")}));\n          x_offset += 2u;\n          w_offset += 2u;`:1===d&&(e+=`\n          dotProd = dotProd + dot(vec4<${a}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}, ${_.getByOffset("x_offset + 2u")}, ${_.getByOffset("x_offset + 3u")}), vec4<${a}>(${p.getByOffset("w_offset")}, ${p.getByOffset("w_offset + 1u")}, ${p.getByOffset("w_offset + 2u")}, ${p.getByOffset("w_offset + 3u")}));\n          x_offset += 4u;\n          w_offset += 4u;`);else if(e+=`\n                  let xValue = ${i?_.getByOffset(`${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${d}`):_.get("batch","inputChannel","idyR","idyC")};\n        `,1===d)e+=`\n          let w_offset = ${p.indicesToOffset(`${p.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};\n          let wValue = ${p.getByOffset(`w_offset / ${f}`)};\n          dotProd = dotProd + xValue * wValue;`;else for(let t=0;t<d;t++)e+=`\n            let wValue${t} = ${p.getByOffset(`${p.indicesToOffset(`${p.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${t}, wOutChannel)`)} / ${f}`)};\n            dotProd = dotProd + xValue[${t}] * wValue${t};`;return e})()}\n                  inputChannel = inputChannel + ${c?4:d};\n                }\n                ${(()=>{if(0===h)return"";if(!c)throw new Error(`packInputAs4 ${c} is not true.`);let e="";if(1===d){e+="dotProd = dotProd";for(let t=0;t<h;t++)e+=`\n            + ${_.getByOffset(`x_offset + ${t}`)} * ${p.getByOffset(`w_offset + ${t}`)}`;e+=";"}else if(2===d){if(2!==h)throw new Error(`Invalid inputChannelsRemainder ${h}.`);e+=`\n          let xValue = ${_.getByOffset("x_offset")};\n          let wValue = ${p.getByOffset("w_offset")};\n          dotProd = dotProd + dot(xValue, wValue);`}return e})()}\n                wC = wC + uniforms.strides.y - 1;\n              }\n              wR = wR + uniforms.strides[0] - 1;\n            }\n            let value = dotProd${r?` + bias[d1 / ${m}]`:""};\n            ${w.setByOffset("global_idx","value")};\n          `;return`\n    ${t.registerUniforms(n).declareVariables(...g,w)}\n      ${t.mainStart()}\n      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n    ${v}}`}}}}),td=re(()=>{ed(),Uu(),Fu(),qi=(e,t,n,r,s,i)=>(e-1)*t+n+(r-1)*s+1-i,Ui=(e,t,n,r,s)=>{let i=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=i,n[s]=e-i):"SAME_LOWER"===t&&(n[r]=e-i,n[s]=i)},Wi=(e,t,n,r,s,i,a,o,l,u)=>{let d=e.length-2,c=0===u.length;l.length<d&&l.push(...Array(d-l.length).fill(0));let p=e[0],h=t[o?3:1]*s;for(let m=0,f=e.length-d-(o?1:0);m<d;++m,++f){let s=e[f],o=c?s*a[m]:u[m],p=qi(s,a[m],i[m],t[f],n[m],o);Ui(p,r,i,m,m+d),c&&u.push(a[m]*(s-1)+l[m]+(t[f]-1)*n[m]+1-i[m]-i[m+d])}u.splice(0,0,p),u.splice(o?3:1,0,h)},Hi=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce((e,t)=>e*t,1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let s=e.pads.slice(),i=e.outputShape.slice(),a=e.outputPadding.slice(),o=t[0].dims,l=e.dilations.slice();if(0===l.reduce((e,t)=>e+t,0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}let u=e.strides.slice();if(0===u.reduce((e,t)=>e+t,0)){let e=t[0].dims.length-2;u=new Array(e).fill(1)}Wi(o,n,l,e.autoPad,e.group,s,u,r,a,i);let d=Object.assign({},e);return Object.assign(d,{kernelShape:n,pads:s,outputPadding:a,outputShape:i,dilations:l,strides:u}),d},Ki=e=>{let t=li(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,i=e.group,a=e.kernelShape,o=e.pads,l=e.strides,u=e.wIsConst();return{autoPad:r,format:n,dilations:s,group:i,kernelShape:a,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:o,strides:l,wIsConst:u,...t,cacheKey:`${e.format};${t.activation};`}},Qi=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.reduce((e,t)=>e+t,0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce((e,t)=>e+t,0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce((e,t)=>e+t,0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce((e,t)=>e+t,0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Xi=(e,t,n,r)=>{let s=e.kernelCustomData.wT??e.compute(An(t[1],[2,3,0,1]),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=s);let i=[t[0],s];3===t.length&&i.push(t[2]),e.compute(Gi(i,n,r),{inputs:i})},Ji=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=t.kernelShape;(0===s.length||0===s[0])&&(s=[e.inputs[1].dims[2]]);let i=t.dilations;(0===i.length||0===i[0])&&(i=[1]);let a=t.strides;(0===a.length||0===a[0])&&(a=[1]);let o=t.pads;0===o.length&&(o=[0,0]),o=[0,o[0],0,o[1]],a=[1].concat(a),i=[1].concat(i),s=[1].concat(s);let l=t.outputPadding;l=[0].concat(l);let u=Hi({...t,pads:o,strides:a,dilations:i,kernelShape:s,outputPadding:l},r);Xi(e,r,u,e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])},Yi=(e,t)=>{if(Qi(e.inputs,t),3===e.inputs[0].dims.length)Ji(e,t);else{let n=Hi(t,e.inputs);Xi(e,e.inputs,n)}}}),nd=re(()=>{Mu(),$u(),Iu(),zu(),Zi=(e,t,n,r)=>{let s=At.size(t),i=t.length,a=bn("input",e,i),o=yn("output",e,i),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),u=At.normalizeAxis(l,i);return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:12,data:u},...pn(t,t)]}),getShaderSource:e=>{let t=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,n=gn("uniforms.input_shape","uniforms.axis",i),s=r.reverse?t+(r.exclusive?" + 1":""):"0",l=r.reverse?n:t+(r.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,o)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${o.offsetToIndices("global_idx")};\n                  var sum = ${o.type.value}(0);\n                  let first : i32 = ${s};\n                  let last : i32 = ${l};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${o.setByOffset("global_idx","sum")};\n                }`}}},ea=(e,t)=>{let n=e.inputs[0].dims,r=e.inputs[0].dataType,s=e.inputs[1];e.compute(Zi(r,n,s,t),{inputs:[0]})},ta=e=>{let t=1===e.exclusive,n=1===e.reverse;return on({exclusive:t,reverse:n})}}),rd=re(()=>{Mu(),$u(),Iu(),zu(),na=e=>{if(!e||1!==e.length)throw new Error("DepthToSpace requires 1 input.");if(4!==e[0].dims.length)throw new Error("DepthToSpace requires 4D input.")},ra=(e,t,n,r)=>{let s=[];s.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let i=0;i<t;++i)s.push(n.indicesSet("a",e[i],`i[${i}]`));return s.push("return a;}"),s.join("\n")},sa=(e,t)=>{let n,r,s,i,a,o,l="NHWC"===t.format,u=t.blocksize,d="DCR"===t.mode;l?([n,r,s,i]=e.dims,a=d?[n,r,s,u,u,i/u**2]:[n,r,s,i/u**2,u,u],o=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([n,r,s,i]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[n,u,u,i/u**2,r,s]:[n,i/u**2,u,u,r,s],o=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let c=e.reshape(a),p=c.dims.length,h=e.dataType,m=bn("a",h,p),f=yn("output",h,p);return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:e=>{let t=l?[n,r*u,s*u,i/u**2]:[n,i/u**2,r*u,s*u],a=At.size(t),d=c.dims,p=At.sortBasedOnPerm(d,o);return{outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...pn(d,p)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(m,f)}\n\n  ${ra(o,p,m,f)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${f.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${f.setByOffset("global_idx",m.getByIndices("aIndices"))}\n  }`}},ia=(e,t)=>{na(e.inputs),e.compute(sa(e.inputs[0],t))},aa=e=>on({blocksize:e.blocksize,mode:e.mode,format:e.format})}),sd=re(()=>{Mu(),$u(),Iu(),zu(),ua="^"+(la="("+(oa="[a-zA-Z]|\\.\\.\\.")+")+")+"$",da="^"+("("+la+",)*"+la)+"$",ca=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},pa=class{constructor(e,t){var n;this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[r,s]=t.includes("->")?t.split("->",2):[t,""];if(!r.match(RegExp(da)))throw new Error("Invalid LHS term");if(r.split(",").forEach((t,n)=>{let r=e[n].dims.slice();if(!t.match(RegExp(ua)))throw new Error("Invalid LHS term");let s=this.processTerm(t,!0,r,n);this.lhs.push(s)}),""===s)s+=[...this.symbolToInfo.entries()].filter(([e,t])=>1===t.count||"..."===e).map(([e])=>e).join("");else if(!s.match(RegExp(la)))throw new Error("Invalid RHS");null==(n=s.match(RegExp(oa,"g")))||n.forEach(e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n,r=-1){let s=n.length,i=!1,a=[],o=0;if(!e.match(RegExp(ua))&&!t&&""!==e)throw new Error("Invalid LHS term");let l=e.match(RegExp(oa,"g")),u=new ca(r);return null==l||l.forEach((e,d)=>{if("..."===e){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let e=s-l.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(a=n.slice(o,o+e),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=a}for(let t=0;t<a.length;t++){let e=String.fromCharCode(48+t);u.addSymbol(e,d+t),this.addSymbol(e,n[o++],r)}}else u.addSymbol(e,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[o++],r)}),u}},ha=e=>e+"_max",ma=(e,t,n,r)=>{let s=e.map(e=>e.length).map((e,n)=>bn(`input${n}`,t,e)),i=At.size(r),a=yn("output",t,r.length),o=[...n.symbolToInfo.keys()].filter(e=>!n.rhs.symbolToIndices.has(e));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let s=o.filter(e=>n.symbolToInfo.has(e)).map(e=>{var t;return{type:12,data:(null==(t=n.symbolToInfo.get(e))?void 0:t.dimValue)||0}});s.push({type:12,data:i});let a=e.map((e,t)=>[...pn(e)]).reduce((e,t)=>e.concat(t),s);return a.push(...pn(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a}},getShaderSource:e=>{let t=[],r=[],i=[],l=[],u=[],d=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach((e,o)=>{var d;if(n.rhs.symbolToIndices.has(o)){let r=null==(d=n.rhs.symbolToIndices.get(o))?void 0:d[0];void 0!==r&&n.lhs.forEach((n,i)=>{if(e.inputIndices.includes(i)){let e=n.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach(e=>{t.push(`${s[i].indicesSet(`input${i}Indices`,e,a.indicesGet("outputIndices",r))}`)})}})}else n.lhs.forEach((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach(e=>{r.push(`${s[n].indicesSet(`input${n}Indices`,e,`${o}`)}`)}),u.push(`prod *= ${s[n].getByIndices(`input${n}Indices`)};`)}}),i.push(`for(var ${o}: u32 = 0; ${o} < uniforms.${ha(o)}; ${o}++) {`),l.push("}")});let c=d?[...t,`let sum = ${s.map((e,t)=>e.getByIndices(`input${t}Indices`)).join(" * ")};`]:[...t,"var sum = 0.0;",...i,...r,"var prod = 1.0;",...u,"sum += prod;",...l];return`\n            ${e.registerUniforms(o.map(e=>({name:`${ha(e)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...s,a)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${a.offsetToIndices("global_idx")};\n            ${s.map((e,t)=>`var input${t}Indices: ${s[t].type.indices};`).join("\n")}\n            ${c.join("\n")};\n            ${a.setByOffset("global_idx","sum")};\n          }`}}},fa=(e,t)=>{let n=new pa(e.inputs,t.equation),r=n.outputDims,s=e.inputs.map((e,t)=>e.dims);e.compute(ma(s,e.inputs[0].dataType,n,r))},_a=e=>{let t=e.equation.replace(/\s+/g,"");return on({equation:t})}}),id=re(()=>{Mu(),$u(),zu(),ga=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,s=t.length<n.length?0:t.length-n.length;for(;r<n.length&&s<t.length;++r,++s)if(n[r]!==t[s]&&1!==n[r]&&1!==t[s])throw new Error("Expand requires shape to be broadcastable to input")},wa=(e,t)=>{let n=e.length-t.length,r=[];for(let s=0;s<n;++s)r.push(e[s]);for(let s=0;s<t.length;++s)r.push(1===t[s]?e[s+n]:t[s]);return r},ba=(e,t)=>e.length>t.length?wa(e,t):wa(t,e),ya=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=ba(t,n),s=e[0].dataType,i=9===s||1===At.size(t),a=9===s||t.length>0&&t[t.length-1]%4==0?4:1,o=i||r.length>0&&r[r.length-1]%4==0?4:1,l=Math.ceil(At.size(r)/o),u=[{type:12,data:l},...pn(t,r)];return{name:"Expand",shaderCache:{hint:`${r.length};${a}${o}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,i=bn("input",s,t.length,a),l=yn("output",s,r.length,o);if(9===s){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${l.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${i.broadcastedIndicesToOffset(`outputIndices${t}`,l)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${i.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${o};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${l.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${l.offsetToIndices(`global_idx * ${o}`)};\n        let inputOffset = ${i.broadcastedIndicesToOffset("outputIndices",l)};\n        let data = ${l.type.value}(${i.getByOffset(`inputOffset / ${a}`)});\n        ${l.setByOffset("global_idx","data")}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(i,l)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u})}},va=e=>{ga(e.inputs),e.compute(ya(e.inputs),{inputs:[0]})}}),ad=re(()=>{Mu(),$u(),zu(),Ru(),xa=e=>{let t=e[0].dataType,n=At.size(e[0].dims),r=At.size(e[1].dims),s=r%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=bn("x",t,[1],4),r=bn("bias",t,[1],4),i=yn("y",t,[1],4),a=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,o=s?`\n      let bias = ${r.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${a(0)}${a(1)}${a(2)}${a(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,r,i)}\n\n    ${Es(cn(t))}\n\n    ${e.mainStart(ln)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${o}\n      let x_in = x + bias;\n      ${i.setByOffset("global_idx",Ps("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/ln/4)}})}},Ma=e=>{e.inputs.length<2||0===At.size(e.inputs[1].dims)?As(e):e.compute(xa(e.inputs))}}),od=re(()=>{Mu(),$u(),Iu(),zu(),ka=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},Ta=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,i=At.normalizeAxis(t.axis,s),a=n.slice(0);a.splice(i,1,...r);let o=n[i],l=9===e[0].dataType?4:1,u=Math.ceil(At.size(a)/l),d=[{type:12,data:u},{type:6,data:o},{type:12,data:i},...pn(e[0].dims,e[1].dims,a)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let n,o=bn("data",e[0].dataType,e[0].dims.length,l),u=bn("inputIndices",e[1].dataType,e[1].dims.length),d=yn("output",e[0].dataType,a.length,l),c=e=>{let t=r.length,n=`var indicesIndices${e}  = ${u.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${a.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${u.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} : ${o.type.indices};\n        `;for(let r=0,o=0;r<s;r++)r===i?(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,o+=t):(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${a.length>1?`outputIndices${e}[${o}]`:`outputIndices${e}`};`,o++);return n};if(9===e[0].dataType){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${d.offsetToIndices(`outputOffset + ${t}u`)};\n          ${c(t)};\n          let offset${t} = ${o.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${l};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${d.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      ${c("")};\n      let value = ${o.getByIndices("dataIndices")};\n      ${d.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(o,u,d)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},$a=e=>on({axis:e.axis}),Sa=(e,t)=>{let n=e.inputs;ka(n),e.compute(Ta(e.inputs,t))}}),ld=re(()=>{Mu(),$u(),zu(),Ca=(e,t,n,r,s,i,a,o,l)=>{let u=[{type:12,data:i},{type:12,data:r},{type:12,data:s},{type:12,data:n},{type:12,data:a},{type:12,data:o},{type:12,data:l}],d=[i];u.push(...pn(t.dims,d));return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${s.length}_${n.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:u}),getShaderSource:e=>{let r=[bn("indices_data",t.dataType,t.dims.length),yn("input_slice_offsets_data",12,1,1)],i=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:s.length},{name:"sizes_from_slice_dims_data",type:"u32",length:n.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`\n  ${e.registerUniforms(i).declareVariables(...r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let batch_idx = global_idx / uniforms.num_slices_per_batch;\n    let base_offset = batch_idx * uniforms.input_batch_stride;\n\n    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;\n    var relative_slice_offset = 0;\n    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {\n      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);\n      let input_dim_idx = uniforms.batch_dims + dim_idx;\n      if (index < 0) {\n        ${1===s.length?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}\n      }\n      ${1===n.length?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}\n    }\n\n    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);\n  }`}},{inputs:[t],outputs:[-1]})[0]},Ea=(e,t)=>{let n=e.inputs,r=n[0].dims,s=n[0].dataType,i=n[1].dims,a=i[i.length-1],o=At.sizeToDimension(i,i.length-1),l=At.sizeFromDimension(r,t.batchDims+a),u=At.sizeToDimension(r,t.batchDims),d=At.sizeFromDimension(r,t.batchDims),c=o/u,p=new Array(a),h=l;for(let b=0;b<a;++b)p[a-1-b]=h,h*=r[t.batchDims+a-1-b];let m=Ca(e,n[1],p,t.batchDims,r,o,c,d,a),f=t.batchDims+a;if(f>r.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let _=i.slice(0,-1).concat(r.slice(f)),g=At.size(_),w=[{type:12,data:g},{type:12,data:l},...pn(n[0].dims,m.dims,_)];e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:_,dataType:s}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:w}),getShaderSource:e=>{let t=bn("data",n[0].dataType,n[0].dims.length),r=bn("slice_offsets",12,m.dims.length),s=yn("output",n[0].dataType,_.length);return`\n          ${e.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(t,r,s)}\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];\n          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];\n        }`}},{inputs:[n[0],m]})},Pa=e=>({batchDims:e.batch_dims,cacheKey:""})}),ud=re(()=>{Mu(),$u(),Iu(),zu(),Aa=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let n=At.normalizeAxis(t.quantizeAxis,e[0].dims.length),r=t.blockSize,s=e[0],i=e[2],a=4===e.length?e[3]:void 0;if(i.dims.length!==s.dims.length||!s.dims.map((e,t)=>t===n?Math.ceil(e/r)===i.dims[t]:e===i.dims[t]).reduce((e,t)=>e&&t,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==s.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==i.dims.length||!a.dims.map((e,t)=>e===i.dims[t]).reduce((e,t)=>e&&t,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Ia=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,i=At.normalizeAxis(t.gatherAxis,s),a=At.normalizeAxis(t.quantizeAxis,s),o=n.slice(0);o.splice(i,1,...r);let l=At.size(o),u=e[2].dataType,d=22===e[0].dataType,c=[{type:12,data:l},{type:12,data:a},{type:12,data:i},{type:12,data:t.blockSize},...pn(...e.map((e,t)=>e.dims),o)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter((e,t)=>1!==t).map(e=>e.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(e,t)=>"rank")},getRunData:()=>({outputs:[{dims:o,dataType:u}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:t=>{let s=bn("data",e[0].dataType,e[0].dims.length),a=bn("inputIndices",e[1].dataType,e[1].dims.length),l=bn("scales",e[2].dataType,e[2].dims.length),c=e.length>3?bn("zeroPoint",e[3].dataType,e[3].dims.length):void 0,p=yn("output",u,o.length),h=[s,a,l];c&&h.push(c);return`\n        ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...h,p)}\n        ${t.mainStart()}\n        let output_indices = ${p.offsetToIndices("global_idx")};\n        var indices_indices = ${a.type.indices}(0);\n        ${r.length>1?`\n          for (var i: u32 = 0; i < ${r.length}; i++) {\n            let index = ${p.indicesGet("output_indices","uniforms.gather_axis + i")};\n            ${a.indicesSet("indices_indices","i","index")};\n          }`:`indices_indices = ${p.indicesGet("output_indices","uniforms.gather_axis")};`};\n        var data_indices = ${s.type.indices}(0);\n        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {\n          let index = ${p.indicesGet("output_indices","i")};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        var index_from_indices = ${a.getByIndices("indices_indices")};\n        if (index_from_indices < 0) {\n          index_from_indices += ${n[i]};\n        }\n        ${s.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};\n        for (var i = uniforms.gather_axis + 1; i < ${o.length}; i++) {\n          let index = ${p.indicesGet("output_indices",`i + ${r.length} - 1`)};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        let data_offset = ${s.indicesToOffset("data_indices")};\n        let data_index = data_offset % 8;\n        // Convert 4-bit packed data to 8-bit packed data.\n        let packed_4bit_quantized_data = ${s.getByOffset("data_offset / 8")};\n        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;\n        let quantized_data_vec = ${d?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));\n        let quantized_data = quantized_data_vec[data_index / 2];\n        var scale_indices = data_indices;\n        let quantize_axis_index = ${l.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;\n        ${l.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};\n        var scale = ${l.getByIndices("scale_indices")};\n        ${c?`\n              let zero_point_indices = scale_indices;\n              let zero_point_offset = ${c.indicesToOffset("zero_point_indices")};\n              let zero_point_index = zero_point_offset % 8;\n              let packed_4bit_zero_points = ${c.getByOffset("zero_point_offset / 8")};\n              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;\n              let zero_point_vec = ${d?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));\n              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};\n        let dequantized_data = ${cn(u)}(quantized_data - zero_point) * scale;\n        ${p.setByOffset("global_idx","dequantized_data")};\n    }`}}},za=(e,t)=>{let n=e.inputs;Aa(n,t),e.compute(Ia(e.inputs,t))},Fa=e=>on({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),dd=re(()=>{Mu(),$u(),Iu(),zu(),Oa=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},La=(e,t)=>{let n=e[0].dims,r=e[0].dataType,s=n.length,i=e[1].dims,a=e[1].dataType,o=At.normalizeAxis(t.axis,s),l=n[o],u=i.slice(0),d=At.size(u),c=bn("input",r,s),p=bn("indicesInput",a,i.length),h=yn("output",r,u.length),m=[{type:12,data:d},{type:6,data:l},{type:12,data:o}];return m.push(...pn(n,i,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:m}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,p,h)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${h.offsetToIndices("global_idx")};\n\n      var idx = ${p.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${c.type.indices}(outputIndices);\n      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${c.getByIndices("inputIndices")};\n\n      ${h.setByOffset("global_idx","value")};\n  }`}},Ba=e=>on({axis:e.axis}),Da=(e,t)=>{let n=e.inputs;Oa(n),e.compute(La(e.inputs,t))}}),cd=re(()=>{Mu(),$u(),zu(),Na=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},ja=(e,t)=>{let n=e[0].dims.slice(),r=e[1].dims.slice(),[s,i,a]=zt.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),o=[s,i];if(!o)throw new Error("Can't use gemm on the given tensors");let l=16,u=Math.ceil(i/l),d=Math.ceil(s/l),c=(At.size(o),[{type:12,data:u},{type:12,data:s},{type:12,data:i},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}]),p=["type","type"];3===e.length&&(c.push(...pn(e[2].dims)),p.push("rank")),c.push(...pn(o));return{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u*d},programUniforms:c}),getShaderSource:n=>{let r=bn("a",e[0].dataType,e[0].dims),s=bn("b",e[1].dataType,e[1].dims),i=null,a=[r,s];3===e.length&&(i=bn("c",e[2].dataType,e[2].dims.length),a.push(i));let u=yn("output",e[0].dataType,o.length);a.push(u);let d="",c="";t.transA&&t.transB?(c=`\n      var col = tile_row_start + local_id.x;\n      var row = k_start + local_id.y;\n      if (col < uniforms.M && row < uniforms.K) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = k_start + local_id.x;\n      row = tile_col_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.N) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,d="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(c=`\n      var col = tile_row_start + local_id.x;\n      var row = k_start + local_id.y;\n      if (col < uniforms.M && row < uniforms.K) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = tile_col_start + local_id.x;\n      row = k_start + local_id.y;\n      if (col < uniforms.N && row < uniforms.K) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,d="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(c=`\n      var col = k_start + local_id.x;\n      var row = tile_row_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.M) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = k_start + local_id.x;\n      row = tile_col_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.N) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,d="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(c=`\n      var col = k_start + local_id.x;\n      var row = tile_row_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.M) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = tile_col_start + local_id.x;\n      row = k_start + local_id.y;\n      if (col < uniforms.N && row < uniforms.K) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,d="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let p=1===t.alpha?"":"value *= uniforms.alpha;";return`\n  ${n.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...a)}\n  var<workgroup> tile_a: array<array<${r.type.storage}, 16>, 16>;\n  var<workgroup> tile_b: array<array<${s.type.storage}, 16>, 16>;\n  ${n.mainStart([l,l,1])}\n    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;\n    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;\n    let num_tiles = (uniforms.K - 1) / 16 + 1;\n    var k_start = 0u;\n    var value = ${u.type.value}(0);\n    for (var t: u32 = 0u; t < num_tiles; t++) {\n      ${c}\n      k_start = k_start + 16;\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < 16; k++) {\n        ${d}\n      }\n      workgroupBarrier();\n    }\n\n    ${p}\n    let m = tile_row_start + local_id.y;\n    let n = tile_col_start + local_id.x;\n    ${null!=i?`let cOffset = ${i.broadcastedIndicesToOffset("vec2(m, n)",u)}; value += ${u.type.value}(uniforms.beta) * ${i.getByOffset("cOffset")};`:""}\n    if (m < uniforms.M && n < uniforms.N) {\n      output[m * uniforms.N + n] = value;\n    }\n  }`}}},Ra=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),Va=(e,t)=>{Na(e.inputs),e.compute(ja(e.inputs,t))}}),pd=re(()=>{Mu(),$u(),Iu(),zu(),[Ga,qa,Ua,Wa]=[0,1,2,3],Ha=e=>{if(4!==e[0].dims.length)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error("last dimension of grid must be equal to "+(e[0].dims.length-2));if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},Ka=e=>`\n  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {\n    var v: vec4<f32>;\n    var coeffs = gs_get_cubic_coeffs(x);\n    for (var i = 0; i < 4; i++) {\n      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];\n    }\n    coeffs = gs_get_cubic_coeffs(y);\n    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);\n    return pixel;\n  }\n`,Qa=e=>`\n  fn gs_denormalize(n: f32, length: i32) -> f32 {\n    ${0===e.alignCorners?"\n    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]\n    return ((n + 1.0) * f32(length) - 1.0) / 2.0;\n    ":"\n    // alignCorners: true => [-1, 1] to [0, length - 1]\n    return (n + 1.0) / 2.0 * (f32(length - 1));\n    "}\n  }\n`,Xa=e=>`\n  ${"reflection"===e.paddingMode?"\n      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {\n        var dx = 0.0;\n        var fx = f32(x);\n        let range = x_max - x_min;\n        if (fx < x_min) {\n          dx = x_min - fx;\n          let n = u32(dx / range);\n          let r = dx - f32(n) * range;\n          if (n % 2 == 0) {\n            fx = x_min + r;\n          } else {\n            fx = x_max - r;\n          }\n        } else if (fx > x_max) {\n          dx = fx - x_max;\n          let n = u32(dx / range);\n          let r = dx - f32(n) * range;\n          if (n % 2 == 0) {\n            fx = x_max - r;\n          } else {\n            fx = x_min + r;\n          }\n        }\n        return u32(fx);\n      }":""}\n`,Ja=(e,t,n)=>`\n  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {\n     var pixel = ${t}(0);\n     var indices = vec4<u32>(0);\n     indices[${Ga}] = batch;\n     indices[${qa}] = channel;`+(()=>{switch(n.paddingMode){case"zeros":return`\n          if (r >= 0 && r < H && c >=0 && c < W) {\n            indices[${Ua}] = u32(r);\n            indices[${Wa}] = u32(c);\n          } else {\n            return ${t}(0);\n          }\n        `;case"border":return`\n          indices[${Ua}] = u32(clamp(r, 0, H - 1));\n          indices[${Wa}] = u32(clamp(c, 0, W - 1));\n        `;case"reflection":return`\n          indices[${Ua}] = gs_reflect(r, border[1], border[3]);\n          indices[${Wa}] = gs_reflect(c, border[0], border[2]);\n        `;default:throw new Error(`padding mode ${n.paddingMode} is not supported`)}})()+`\n    return ${e.getByIndices("indices")};\n  }\n`,Ya=(e,t,n)=>(()=>{switch(n.mode){case"nearest":return`\n          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Ga}], indices[${qa}], border);\n        `;case"bilinear":return`\n          let x1 = i32(floor(x));\n          let y1 = i32(floor(y));\n          let x2 = x1 + 1;\n          let y2 = y1 + 1;\n\n          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Ga}], indices[${qa}], border);\n          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Ga}], indices[${qa}], border);\n          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Ga}], indices[${qa}], border);\n          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Ga}], indices[${qa}], border);\n\n          let dx2 = ${t}(f32(x2) - x);\n          let dx1 = ${t}(x - f32(x1));\n          let dy2 = ${t}(f32(y2) - y);\n          let dy1 = ${t}(y - f32(y1));\n          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);\n        `;case"bicubic":return`\n          let x0 = i32(floor(x)) - 1;\n          let y0 = i32(floor(y)) - 1;\n          var p: mat4x4<${t}>;\n          for (var h = 0; h < 4; h++) {\n            for (var w = 0; w < 4; w++) {\n              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Ga}], indices[${qa}], border);\n            }\n          }\n\n          let dx = x - f32(x0 + 1);\n          let dy = y - f32(y0 + 1);\n          let result = gs_bicubic_interpolate(p, dx, dy);\n        `;default:throw new Error(`mode ${n.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Za=(e,t)=>{let n=bn("x",e[0].dataType,e[0].dims.length),r=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],s=bn("grid",e[1].dataType,r.length,2),i=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];"NHWC"===t.format&&(i=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Ga,qa,Ua,Wa]=[0,3,1,2]);let a=yn("output",e[0].dataType,i.length),o=n.type.value,l=[{type:12,data:At.size(i)},...pn(e[0].dims,r,i)];return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:e=>{let t=At.size(i);return{outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:l}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(n,s,a)}\n  \n  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {\n    let cubic_alpha = -0.75f;\n    let x_abs = abs(x);\n    var coeffs: vec4<f32>;\n    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);\n    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);\n    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);\n    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);\n    return coeffs;\n  }\n\n  ${Ka(o)}\n  ${Qa(t)}\n  ${Xa(t)}\n  ${Ja(n,o,t)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let H_in = i32(uniforms.x_shape[${Ua}]);\n      let W_in = i32(uniforms.x_shape[${Wa}]);\n\n      ${0===t.alignCorners?"\n      let x_min = -0.5;\n      let x_max = f32(W_in) - 0.5;\n      let y_min = -0.5;\n      let y_max = f32(H_in) - 0.5;\n      ":"\n      let x_min = 0.0;\n      let x_max = f32(W_in) - 1.0;\n      let y_min = 0.0;\n      let y_max = f32(H_in) - 1.0;\n      "};\n      let border = vec4<f32>(x_min, y_min, x_max, y_max);\n\n      let indices = ${a.offsetToIndices("global_idx")};\n      var grid_indices = vec3<u32>(indices[${Ga}], indices[${Ua}], indices[${Wa}]);\n      let nxy = ${s.getByIndices("grid_indices")};\n      var x = gs_denormalize(f32(nxy[0]), W_in);\n      var y = gs_denormalize(f32(nxy[1]), H_in);\n\n      ${Ya(a,o,t)}\n  }`}},eo=(e,t)=>{Ha(e.inputs),e.compute(Za(e.inputs,t))},to=e=>on({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),hd=re(()=>{Mu(),$u(),Iu(),Pu(),Du(),zu(),Fu(),no=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,ro=(e,t)=>{let n=e[0],r=no(e,1),s=no(e,2),i=no(e,3),a=no(e,4),o=no(e,5),l=no(e,6),u=no(e,7);if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let d,c=n.dims[0],p=n.dims[1],h=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],m=p,f=0,_=0,g=Math.floor(h/t.numHeads);if(l&&u&&At.size(l.dims)&&At.size(u.dims)){if(4!==l.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==c||l.dims[1]!==t.numHeads||l.dims[3]!==g)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==c||u.dims[1]!==t.numHeads||u.dims[3]!==g)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==u.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],_=l.dims[2]}else if(l&&At.size(l.dims)||u&&At.size(u.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r&&At.size(r.dims)>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');d=2,m=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==g)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');d=5,m=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==g)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=0,m=r.dims[2]}}else{if(5!==n.dims.length)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(n.dims[2]!==t.numHeads||3!==n.dims[3])throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');d=3}if(i&&At.size(i.dims)>0){if(1!==i.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&5===r.dims.length&&2===r.dims[3])throw new Error("bias is not allowed for packed kv.")}let w=f+m,b=0;if(a&&At.size(a.dims)>0){b=8;let e=a.dims;throw 1===e.length?e[0]===c?b=1:e[0]===3*c+2&&(b=3):2===e.length&&e[0]===c&&e[1]===w&&(b=5),8===b?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let y=!1,v=h;if(s&&At.size(s.dims)>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(m!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=s.dims[2]}else{if(m!==s.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=s.dims[1]*s.dims[3],y=!0}}if(a&&At.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(o&&At.size(o.dims)>0){if(4!==o.dims.length)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(o.dims[0]!==c||o.dims[1]!==t.numHeads||o.dims[2]!==p||o.dims[3]!==w)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:p,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:w,maxSequenceLength:_,inputHiddenSize:0,hiddenSize:h,vHiddenSize:v,headSize:g,vHeadSize:Math.floor(v/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:b,scale:t.scale,broadcastResPosBias:!1,passPastInKv:y,qkvFormat:d}},so=e=>on({...e}),io=on({perm:[0,2,1,3]}),ao=(e,t,n,r,s,i,a)=>{let o=[r,s,i],l=At.size(o),u=[{type:12,data:l},{type:12,data:a},{type:12,data:i}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:e=>{let r=yn("qkv_with_bias",t.dataType,o),s=bn("qkv",t.dataType,o),i=bn("bias",n.dataType,o);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(s,i,r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},oo=(e,t,n,r,s,i,a,o)=>{let l=i;if(a&&At.size(a.dims)>0){if(1===r)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=ao(e,i,a,t,r,n*s,o),l=l.reshape([t,r,n,s]),1===n||1===r?l:e.compute(An(l,io.perm),{inputs:[l],outputs:[-1]})[0]}return 3===i.dims.length&&(l=i.reshape([t,r,n,s])),1===n||1===r?l:e.compute(An(l,io.perm),{inputs:[l],outputs:[-1]})[0]},lo=(e,t)=>{let n=ro(e.inputs,t),r=e.inputs[0],s=no(e.inputs,1),i=no(e.inputs,2),a=no(e.inputs,3),o=no(e.inputs,4),l=no(e.inputs,5),u=no(e.inputs,6),d=no(e.inputs,7);if(5===r.dims.length)throw new Error("Packed QKV is not implemented");if(5===(null==s?void 0:s.dims.length))throw new Error("Packed KV is not implemented");let c=s&&i&&4===s.dims.length&&4===i.dims.length,p=oo(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r,a,0);if(c)return Lr(e,p,s,i,o,void 0,u,d,l,n);if(!s||!i)throw new Error("key and value must be provided");let h=oo(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,s,a,n.hiddenSize),m=oo(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,i,a,2*n.hiddenSize);Lr(e,p,h,m,o,void 0,u,d,l,n)}}),md=re(()=>{Mu(),$u(),Iu(),zu(),uo=e=>{if(!e||e.length<1)throw new Error("too few inputs")},co=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(e=>n.push(Number(e))),r=n.length),on({numOutputs:r,axis:t.axis,splitSizes:n})},po=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${gn("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,ho=e=>{let t=e.length,n=[];for(let r=0;r<t;++r){let s=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(s):0===r?n.push(`if (output_number == ${r}u) { ${s} }`):r===t-1?n.push(`else { ${s} }`):n.push(`else if (output_number == ${r}) { ${s} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},mo=(e,t)=>{let n=e[0].dims,r=At.size(n),s=e[0].dataType,i=At.normalizeAxis(t.axis,n.length),a=new Array(t.numOutputs),o=bn("input",s,n.length),l=new Array(t.numOutputs),u=[],d=[],c=0,p=[{type:12,data:r}];for(let h=0;h<t.numOutputs;h++){c+=t.splitSizes[h],l[h]=c;let r=n.slice();r[i]=t.splitSizes[h],d.push(r),a[h]=yn(`output${h}`,s,r.length),u.push({dims:d[h],dataType:e[0].dataType})}p.push({type:12,data:l},...pn(n,...d));return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...a)}\n  ${po(l.length)}\n  ${ho(a)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${o.offsetToIndices("global_idx")};\n    var index = ${o.indicesGet("indices",i)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${gn("uniforms.size_in_split_axis","output_number - 1u",l.length)};\n      ${o.indicesSet("indices",i,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:p})}},fo=(e,t)=>{uo(e.inputs);let n=1===e.inputs.length?t:co(e.inputs,t);e.compute(mo(e.inputs,n),{inputs:[0]})},_o=e=>{let t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return on({axis:t,numOutputs:r,splitSizes:n})}}),fd=re(()=>{Mu(),$u(),Iu(),zu(),go=(e,t)=>{let[n,r,s,i]=e,{numHeads:a,rotaryEmbeddingDim:o}=t;if(3!==n.dims.length&&4!==n.dims.length)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!At.areEqual(r.dims,[])&&!At.areEqual(r.dims,[1])&&2!==r.dims.length)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(2!==s.dims.length)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(2!==i.dims.length)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!At.areEqual(s.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&0===a)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=n.dims[0],u=n.dims[n.dims.length-2],d=s.dims[0],c=At.sizeFromDimension(n.dims,1)/u,p=0===o?2*s.dims[1]:c/a;if(o>p)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(2===r.dims.length){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(u!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(p/2!==s.dims[1]&&o/2!==s.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${s.dims[1]}`);if(u>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},wo=(e,t)=>{let{interleaved:n,numHeads:r,rotaryEmbeddingDim:s,scale:i}=t,a=e[0].dims[0],o=At.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],u=o/l,d=e[2].dims[1],c=0===s?2*d:u/r,p=new Array(a,l,u/c,c-d),h=At.computeStrides(p),m=[{type:1,data:i},{type:12,data:p},{type:12,data:h},...3===e[0].dims.length?new Array({type:12,data:[o,u,c,1]}):[],...4===e[0].dims.length?new Array({type:12,data:[o,c,l*c,1]}):[],...pn(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:on({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:t=>{let r=bn("input",e[0].dataType,e[0].dims.length),s=bn("position_ids",e[1].dataType,e[1].dims.length),i=bn("cos_cache",e[2].dataType,e[2].dims.length),a=bn("sin_cache",e[3].dataType,e[3].dims.length),o=yn("output",e[0].dataType,e[0].dims.length);return t.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:p.length},{name:"global_strides",type:"u32",length:h.length},{name:"input_output_strides",type:"u32",length:h.length}]),`\n        ${t.declareVariables(r,s,i,a,o)}\n\n        ${t.mainStart(ln)}\n          let half_rotary_emb_dim = uniforms.${i.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${s.broadcastedIndicesToOffset("bsnh.xy",yn("",s.type.tensor,2))};\n            let position_id =\n                u32(${s.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});\n            let j = i + select(half_rotary_emb_dim, 1, ${n});\n            let re = ${r.getByOffset("i")} * ${i.get("position_id","bsnh[3]")} -\n                ${r.getByOffset("j")} * ${a.get("position_id","bsnh[3]")};\n            ${o.setByOffset("i","re")}\n            let im = ${r.getByOffset("i")} * ${a.get("position_id","bsnh[3]")} +\n                ${r.getByOffset("j")} * ${i.get("position_id","bsnh[3]")};\n            ${o.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${o.setByOffset("k",r.getByOffset("k"))}\n          }\n        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(At.size(p)/ln)},programUniforms:m})}},bo=(e,t)=>{go(e.inputs,t),e.compute(wo(e.inputs,t))}}),_d=re(()=>{Iu(),Mu(),Du(),hd(),md(),Fu(),fd(),zu(),yo=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let n=e[0],r=e[1],s=e[2],i=e[3],a=e[4];if(0!==t.doRotary&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(-1!==t.localWindowSize)throw new Error("Local attention is not supported");if(0!==t.softcap)throw new Error("Softcap is not supported");if(0!==t.rotaryInterleaved)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let o=n.dims[0],l=n.dims[1],u=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],d=l,c=0,p=!r||0===r.dims.length,h=Math.floor(p?u/(t.numHeads+2*t.kvNumHeads):u/t.numHeads);p&&(u=h*t.numHeads);let m=i&&0!==i.dims.length,f=a&&0!==a.dims.length;if(m&&4===i.dims.length&&i.dims[0]===o&&i.dims[1]!==t.kvNumHeads&&i.dims[2]===t.kvNumHeads&&i.dims[3]===h)throw new Error("BSNH pastKey/pastValue is not supported");if(m&&f){if(4!==i.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(4!==a.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');c=i.dims[2]}else if(m||f)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _=1;if(r&&r.dims.length>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(n.dims[2]%r.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==h)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');d=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==h)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}let g=!1,w=t.kvNumHeads?h*t.kvNumHeads:u;if(s&&s.dims.length>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(d!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');w=s.dims[2]}else{if(d!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');w=s.dims[1]*s.dims[3],g=!0}}let b=e.length>4?e[5]:void 0;if(b&&1!==b.dims.length&&b.dims[0]!==o)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:o,sequenceLength:l,pastSequenceLength:c,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:u,vHiddenSize:w,headSize:h,vHeadSize:Math.floor(w/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:g,qkvFormat:_}},vo=on({perm:[0,2,1,3]}),xo=(e,t,n)=>{let r=t,s=n.kvNumHeads;return 3===t.dims.length&&0!==n.kvSequenceLength&&(r=t.reshape([n.batchSize,n.kvSequenceLength,s,n.headSize]),r=e.compute(An(r,vo.perm),{inputs:[r],outputs:[-1]})[0]),r},Mo=(e,t,n,r)=>{let s=[e*t],i=e*t,a=[{type:12,data:i},{type:12,data:t},{type:12,data:e}];return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${t}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:7}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a}),getShaderSource:e=>{let t=bn("seq_lens",n.dataType,n.dims),i=bn("total_seq_lens",r.dataType,r.dims),a=yn("pos_ids",7,s);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}]).declareVariables(t,i,a)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let total_sequence_length = u32(${i.getByOffset("0")});\n    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;\n    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;\n    let batch_idx = global_idx / uniforms.sequence_length;\n    let sequence_idx = i32(global_idx % uniforms.sequence_length);\n    var pos_id: i32 = 0;\n    let seqlen = ${t.getByOffset("batch_idx")};\n    let total_seqlen = seqlen + 1;\n    if (is_first_prompt) {\n      if (sequence_idx < total_seqlen) {\n        pos_id = sequence_idx;\n      } else {\n        pos_id = 1;\n      }\n      ${a.setByOffset("global_idx","pos_id")}\n    } else if (is_subsequent_prompt) {\n      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);\n      if (past_seqlen + sequence_idx < total_seqlen) {\n        pos_id = past_seqlen + sequence_idx;\n      } else {\n        pos_id = 1;\n      }\n      ${a.setByOffset("global_idx","pos_id")}\n    } else if (global_idx < uniforms.batch_size) {\n      ${a.setByOffset("global_idx","seqlen")}\n    };\n  }\n  `}}},ko=(e,t)=>{var n;let r=yo(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error("Packed QKV is not implemented");if(5===(null==(n=e.inputs[1])?void 0:n.dims.length))throw new Error("Packed KV is not implemented");let s,i,a=e.inputs[0],o=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,l=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,u=e.inputs[3]&&0!==e.inputs[3].dims.length?e.inputs[3]:void 0,d=e.inputs[4]&&0!==e.inputs[4].dims.length?e.inputs[4]:void 0,c=e.inputs.length>4?e.inputs[5]:void 0,p=e.inputs.length>5?e.inputs[6]:void 0,h=r.kvNumHeads?r.kvNumHeads:r.numHeads,m=on({axis:2,numOutputs:3,splitSizes:[r.numHeads*r.headSize,h*r.headSize,h*r.headSize]}),[f,_,g]=o||l?[a,o,l]:e.compute(mo([a],m),{inputs:[a],outputs:[-1,-1,-1]});if(t.doRotary){let n=e.compute(Mo(r.batchSize,r.sequenceLength,c,p),{inputs:[c,p],outputs:[-1]})[0],a=e.inputs[7],o=e.inputs[8],l=on({interleaved:0!==t.rotaryInterleaved,numHeads:r.numHeads,rotaryEmbeddingDim:0,scale:t.scale}),u=[f,n,a,o],d=[-1];s=e.compute(wo(u,l),{inputs:u,outputs:d})[0],u.splice(0,1,_);let h=on({interleaved:0!==t.rotaryInterleaved,numHeads:r.kvNumHeads,rotaryEmbeddingDim:0,scale:t.scale});i=e.compute(wo(u,h),{inputs:u,outputs:d})[0]}let w=oo(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,t.doRotary?s:f,void 0,0),b=xo(e,t.doRotary?i:_,r),y=xo(e,g,r);Lr(e,w,b,y,void 0,void 0,u,d,void 0,r,c,p)}}),gd=re(()=>{Mu(),$u(),Fu(),zu(),To=(e,t,n,r,s,i,a,o)=>{let l=hn(i),u=1===l?"f32":`vec${l}f`,d=1===l?"vec2f":`mat2x${l}f`,c=s*a,p=64;1===c&&(p=256);let h=[s,a,i/l],m=[s,a,2],f=[];f.push(...pn(h,m));return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o};${p}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:m,dataType:1}],dispatchGroup:{x:c},programUniforms:f}),getShaderSource:e=>{let s=bn("x",t.dataType,3,l),i=[s,bn("scale",n.dataType,n.dims),bn("bias",r.dataType,r.dims),yn("output",1,3,2)];return`\n  var<workgroup> workgroup_shared : array<${d}, ${p}>;\n  const workgroup_size = ${p}u;\n  ${e.declareVariables(...i)}\n  ${e.mainStart(p)}\n    let batch = workgroup_index / uniforms.x_shape[1];\n    let channel = workgroup_index % uniforms.x_shape[1];\n    let hight = uniforms.x_shape[2];\n    // initialize workgroup memory\n    var sum = ${u}(0);\n    var squared_sum = ${u}(0);\n    for (var h = local_idx; h < hight; h += workgroup_size) {\n      let value = ${u}(${s.get("batch","channel","h")});\n      sum += value;\n      squared_sum += value * value;\n    }\n    workgroup_shared[local_idx] = ${d}(sum, squared_sum);\n    workgroupBarrier();\n\n    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (local_idx < currSize) {\n        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (local_idx == 0) {\n      let sum_final = ${_n("workgroup_shared[0][0]",l)} / f32(hight * ${l});\n      let squared_sum_final = ${_n("workgroup_shared[0][1]",l)} / f32(hight * ${l});\n\n      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${o}));\n      let channel_scale = inv_std_dev * f32(scale[channel]);\n      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;\n      output[workgroup_index] = vec2f(channel_scale, channel_shift);\n    }\n  }`}},{inputs:[t,n,r],outputs:[-1]})[0]},$o=(e,t,n)=>{let r=t[0].dims,s=r,i=r[0],a=r[1],o=At.sizeFromDimension(r,2),l=hn(o),u=At.size(s)/l,d=To(e,t[0],t[1],t[2],i,o,a,n.epsilon),c=[i,a,o/l],p=[i,a];e.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},...pn(c,p,c)]}),getShaderSource:e=>{let n=bn("x",t[0].dataType,c.length,l),r=bn("scale_shift",1,p.length,2),s=yn("output",t[0].dataType,c.length,l),i=[n,r,s];return`\n  ${e.registerUniform("output_size","u32").declareVariables(...i)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let outputIndices = ${s.offsetToIndices("global_idx")};\n      let batch = outputIndices[0];\n      let channel = outputIndices[1];\n      let scale_shift = ${r.getByIndices("vec2<u32>(batch, channel)")};\n      let value = ${n.getByOffset("global_idx")} * ${s.type.value}(scale_shift.x) + ${s.type.value}(scale_shift.y);\n      ${s.setByOffset("global_idx","value")};\n  }`}},{inputs:[t[0],d]})},So=(e,t,n)=>{let r=t[0].dims,s=r,i=r[0],a=r[r.length-1],o=At.sizeFromDimension(r,1)/a,l=hn(a),u=At.size(s)/l,d=[{type:12,data:o},{type:12,data:Math.floor(a/l)}],c=!1,p=[0,r.length-1];for(let f=0;f<r.length-2;f++)c=c||1!==r[f+1],p.push(f+1);c=c&&1!==r[r.length-1];let h=c?e.compute(An(e.inputs[0],p),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:r.length},(e,t)=>r[p[t]])),m=To(e,h,t[1],t[2],i,o,a,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:e=>{let n=dn(t[0].dataType),r=1===l?"vec2f":`mat${l}x2f`,i=e=>{let t=0===e?"x":"y",r=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${n}(${r}(scale.${t}))`;case 2:return`vec2<${n}>(${r}(scale[0].${t}, scale[1].${t}))`;case 4:return`vec4<${n}>(${r}(scale[0].${t}, scale[1].${t}, scale[2].${t}, scale[3].${t}))`;default:throw new Error(`Not supported compoents ${l}`)}},a=bn("input",t[0].dataType,t[0].dims,l),o=yn("output",t[0].dataType,s,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${a.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scale_input : array<${r}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${o.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let current_image_number = global_idx / (uniforms.C * uniforms.H);\n    let current_channel_number = global_idx % uniforms.C;\n\n    let scale_offset = current_image_number * uniforms.C + current_channel_number;\n    let scale = scale_input[scale_offset];\n    output[global_idx] = fma(input[global_idx], ${i(0)}, ${i(1)});\n  }`}},{inputs:[t[0],m]})},Co=(e,t)=>{"NHWC"===t.format?So(e,e.inputs,t):$o(e,e.inputs,t)}}),wd=re(()=>{Mu(),$u(),zu(),Eo=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Po=(e,t,n)=>{let r=t.simplified,s=e[0].dims,i=e[1],a=!r&&e[2],o=s,l=At.normalizeAxis(t.axis,s.length),u=At.sizeToDimension(s,l),d=At.sizeFromDimension(s,l),c=At.size(i.dims),p=a?At.size(a.dims):0;if(c!==d||a&&p!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let y=0;y<s.length;++y)y<l?h.push(s[y]):h.push(1);let m=hn(d),f=["type","type"],_=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/m)},{type:1,data:t.epsilon}];a&&f.push("type");let g=n>1,w=n>2,b=[{dims:o,dataType:e[0].dataType}];return g&&b.push({dims:h,dataType:1}),w&&b.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${m};${n};${r}`,inputDependencies:f},getRunData:()=>({outputs:b,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:t=>{let n=dn(e[0].dataType),s=[bn("x",e[0].dataType,e[0].dims,m),bn("scale",i.dataType,i.dims,m)];a&&s.push(bn("bias",a.dataType,a.dims,m)),s.push(yn("output",e[0].dataType,o,m)),g&&s.push(yn("mean_data_output",1,h)),w&&s.push(yn("inv_std_output",1,h));return`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${mn("f32",m)};\n    var mean_square_vector = ${mn("f32",m)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${fn(n,m,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${_n("mean_vector",m)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${_n("mean_square_vector",m)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${fn(n,m,"x[j + offset]")};\n      let f32scale = ${fn(n,m,"scale[j]")};\n      output[j + offset] = ${s[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${fn(n,m,"bias[j]")}`:""}\n      );\n    }\n\n    ${g?"mean_data_output[global_idx] = mean":""};\n    ${w?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`}}},Ao=(e,t)=>{Eo(e.inputs),e.compute(Po(e.inputs,t,e.outputCount))}}),bd=re(()=>{$u(),Ku(),Qu(),Io=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},zo=e=>{Io(e.inputs);let t=Pt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];if(n<8&&r<8)e.compute(hi(e.inputs,{activation:""},t));else{let s=t[t.length-2],i=At.size(e.inputs[0].dims.slice(0,-2)),a=At.size(e.inputs[1].dims.slice(0,-2));if(1!==i&&1===s&&1===a){let s=[1,i,n],a=[e.inputs[0].reshape([1,i,r]),e.inputs[1].reshape([1,r,n])];e.compute(vi(a,{activation:""},t,s),{inputs:a})}else e.compute(vi(e.inputs,{activation:""},t))}}}),yd=re(()=>{Mu(),$u(),Iu(),zu(),Fo=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),i=t.blockSize/8*t.bits,a=e[1];if(!At.areEqual(a.dims,[t.n,s,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=e[2].dims;if(At.size(o)!==t.n*s)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,r=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(At.size(n)!==r)throw new Error("zeroPoints input size error.")}},Oo=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],i=t.k,a=t.n,o=n.slice(0,r-2),l=At.size(o),u=e[1].dims[2]/4,d=e[0].dataType,c=hn(t.k),p=hn(u),h=hn(a),m=o.concat([s,a]),f=s>1&&a/h%2==0?2:1,_=At.size(m)/h/f,g=64,w=[],b=[l,s,i/c],y=At.convertShape(e[1].dims).slice();y.splice(-1,1,u/p),w.push(...pn(b)),w.push(...pn(y)),w.push(...pn(e[2].dims)),4===e.length&&w.push(...pn(At.convertShape(e[3].dims)));let v=[l,s,a/h];w.push(...pn(v));return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${c};${p};${h};${f};64`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:d}],dispatchGroup:{x:_},programUniforms:w}),getShaderSource:n=>{let r=b.length,s=bn("a",e[0].dataType,r,c),i=bn("b",12,y.length,p),a=bn("scales",e[2].dataType,e[2].dims.length),o=[s,i,a],l=4===e.length?bn("zero_points",12,e[3].dims.length):void 0;l&&o.push(l);let d=v.length,m=yn("output",e[0].dataType,d,h),_=dn(e[0].dataType),w=(()=>{switch(c){case 1:return`array<${_}, 8>`;case 2:return`mat4x2<${_}>`;case 4:return`mat2x4<${_}>`;default:throw new Error(`${c}-component is not supported.`)}})();return`\n        var<workgroup> workgroup_shared: array<${m.type.value}, ${f*g}>;\n        ${n.declareVariables(...o,m)}\n        ${n.mainStart([g,1,1])}\n          let output_indices = ${m.offsetToIndices(`(global_idx / 64) * ${f}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let nBlocksPerCol = uniforms.b_shape[1];\n\n          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {\n            //process one block\n            var word_offset: u32 = block * ${t.blockSize/c};\n            ${(()=>{let e=`\n            var col_index = col * ${h};\n            ${l?"\n            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;\n            var zero_point_byte_count: u32;\n            var zero_point_word_index: u32;\n            var zero_point_byte_offset: u32;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32;\n            var zero_point_word: u32;":`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${_}(8);`}\n            `;for(let t=0;t<h*f;t++)e+=`\n            let scale${t} = ${a.getByOffset("col_index * nBlocksPerCol + block")};\n            ${l?`\n            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);\n            zero_point_word_index = zero_point_byte_count >> 0x2u;\n            zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point${t} = ${_}((zero_point_word) & 0xFu);`:""}\n            col_index += 1;`;return e})()}\n            for (var word: u32 = 0; word < ${u}; word += ${p}) {\n              ${(()=>{let e=`col_index = col * ${h};`;for(let t=0;t<h*f;t++)e+=`\n            let b${t}_data = ${i.getByIndices(`${i.type.indices}(col_index, block, word)`)};\n            col_index += 1;`;return e+=`\n            var b_value: u32;\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            var b_value_lower: vec4<u32>;\n            var b_value_upper: vec4<u32>;\n            var b_quantized_values: ${w};\n            var b_dequantized_values: ${w};`,e})()}\n              for (var i: u32 = 0; i < ${p}; i++) {\n                ${(()=>{let e=`\n          // reuse a data\n            var input_offset = ${s.indicesToOffset(`${s.type.indices}(batch, row, word_offset)`)};\n            var a_data: ${w};\n            for (var j: u32 = 0; j < ${8/c}; j++) {\n              a_data[j] = ${s.getByOffset("input_offset")};\n              input_offset++;\n            }\n          `;for(let t=0;t<h*f;t++)e+=`\n            b_value = ${1===p?`b${t}_data`:`b${t}_data[i]`};\n            b_value_lower = unpack4xU8(b_value & b_mask);\n            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);\n            b_quantized_values = ${w}(${Array.from({length:4},(e,t)=>`${_}(b_value_lower[${t}]), ${_}(b_value_upper[${t}])`).join(", ")});\n            b_dequantized_values = ${1===c?`${w}(${Array.from({length:8},(e,n)=>`(b_quantized_values[${n}] - ${l?`zero_point${t}`:"zero_point"}) * scale${t}`).join(", ")});`:`(b_quantized_values - ${w}(${Array(8).fill(""+(l?`zero_point${t}`:"zero_point")).join(",")})) * scale${t};`};\n            workgroup_shared[local_id.x * ${f} + ${Math.floor(t/h)}]${h>1?`[${t%h}]`:""} += ${Array.from({length:8/c},(e,t)=>""+(1===c?`a_data[${t}] * b_dequantized_values[${t}]`:`dot(a_data[${t}], b_dequantized_values[${t}])`)).join(" + ")};\n          `;return e})()}\n                word_offset += ${8/c};\n              }\n            }\n          }\n          workgroupBarrier();\n\n          if (local_id.x < ${f}) {\n            var output_value: ${m.type.value} = ${m.type.value}(0);\n            var workgroup_shared_offset: u32 = local_id.x;\n            for (var b: u32 = 0u; b < 64u; b++) {\n              output_value += workgroup_shared[workgroup_shared_offset];\n              workgroup_shared_offset += ${f};\n            }\n            ${m.setByIndices(`${m.type.indices}(batch, row, col + local_id.x)`,"output_value")};\n          }\n        }`}}},Lo=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],i=t.k,a=t.n,o=n.slice(0,r-2),l=At.size(o),u=e[1].dims[2]/4,d=e[0].dataType,c=hn(t.k),p=hn(u),h=o.concat([s,a]),m=a%8==0?8:a%4==0?4:1,f=128/m,_=f*p*8,g=_/c,w=_/t.blockSize,b=At.size(h)/m,y=[],v=[l,s,i/c],x=At.convertShape(e[1].dims).slice();x.splice(-1,1,u/p),y.push(...pn(v)),y.push(...pn(x)),y.push(...pn(e[2].dims)),4===e.length&&y.push(...pn(At.convertShape(e[3].dims)));let M=[l,s,a];y.push(...pn(M));return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${c};${p};${f};${m}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:h,dataType:d}],dispatchGroup:{x:b},programUniforms:y}),getShaderSource:n=>{let r=v.length,s=bn("a",e[0].dataType,r,c),i=bn("b",12,x.length,p),a=bn("scales",e[2].dataType,e[2].dims.length),o=[s,i,a],l=4===e.length?bn("zero_points",12,e[3].dims.length):void 0;l&&o.push(l);let u=M.length,d=yn("output",e[0].dataType,u),h=dn(e[0].dataType);return`\n        var<workgroup> sub_a: array<${s.type.value}, ${g}>;\n        var<workgroup> inter_results: array<array<${d.type.value}, ${f}>, ${m}>;\n        ${n.declareVariables(...o,d)}\n        ${n.mainStart([f,m,1])}\n          let output_indices = ${d.offsetToIndices(`workgroup_index * ${m}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let n_blocks_per_col = uniforms.b_shape[1];\n          let num_tiles =  (n_blocks_per_col - 1) / ${w} + 1;\n\n          // Loop over shared dimension.\n          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {\n            let a_col_start = tile * ${g};\n            // load one tile A data into shared memory.\n            for (var a_offset = local_idx; a_offset < ${g}; a_offset += 128)\n            {\n              let a_col = a_col_start + a_offset;\n              if (a_col < uniforms.a_shape[2])\n              {\n                sub_a[a_offset] = ${s.getByIndices(`${s.type.indices}(batch, row, a_col)`)};\n              } else {\n                sub_a[a_offset] = ${s.type.value}(0);\n              }\n            }\n            workgroupBarrier();\n\n            // each thread process one block\n            let b_row = col + local_id.y;\n            let block = tile * ${w} + local_id.x;\n            ${l?`\n            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;\n            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);\n            let zero_point_word_index = zero_point_byte_count >> 0x2u;\n            let zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            let zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point = ${h}((zero_point_word) & 0xFu);`:`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${h}(8);`}\n            let scale = ${a.getByOffset("b_row * n_blocks_per_col + block")};\n            let b_data = ${i.getByIndices(`${i.type.indices}(b_row, block, 0)`)};\n            var word_offset = local_id.x * ${t.blockSize/c};\n            for (var i: u32 = 0; i < ${p}; i++) {\n              ${(()=>{switch(c){case 1:return`\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1]);\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return"\n          let a_data0 = sub_a[word_offset];\n          let a_data1 = sub_a[word_offset + 1];";default:throw new Error(`${c}-component is not supported.`)}})()}\n              let b_value = ${1===p?"b_data":"b_data[i]"};\n              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);\n              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);\n              let b_quantized_values = mat2x4<${h}>(${Array.from({length:4},(e,t)=>`${h}(b_value_lower[${t}]), ${h}(b_value_upper[${t}])`).join(", ")});\n              let b_dequantized_values = (b_quantized_values - mat2x4<${h}>(${Array(8).fill("zero_point").join(",")})) * scale;\n              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(e,t)=>`dot(a_data${t}, b_dequantized_values[${t}])`).join(" + ")};\n              word_offset += ${8/c};\n            }\n            workgroupBarrier();\n          }\n\n          if (local_idx < ${m}) {\n            var output_value: ${d.type.value} = ${d.type.value}(0);\n            for (var b = 0u; b < ${f}; b++) {\n              output_value += inter_results[local_idx][b];\n            }\n            if (col + local_idx < uniforms.output_shape[2])\n            {\n              ${d.setByIndices(`${d.type.indices}(batch, row, col + local_idx)`,"output_value")}\n            }\n          }\n        }`}}},Bo=(e,t)=>{Fo(e.inputs,t),32===t.blockSize&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Lo(e.inputs,t)):e.compute(Oo(e.inputs,t))},Do=e=>on(e)}),vd=re(()=>{Mu(),$u(),zu(),No=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},jo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n            k = i32(${e.indicesGet("indices",s)}) - ${gn("uniforms.pads",s,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${gn("uniforms.x_shape",s,t)})) {\n              break;\n            }\n            offset += k * i32(${gn("uniforms.x_strides",s,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${r}\n            value = x[offset];\n          }\n      `},Ro=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${gn("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${gn("uniforms.x_shape",s,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${gn("uniforms.x_shape",s,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${gn("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Vo=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${gn("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${gn("uniforms.x_shape",s,t)})) {\n                  k = i32(${gn("uniforms.x_shape",s,t)}) - 1;\n                }\n                offset += k * i32(${gn("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Go=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${gn("uniforms.pads",s,n)};\n                if (k < 0)  {\n                  k += i32(${gn("uniforms.x_shape",s,t)}]);\n                }\n                if (k >= i32(${gn("uniforms.x_shape",s,t)})) {\n                  k -= i32(${gn("uniforms.x_shape",s,t)});\n                }\n                offset += k * i32(${gn("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},qo=(e,t,n)=>{switch(n.mode){case 0:return jo(e,t,n.pads.length);case 1:return Ro(e,t,n.pads.length);case 2:return Vo(e,t,n.pads.length);case 3:return Go(e,t,n.pads.length);default:throw new Error("Invalid mode")}},Uo=(e,t)=>{let n=At.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,s=[{type:12,data:At.size(n)},{type:6,data:t.pads}],i=e.length>=3&&e[2].data;0===t.mode&&s.push({type:i?e[2].dataType:1,data:t.value}),s.push(...pn(e[0].dims,n));return{name:"Pad",shaderCache:{hint:`${t.mode}${i}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(At.size(n)/64)},programUniforms:s}),getShaderSource:s=>{let a=yn("output",e[0].dataType,n.length),o=bn("x",e[0].dataType,r.length),l=o.type.value,u=qo(a,r.length,t),d=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&d.push({name:"constant_value",type:i?l:"f32"}),`\n            ${s.registerUniforms(d).declareVariables(o,a)}\n            ${s.mainStart()}\n            ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${a.offsetToIndices("global_idx")};\n\n            var value = ${l}(0);\n            ${u}\n            output[global_idx] = value;\n        }`}}},Wo=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?10===e[2].dataType?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,s=e[0].dims.length,i=new Int32Array(2*s).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)i[Number(t[e])]=Number(n[e]),i[Number(t[e])+s]=Number(n[e+t.length])}else n.forEach((e,t)=>i[Number(t)]=Number(e));let a=[];return i.forEach(e=>a.push(e)),{mode:t.mode,value:r,pads:a}}return t},Ho=(e,t)=>{No(e.inputs);let n=Wo(e.inputs,t);e.compute(Uo(e.inputs,n),{inputs:[0]})}}),xd=re(()=>{Te(),Mu(),$u(),zu(),Ko=e=>{if(E.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},Qo=(e,t,n)=>{let r="NHWC"===t.format,s=e.dims.slice();r&&s.splice(1,0,s.pop());let i=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),o=t.strides.slice(),l=i?t.dilations.slice():[],u=t.pads.slice();It.adjustPoolAttributes(n,s,a,o,l,u);let d=It.computePoolOutputShape(n,s,o,l,a,u,t.autoPad),c=Object.assign({},t);i?Object.assign(c,{kernelShape:a,strides:o,pads:u,dilations:l,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:a,strides:o,pads:u,cacheKey:t.cacheKey});let p=d.slice();return p.push(p.splice(1,1)[0]),[c,r?p:d]},Xo=(e,t)=>{let n="NHWC"===t.format,r=[{type:12,data:At.size(e)},{type:12,data:At.size(t.kernelShape)}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],i=t.pads[t.pads.length/2-1],a=t.pads[t.pads.length-1],o=!!(i+a);r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:a}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],i=t.pads[t.pads.length/2-2],a=t.pads[t.pads.length-2];l=!!(i+a),r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:a}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[r,s,!0,o,l]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=At.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),s.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[r,s,!!t.pads.reduce((e,t)=>e+t),!1,!1]}},Jo=(e,t,n,r,s,i,a,o,l,u,d,c)=>{let p="NHWC"===s.format,h=t.type.value,m=yn("output",t.type.tensor,r);if(s.kernelShape.length<=2){let r="",u="",f="",_=n-(p?2:1);if(r=d?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${_}] < 0 || xIndices[${_}]\n                      >= uniforms.x_shape[${_}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`,2===s.kernelShape.length){let e=n-(p?3:2);u=c?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,f="\n              }\n            "}return`\n            ${e.registerUniforms(l).declareVariables(t,m)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${m.offsetToIndices("global_idx")};\n              var xIndices = ${m.offsetToIndices("global_idx")};\n\n              var value = ${h}(${o});\n              var pad = 0;\n              ${u}\n              ${r}\n              ${f}\n              ${a}\n\n              output[global_idx] = value;\n            }`}{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let r=s.kernelShape.length,d=s.pads.length,c="";return c=u?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${i}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${i}\n            `,`\n            ${e.registerUniforms(l).declareVariables(t,m)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${m.offsetToIndices("global_idx")};\n              var xIndices = ${m.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${r}>;\n\n              var value = ${h}(${o});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${r-1}u; j++) {\n                  offsets[j] = offset / ${gn("uniforms.kernelStrides","j",r)};\n                  offset -= offsets[j] * ${gn("uniforms.kernelStrides","j",r)};\n                }\n                offsets[${r-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-r}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${gn("uniforms.strides",`j - ${n-r}u`,r)}\n                    + offsets[j - ${n-r}u] - ${gn("uniforms.pads","j - 2u",d)};\n                  ${c}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Yo=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Zo=e=>`${Yo(e)};${e.countIncludePad}`,el=e=>`${Yo(e)};${e.storageOrder};${e.dilations}`,tl=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),nl=(e,t,n,r)=>{let[s,i]=Qo(t,r,n),a=bn("x",t.dataType,t.dims.length),o=a.type.value,l="";s.countIncludePad?l+=`value /= ${o}(uniforms.kernelSize);`:l+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[u,d,c,p,h]=Xo(i,s);u.push(...pn(t.dims,i));return{name:e,shaderCache:{hint:`${r.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(At.size(i)/64)},programUniforms:u}),getShaderSource:e=>Jo(e,a,t.dims.length,i.length,s,"value += x_val;",l,0,d,c,p,h)}},rl=e=>{let t=0!==e.count_include_pad,n=tl(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:t,...n,cacheKey:""};return{...r,cacheKey:Zo(r)}},sl=(e,t)=>{Ko(e.inputs),e.compute(nl("AveragePool",e.inputs[0],!1,t))},il={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},al=e=>{let t=e.format;return{format:t,...il,cacheKey:t}},ol=(e,t)=>{Ko(e.inputs),e.compute(nl("GlobalAveragePool",e.inputs[0],!0,t))},ll=(e,t,n,r)=>{let[s,i]=Qo(t,r,n),a=bn("x",t.dataType,t.dims.length),[o,l,u,d,c]=Xo(i,s);return o.push(...pn(t.dims,i)),{name:e,shaderCache:{hint:`${r.cacheKey};${u};${d};${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(At.size(i)/64)},programUniforms:o}),getShaderSource:e=>Jo(e,a,t.dims.length,i.length,s,"\n      value = max(x_val, value);\n    ","",10===t.dataType?-65504:-1e5,l,u,d,c)}},ul=(e,t)=>{Ko(e.inputs),e.compute(ll("MaxPool",e.inputs[0],!1,t))},dl=e=>{let t=e.storage_order,n=e.dilations,r=tl(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:n,...r,cacheKey:""};return{...s,cacheKey:el(s)}},cl=e=>{let t=e.format;return{format:t,...il,cacheKey:t}},pl=(e,t)=>{Ko(e.inputs),e.compute(ll("GlobalMaxPool",e.inputs[0],!0,t))}}),Md=re(()=>{Mu(),$u(),Iu(),zu(),hl=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(3===e.length&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(6===e[0].dataType&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(0!==e[1].dims.length&&1!==e[1].dims.length&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,n)=>t===e[2].dims[n]).reduce((e,t)=>e&&t,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(0===e[1].dims.length||1===e[1].dims.length&&1===e[1].dims[0])throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((n,r)=>r===t.axis||n===e[0].dims[r]).reduce((e,t)=>e&&t,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let n=e[0].dims[t.axis],r=e[1].dims[t.axis];if(t.blockSize<Math.ceil(n/r)||t.blockSize>Math.ceil(n/(r-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},ml=(e,t)=>{let n=At.normalizeAxis(t.axis,e[0].dims.length),r=e[0].dataType,s=3===r,i=e[0].dims,a=e[1].dataType,o=At.size(i),l=3===r||2===r,u=l?[Math.ceil(At.size(e[0].dims)/4)]:e[0].dims,d=e[1].dims,c=e.length>2?e[2]:void 0,p=c?l?[Math.ceil(At.size(c.dims)/4)]:c.dims:void 0,h=0===d.length||1===d.length&&1===d[0],m=!1===h&&1===d.length,f=hn(o),_=h&&(!l||4===f),g=_?f:1,w=_&&!l?f:1,b=bn("input",l?12:r,u.length,w),y=bn("scale",a,d.length),v=c?bn("zero_point",l?12:r,p.length):void 0,x=yn("output",a,i.length,g),M=[b,y];v&&M.push(v);let k=[u,d];c&&k.push(p);let T=[{type:12,data:o/g},{type:12,data:n},{type:12,data:t.blockSize},...pn(...k,i)];return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getShaderSource:e=>`\n      ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...M,x)}\n      ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let output_indices = ${x.offsetToIndices("global_idx")};\n\n          // Set input x\n          ${l?`\n            let input = ${b.getByOffset("global_idx / 4")};\n            let x_vec = ${s?"unpack4xI8(input)":"unpack4xU8(input)"};\n            let x_value = ${1===g?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${b.getByOffset("global_idx")};`};\n\n          // Set scale input\n          ${h?`let scale_value= ${y.getByOffset("0")}`:m?`\n            let scale_index = ${x.indicesGet("output_indices","uniforms.axis")};\n            let scale_value= ${y.getByOffset("scale_index")};`:`\n            var scale_indices: ${y.type.indices} = output_indices;\n            let index = ${y.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;\n            ${y.indicesSet("scale_indices","uniforms.axis","index")};\n            let scale_value= ${y.getByIndices("scale_indices")};`};\n\n          // Set zero-point input\n          ${v?h?l?`\n                let zero_point_input = ${v.getByOffset("0")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset("0")}`:m?l?`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_input = ${v.getByOffset("zero_point_index / 4")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_value = ${v.getByOffset("zero_point_index")};`:l?`\n                let zero_point_offset = ${y.indicesToOffset("scale_indices")};\n                let zero_point_input = ${v.getByOffset("zero_point_offset / 4")};\n                let zero_point_vec = ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices("scale_indices")};`:`let zero_point_value = ${l?s?"i32":"u32":b.type.value}(0);`};\n      // Compute and write output\n      ${x.setByOffset("global_idx",`${x.type.value}(x_value - zero_point_value) * scale_value`)};\n      }`,getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:Math.ceil(o/g/64),y:1,z:1},programUniforms:T})}},fl=(e,t)=>{hl(e.inputs,t),e.compute(ml(e.inputs,t))},_l=e=>on({axis:e.axis,blockSize:e.blockSize})}),kd=re(()=>{Te(),Mu(),zu(),gl=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},wl=(e,t,n,r)=>{let s=Math.abs(Math.ceil((t-e)/n)),i=[s],a=s,o=[{type:12,data:a},{type:r,data:e},{type:r,data:n},...pn(i)];return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:e=>{let t=yn("output",r,i.length),n=t.type.value,s=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(s).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:o})}},bl=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),E.webgpu.validateInputContent&&gl(t,n,r),e.compute(wl(t,n,r,e.inputs[0].dataType),{inputs:[]})}}),Td=re(()=>{Mu(),$u(),Iu(),zu(),yl=(e,t,n,r)=>{if("none"!==e&&"i32"!==r&&"u32"!==r&&"f32"!==r)throw new Error(`Input ${r} is not supported with reduction ${e}.`);let s="{\n                var oldValue = 0;\n                loop {\n                  let newValueF32 =",i=`;\n                  let newValue = bitcast<i32>(newValueF32);\n                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);\n                  if res.exchanged {\n                    break;\n                  }\n                  oldValue = res.old_value;\n                }\n              }`;switch(e){case"none":return`${t}=${n};`;case"add":return"i32"===r||"u32"===r?`atomicAdd(&${t}, bitcast<${r}>(${n}));`:`\n              ${s}bitcast<${r}>(oldValue) + (${n})${i}`;case"max":return"i32"===r||"u32"===r?`atomicMax(&${t}, bitcast<${r}>(${n}));`:`\n                ${s}max(bitcast<f32>(oldValue), (${n}))${i}`;case"min":return"i32"===r||"u32"===r?`atomicMin(&${t}, bitcast<${r}>(${n}));`:`${s}min(bitcast<${r}>(oldValue), (${n}))${i}`;case"mul":return`${s}(bitcast<${r}>(oldValue) * (${n}))${i}`;default:throw new Error(`Reduction ${e} is not supported.`)}},vl=(e,t)=>(1===e?"\n    let element_count_dim = uniforms.output_strides;\n    let dim_value = uniforms.output_shape;":`\n    let element_count_dim = uniforms.output_strides[${t?"i - indices_start":"i"}];\n    let dim_value = uniforms.output_shape[${t?"i - indices_start":"i"} + uniforms.last_index_dimension];`)+"\n    \n    if (index >= 0) {\n      if (index >= i32(dim_value)) {\n        index = i32(dim_value - 1);\n      }\n    } else {\n      if (index < -i32(dim_value)) {\n        index = 0;\n      } else {\n        index += i32(dim_value);\n      }\n    }\n    data_offset += u32((u32(index) * element_count_dim));",xl=(e,t,n)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {\n        let value = updates[uniforms.num_updates_elements * ${n?"global_idx":"idx"} + i];\n        ${yl(e.reduction,"output[data_offset + i]","value",t)}\n      }`,Ml=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n,i=Math.ceil(At.size(r)/1),a=r[r.length-1],o=At.sizeFromDimension(n,a),l=At.sizeFromDimension(r,0)/a,u=[{type:12,data:i},{type:12,data:a},{type:12,data:o},...pn(e[1].dims,e[2].dims,s)];return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:u}),getShaderSource:r=>{let i=bn("indices",e[1].dataType,e[1].dims.length),a=bn("updates",e[2].dataType,e[2].dims.length,1),o="none"!==t.reduction&&""!==t.reduction?vn("output",e[0].dataType,s.length):yn("output",e[0].dataType,s.length,1);return`\n      ${r.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(i,a,o)}\n      ${r.mainStart()}\n        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n  var hasDuplicates = false;\n  if (${"none"===t.reduction}) {\n    for (var i = 0; i < ${l}; i = i + 1) {\n      for (var j = i + 1; j < ${l}; j = j + 1) {\n        var index_i = i32(indices[i].x);\n        var index_j = i32(indices[j].x);\n        if (index_i == index_j) {\n          hasDuplicates = true;\n          break;\n        }\n      }\n      if (hasDuplicates) {\n        break;\n      }\n    }\n  }\n\n  if (${"none"===t.reduction} && hasDuplicates) {\n    if (global_idx != 0u) {\n      return;\n    }\n    // Process each index-update pair individually when duplicates exist\n    for (var idx = 0u; idx < ${l}u; idx++) {\n      var data_offset = 0u;\n      for (var i = 0u; i < uniforms.last_index_dimension; i++) {\n        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);\n        ${vl(n.length,!1)}\n      }\n      ${xl(t,o.type.value,!1)}\n    }\n    return;\n  }\n\n  var data_offset = 0u;\n  var indices_start = uniforms.last_index_dimension * global_idx;\n  var indices_end = indices_start + uniforms.last_index_dimension;\n  for (var i = indices_start; i < indices_end; i++) {\n    var index = i32(indices[i].x);\n    ${vl(n.length,!0)}\n  }\n  ${xl(t,o.type.value,!0)}\n  }`}}},kl=e=>on({reduction:e.reduction}),Tl=(e,t)=>{e.compute(Ml(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),$d=re(()=>{Mu(),$u(),Iu(),zu(),$l=(e,t)=>{if(e.every(e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},Sl=(e,t,n)=>{t.every(e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let r=new Array(n).fill(1);return t.forEach((t,n)=>r[t]=e[n]),r},Cl=(e,t,n,r,s,i)=>{let[a,o,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(e=>i.push(e));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&e.length>o&&1===e[o].dims.length&&e[o].dims[0]>0){if(e[o].getFloat32Array().forEach(e=>r.push(e)),0!==r.length&&r.length!==u&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");$l(r,t),t.axes.length>0&&Sl(r,t.axes,u).forEach((e,t)=>r[t]=e)}if(l>0&&e.length>l&&1===e[l].dims.length&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(e=>s.push(Number(e))),0!==s.length&&s.length!==u&&n>=18&&s.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(0!==r.length&&r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==s.length&&s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof s<"u"&&r.length>0&&s.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},El=(e,t,n,r)=>`\n  // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n  // offset-by-one error later in floor().\n  let big = (${e}) * (${t});\n  let whole = ${r}(big / (${n}));\n  let fract = ${r}(big % (${n})) / ${r}(${n});\n  return whole + fract;\n`,Pl=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`\n          if (xScale < 1.0 || floor(xScale) != xScale) {\n            return ${t}(xResized) / ${t}(xScale);\n          } else {\n            ${El("xResized","lengthOriginal","lengthResized",t)}\n          }\n        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    ${El("xResized","lengthOriginal - 1","lengthResized - 1",t)}\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Al=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Il=(e,t,n)=>{let r=new Array(n).fill(0).concat(new Array(n).fill(1)),s=0===e.length?r:e.slice();return t.length>0?(t.forEach((e,i)=>{r[e]=s[i],r[i+n]=s[t.length+i]}),r):s},zl=(e,t,n,r)=>{let s=[];if(n.length>0)if(r.length>0){if(e.forEach(e=>s.push(e)),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach((e,t)=>s[e]=n[t])}else n.forEach(e=>s.push(e));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");s=e.map((e,n)=>Math.round(e*t[n]))}return s},Fl=(e,t,n)=>{let r=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map(e=>t[e]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map(e=>t[e]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return n.axes.length>0?(n.axes.forEach(e=>t[e]=r),n.axes.forEach(n=>s[n]=Math.round(e[n]*t[n]))):(t.fill(r,0,t.length),s.forEach((e,n)=>s[n]=Math.round(e*t[n]))),s},Ol=(e,t,n,r,s)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${gn("uniforms.scales","i",r)};\n        var roi_low = ${gn("uniforms.roi","i",s)};\n        var roi_hi = ${gn("uniforms.roi",`i + ${t.length}`,s)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${gn("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${gn("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ll=(e,t,n,r,s,i,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${gn("uniforms.scales","i",s)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${gn("uniforms.roi","i",i)};\n          var roi_hi = ${gn("uniforms.roi",`i + ${n.length}`,i)};\n          var input_shape_i = ${gn("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${gn("uniforms.output_shape","i",r.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i","input_index")}\n      }\n      return input_indices;\n    }`,Bl=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${gn("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Dl=(e,t,n,r)=>e.rank>r?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",Nl=(e,t,n,r,s)=>{let[i,a,o,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],u=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(col, ${n[o]} - 1))`)};\n      ${Dl(e,l,i,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${u} = originalIndices[${a}];\n      var col:${u} = originalIndices[${o}];\n      ${r?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[o]} - 1)) {\n        return ${s};\n      }`:""};\n      row = max(0, min(row, ${n[a]} - 1));\n      col = max(0, min(col, ${n[o]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${i}])`:"0"};\n      var x11: ${u} = getInputValue(batch, channel, row1, col1);\n      var x12: ${u} = getInputValue(batch, channel, row1, col2);\n      var x21: ${u} = getInputValue(batch, channel, row2, col1);\n      var x22: ${u} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${u} = abs(row - ${u}(row1));\n      var dx2: ${u} = abs(${u}(row2) - row);\n      var dy1: ${u} = abs(col - ${u}(col1));\n      var dy2: ${u} = abs(${u}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},jl=(e,t,n,r,s,i,a,o,l,u)=>{let d=2===n.length,[c,p]=d?[0,1]:[2,3],h=e.type.value,m=a=>{let d=a===c?"row":"col";return`\n      fn ${d}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${h} {\n        var output_index = ${t.indicesGet("output_indices",a)};\n        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[a]},\n        ${r[a]}, ${n[a]}, ${i[a]}, ${i[a]} + ${n.length});\n        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${o} && (originalIdx < 0 || originalIdx > (${n[a]} - 1))) {\n          return ${l};\n        }\n        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${d}: ${h} = originalIdx + ${h}(i);\n          if (${d} < 0 || ${d} >= ${n[a]}) {\n            ${u?"coefs[i + 1] = 0.0;\n                        continue;":o?`return ${l};`:`${d} = max(0, min(${d}, ${n[a]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",a,`u32(${d})`)};\n          data[i + 1] = ${a===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${m(c)};\n    ${m(p)};\n  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${h} = 1.0 - absS;\n    var twoMinusAbsS: ${h} = 2.0 - absS;\n    var onePlusAbsS: ${h} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {\n    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rl=(e,t,n,r,s)=>{let[i,a,o,l,u]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(height, ${n[o]} - 1))`)};\n      ${e.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};\n      ${Dl(e,u,i,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${d} = originalIndices[${a}];\n      var height:${d} = originalIndices[${o}];\n      var width:${d} = originalIndices[${l}];\n      ${r?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[o]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\n      return ${s};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[a]} - 1));\n      height = max(0, min(height, ${n[o]} - 1));\n      width = max(0, min(width, ${n[l]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${u}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${i}])`:"0"};\n\n      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${d} = abs(depth - ${d}(depth1));\n      var dx2: ${d} = abs(${d}(depth2) - depth);\n      var dy1: ${d} = abs(height - ${d}(height1));\n      var dy2: ${d} = abs(${d}(height2) - height);\n      var dz1: ${d} = abs(width - ${d}(width1));\n      var dz2: ${d} = abs(${d}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Vl=(e,t,n,r,s,i)=>{let a=e.dims,o=Il(i,t.axes,a.length),l=zl(a,r,s,t.axes),u=r.slice();0===r.length&&(u=a.map((e,t)=>0===e?1:l[t]/e),"stretch"!==t.keepAspectRatioPolicy&&(l=Fl(a,u,t)));let d=yn("output",e.dataType,l.length),c=bn("input",e.dataType,a.length),p=At.size(l),h=a.length===l.length&&a.every((e,t)=>e===l[t]),m="tf_crop_and_resize"===t.coordinateTransformMode,f=t.extrapolationValue,_=c.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${u.length>0?"cubic"===t.mode?u:u.length:""}|${s.length>0?s:""}|${o.length>0?o:""}|${h}|${"nearest"===t.mode?a.length:a}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${h?"":`\n      ${Pl(t.coordinateTransformMode,_)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Bl(c,a)};\n              ${Al(t.nearestMode,n,_)};\n              ${Ll(c,d,a,l,u.length,o.length,m)};\n              `;case"linear":return`\n              ${Ol(d,a,l,u.length,o.length)};\n              ${(()=>{if(2===a.length||4===a.length)return`${Nl(c,d,a,m,f)}`;if(3===a.length||5===a.length)return`${Rl(c,d,a,m,f)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===a.length||4===a.length)return`${jl(c,d,a,l,u,o,t.cubicCoeffA,m,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",o.length).declareVariables(c,d)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${h?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${c.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${c.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===a.length||4===a.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:u},{type:1,data:o},...pn(a,l)]})}},Gl=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},ql=(e,t)=>{let n=[],r=[],s=[],i=Gl(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");Cl(e.inputs,t,i,n,r,s),e.compute(Vl(e.inputs[0],t,i,n,r,s),{inputs:[0]})},Ul=e=>{let t=e.antialias,n=e.axes,r=e.coordinateTransformMode,s=e.cubicCoeffA,i=0!==e.excludeOutside,a=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,u=""===e.nearestMode?"simple":e.nearestMode;return on({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:s,excludeOutside:i,extrapolationValue:a,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}}),Sd=re(()=>{Mu(),$u(),zu(),Wl=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],i=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},Hl=(e,t,n,r)=>{let s=t.simplified,i=e[0].dims,a=At.size(i),o=i,l=a,u=i.slice(-1)[0],d=r?i.slice(0,-1).concat(1):[],c=!s&&e.length>3,p=e.length>4,h=r&&n>1,m=r&&n>2,f=n>3,_=64,g=hn(u),w=[{type:12,data:l},{type:12,data:g},{type:12,data:u},{type:1,data:t.epsilon}],b=[{dims:o,dataType:e[0].dataType}];return n>1&&b.push({dims:d,dataType:1}),n>2&&b.push({dims:d,dataType:1}),n>3&&b.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${g};${h};${m};${f}`,inputDependencies:e.map((e,t)=>"type")},getShaderSource:t=>{let n=[bn("x",e[0].dataType,e[0].dims,g),bn("skip",e[1].dataType,e[1].dims,g),bn("gamma",e[2].dataType,e[2].dims,g)];c&&n.push(bn("beta",e[3].dataType,e[3].dims,g)),p&&n.push(bn("bias",e[4].dataType,e[4].dims,g)),n.push(yn("output",e[0].dataType,o,g)),h&&n.push(yn("mean_output",1,d)),m&&n.push(yn("inv_std_output",1,d)),f&&n.push(yn("input_skip_bias_sum",e[0].dataType,o,g));let r=dn(e[0].dataType),i=dn(1,g);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n      var<workgroup> sum_shared : array<${i}, 64>;\n      var<workgroup> sum_squared_shared : array<${i}, 64>;\n\n      ${t.mainStart([_,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / 64;\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / 64;\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == 63) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${p?"bias[offset1d + i]":r+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${f?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${fn(r,g,"value")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = 64;\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${_n("sum",g)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${_n("square_sum",g)} / f32(uniforms.hidden_size) ${s?"":"- mean * mean"} + uniforms.epsilon);\n        ${h?"mean_output[global_idx] = mean;":""}\n        ${m?"inv_std_output[global_idx] = inv_std_dev;":""}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${s?"":`- ${r}(mean)`}) *\n            ${r}(inv_std_dev) * gamma[offset1d + i]\n            ${c?"+ beta[offset1d + i]":""};\n        }\n      }`},getRunData:()=>({outputs:b,dispatchGroup:{x:Math.ceil(l/u)},programUniforms:w})}},Kl=(e,t)=>{Wl(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(Hl(e.inputs,t,e.outputCount,!1),{outputs:n})}}),Cd=re(()=>{Mu(),$u(),Iu(),zu(),Ql=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)})},Xl=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach(e=>n.push(Number(e)));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach(e=>n.push(Number(e)))}return n},Jl=(e,t)=>{if(e.length>1){let t=Xl(e,1),n=Xl(e,2),r=Xl(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),on({starts:t,ends:n,axes:r})}return t},Yl=(e,t,n,r,s)=>{let i=e;return e<0&&(i+=n[r[t]]),s[t]<0?Math.max(0,Math.min(i,n[r[t]]-1)):Math.max(0,Math.min(i,n[r[t]]))},Zl=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${gn("uniforms.input_shape","i",n.length)};\n            let steps_i = ${gn("uniforms.steps","i",n.length)};\n            let signs_i = ${gn("uniforms.signs","i",n.length)};\n            let starts_i = ${gn("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,eu=(e,t)=>{let n=e[0].dims,r=At.size(n),s=t.axes.length>0?At.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],i=Xl(e,4);i.forEach(e=>0!==e||(()=>{throw new Error("step cannot be 0")})),0===i.length&&(i=Array(s.length).fill(1));let a=t.starts.map((e,t)=>Yl(e,t,n,s,i)),o=t.ends.map((e,t)=>Yl(e,t,n,s,i));if(s.length!==a.length||s.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==n.length)for(let _=0;_<n.length;++_)s.includes(_)||(a.splice(_,0,0),o.splice(_,0,n[_]),i.splice(_,0,1));let l=i.map(e=>Math.sign(e));i.forEach((e,t,n)=>{if(e<0){let r=(o[t]-a[t])/e,s=a[t],l=s+r*i[t];a[t]=l,o[t]=s,n[t]=-e}});let u=n.slice(0);s.forEach((e,t)=>{u[e]=Math.ceil((o[e]-a[e])/i[e])});let d={dims:u,dataType:e[0].dataType},c=yn("output",e[0].dataType,u.length),p=bn("input",e[0].dataType,e[0].dims.length),h=At.size(u),m=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:i.length}],f=[{type:12,data:h},{type:12,data:a},{type:6,data:l},{type:12,data:i},...pn(e[0].dims,u)];return{name:"Slice",shaderCache:{hint:`${l.length}_${a.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(m).declareVariables(p,c)}\n        ${Zl(p,c,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${c.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${c.setByOffset("global_idx",p.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:f})}},tu=(e,t)=>{Ql(e.inputs,t);let n=Jl(e.inputs,t);e.compute(eu(e.inputs,n),{inputs:[0]})},nu=e=>{let t=e.starts,n=e.ends,r=e.axes;return on({starts:t,ends:n,axes:r})}}),Ed=re(()=>{Mu(),$u(),Iu(),Fu(),zu(),ru=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},su=(e,t)=>{let n,r=e.inputs[0],s=r.dims,i=At.size(s),a=s.length,o=At.normalizeAxis(t.axis,a),l=o<s.length-1,u=[];l?(u=Array.from({length:a},(e,t)=>t),u[o]=a-1,u[a-1]=o,n=e.compute(An(r,u),{inputs:[r],outputs:[-1]})[0]):n=r;let d=n.dims,c=d[a-1],p=i/c,h=hn(c),m=c/h,f=64;1===p&&(f=256);let _=bn("x",n.dataType,n.dims,h),g=yn("result",n.dataType,n.dims,h),w=_.type.value,b="f32"===dn(n.dataType)?`var threadMax = ${w}(-3.402823e+38f);`:`var threadMax = ${w}(-65504.0h);`,y=e.compute({name:"Softmax",shaderCache:{hint:`${h};${f}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:d,dataType:n.dataType}],dispatchGroup:{x:p},programUniforms:[{type:6,data:m}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${w};\n      var<workgroup> rowSumShared : ${w};\n      var<workgroup> threadShared : array<${w}, ${f}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${w} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${w}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(_,g)}\n      ${e.mainStart(f)}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${f};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${b}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${w}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${w}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${w}(${_n("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`},{inputs:[n],outputs:[l?-1:0]})[0];l&&e.compute(An(y,u),{inputs:[y]})},iu=(e,t)=>{ru(e.inputs),su(e,t)},au=e=>on({axis:e.axis})}),Pd=re(()=>{Mu(),$u(),zu(),ou=e=>Array.from(e.getBigInt64Array(),Number),lu=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&10!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(ou(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},uu=(e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},du=(e,t)=>{let n=e[0].dims,r=t??ou(e[1]),s=uu(n,r),i=At.size(s),a=e[0].dataType,o=bn("input",a,n.length),l=yn("output",a,s.length);return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...pn(e[0].dims,s)]}),getShaderSource:e=>`\n      const inputShape = ${o.indices(...n)};\n      ${e.registerUniform("output_size","u32").declareVariables(o,l)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${l.offsetToIndices("global_idx")};\n      var input_indices: ${o.type.indices};\n      for (var i = 0; i < ${n.length}; i++) {\n        let input_dim_i = ${o.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${o.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${l.setByOffset("global_idx",o.getByIndices("input_indices"))}\n    }`}},cu=e=>{lu(e.inputs),e.compute(du(e.inputs),{inputs:[0]})}}),Ad=re(()=>{Mu(),$u(),zu(),pu=(e,t,n,r,s)=>{let i,a=yn("output_data",s,n.length,4),o=bn("a_data",t[1].dataType,t[1].dims.length,4),l=bn("b_data",t[2].dataType,t[2].dims.length,4),u=bn("c_data",t[0].dataType,t[0].dims.length,4),d=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){let e=(e,t,n="")=>{let r=`a_data[index_a${t}][component_a${t}]`,s=`b_data[index_b${t}][component_b${t}]`,i=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\n            let output_indices${t} = ${a.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${o.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_c${t} = ${u.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            let component_c${t} = offset_c${t} % 4u;\n            ${e}[${t}] = ${n}(${d(r,s,i)});\n          `};i=9===s?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else i=a.setByOffset("global_idx",d(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(u,o,l,a)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${i}\n      }`},hu=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,s=e[1].dataType,i=!(At.areEqual(t,n)&&At.areEqual(n,r)),a=t,o=At.size(t);if(i){let e=Pt.calcShape(Pt.calcShape(t,n,!1),r,!1);if(!e)throw new Error("Can't perform where op on the given tensors");a=e,o=At.size(a)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>pu(t,e,a,i,s),getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...pn(r,t,n,a)]})}},mu=e=>{e.compute(hu(e.inputs))}}),Id=re(()=>{Bu(),Du(),Nu(),ju(),Vu(),Gu(),qu(),Zu(),td(),nd(),rd(),sd(),id(),ad(),od(),ld(),ud(),dd(),cd(),pd(),_d(),gd(),wd(),bd(),yd(),hd(),vd(),xd(),Md(),kd(),Td(),Lu(),$d(),fd(),Sd(),Cd(),Ed(),md(),Pd(),Fu(),Ru(),Ad(),fu=new Map([["Abs",[Kr]],["Acos",[Qr]],["Acosh",[Xr]],["Add",[Gs]],["ArgMax",[Er,Pr]],["ArgMin",[Cr,Pr]],["Asin",[Jr]],["Asinh",[Yr]],["Atan",[Zr]],["Atanh",[es]],["Attention",[Dr]],["AveragePool",[sl,rl]],["BatchNormalization",[Vr]],["BiasAdd",[Ur]],["BiasSplitGelu",[Ns]],["Cast",[ns,ts]],["Ceil",[is]],["Clip",[ss]],["Concat",[ri,si]],["Conv",[Vi,Di]],["ConvTranspose",[Yi,Ki]],["Cos",[as]],["Cosh",[os]],["CumSum",[ea,ta]],["DepthToSpace",[ia,aa]],["DequantizeLinear",[fl,_l]],["Div",[qs]],["Einsum",[fa,_a]],["Elu",[us,ls]],["Equal",[Us]],["Erf",[cs]],["Exp",[ps]],["Expand",[va]],["FastGelu",[Ma]],["Floor",[hs]],["FusedConv",[Vi,Di]],["Gather",[Sa,$a]],["GatherElements",[Da,Ba]],["GatherBlockQuantized",[za,Fa]],["GatherND",[Ea,Pa]],["Gelu",[ms]],["Gemm",[Va,Ra]],["GlobalAveragePool",[ol,al]],["GlobalMaxPool",[pl,cl]],["Greater",[Qs]],["GreaterOrEqual",[Js]],["GridSample",[eo,to]],["GroupQueryAttention",[ko]],["HardSigmoid",[xs,vs]],["InstanceNormalization",[Co]],["LayerNormalization",[Ao]],["LeakyRelu",[fs,ls]],["Less",[Xs]],["LessOrEqual",[Ys]],["Log",[zs]],["MatMul",[zo]],["MatMulNBits",[Bo,Do]],["MaxPool",[ul,dl]],["Mul",[Ws]],["MultiHeadAttention",[lo,so]],["Neg",[gs]],["Not",[_s]],["Pad",[Ho]],["Pow",[Hs]],["QuickGelu",[Ls,ls]],["Range",[bl]],["Reciprocal",[ws]],["ReduceMin",[xr]],["ReduceMean",[gr]],["ReduceMax",[vr]],["ReduceSum",[kr]],["ReduceProd",[Mr]],["ReduceL1",[wr]],["ReduceL2",[br]],["ReduceLogSum",[$r]],["ReduceLogSumExp",[yr]],["ReduceSumSquare",[Tr]],["Relu",[bs]],["Resize",[ql,Ul]],["RotaryEmbedding",[bo]],["ScatterND",[Tl,kl]],["Sigmoid",[ys]],["Sin",[Ms]],["Sinh",[ks]],["Slice",[tu,nu]],["SkipLayerNormalization",[Kl]],["Split",[fo,_o]],["Sqrt",[Ts]],["Softmax",[iu,au]],["Sub",[Ks]],["Tan",[$s]],["Tanh",[Cs]],["ThresholdedRelu",[Is,ls]],["Tile",[cu]],["Transpose",[In,zn]],["Where",[mu]]])}),zd=re(()=>{Te(),Tu(),zu(),_u=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,s){K(e.programInfo.name);let i=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let o=[];for(let u of t)o.push({binding:o.length,resource:{buffer:u.buffer}});for(let u of n)o.push({binding:o.length,resource:{buffer:u.buffer}});s&&o.push({binding:o.length,resource:s});let l=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Q(e.programInfo.name)}dispose(){}build(e,t){K(e.name);let n=this.backend.device,r=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(e=>{n.features.has(e.feature)&&r.push(`enable ${e.extension};`)});let s=kn(t,this.backend.device.limits),i=e.getShaderSource(s),a=`${r.join("\n")}\n${s.additionalImplementations}\n${i}`,o=n.createShaderModule({code:a,label:e.name});Ct("verbose",()=>`[WebGPU] ${e.name} shader code: ${a}`);let l=n.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:e.name});return Q(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:s.variablesInfo}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=s&&n<=s&&r<=s)return[t,n,r];let i=t*n*r,a=Math.ceil(Math.sqrt(i));if(a>s){if(a=Math.ceil(Math.cbrt(i)),a>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}return[a,a,1]}}}),Fd={};se(Fd,{WebGpuBackend:()=>Dd});var Od,Ld,Bd,Dd,Nd=re(()=>{Te(),Mu(),Tu(),Su(),Au(),Id(),zd(),Od=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let r=0;r<e.length;++r){let s=e[r].dataType;switch(t[r]){case"none":n.push("");break;case"type":n.push(`${s}`);break;case"rank":{let t=e[r].dims.length;n.push(`${s};${t}`);break}case"dims":{let t=e[r].dims.join(",");n.push(`${s};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join("|")},Ld=(e,t,n)=>{var r,s;let i=e.name;return(null==(r=e.shaderCache)?void 0:r.hint)&&(i+="["+e.shaderCache.hint+"]"),i+=":"+n+`:${Od(t,(null==(s=e.shaderCache)?void 0:s.inputDependencies)??new Array(t.length).fill("dims"))}`,i},Bd=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Dd=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n},s=e=>t.features.has(e)&&n.push(e)&&!0;s("chromium-experimental-timestamp-query-inside-passes")||s("timestamp-query"),s("shader-f16"),s("subgroups"),this.device=await t.requestDevice(r),this.adapterInfo=new Bd(t.info||await t.requestAdapterInfo()),this.gpuDataManager=sn(this),this.programManager=new _u(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,$t(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error,GPUValidationError},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;K(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then(()=>{var t;let n=new BigUint64Array(e.getMappedRange()),r=this.pendingQueries.get(e);for(let e=0;e<n.length/2;e++){let s=r[e],i=s.kernelId,a=this.kernels.get(i),o=a.kernelType,l=a.kernelName,u=s.programName,d=s.inputTensorViews,c=s.outputTensorViews,p=n[2*e],h=n[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=p);let m=Number(p-this.queryTimeBase),f=Number(h-this.queryTimeBase);if(!Number.isSafeInteger(m)||!Number.isSafeInteger(f))throw new RangeError("incorrect timestamp range");if(null==(t=this.env.webgpu.profiling)?void 0:t.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map(e=>({dims:e.dims,dataType:_t(e.dataType)})),outputsMetadata:c.map(e=>({dims:e.dims,dataType:_t(e.dataType)})),kernelId:i,kernelType:o,kernelName:l,programName:u,startTime:m,endTime:f});else{let e="";d.forEach((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${_t(t.dataType)}, `});let t="";c.forEach((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${_t(e.dataType)}, `})}W("GPU",`${u}::${p}::${h}`)}e.unmap(),this.pendingQueries.delete(e)}),Q()}run(e,t,n,r,s,i){K(e.name);let a=[];for(let w=0;w<t.length;++w){let e=t[w].data;if(0===e)continue;let n=this.gpuDataManager.get(e);if(!n)throw new Error(`no GPU data for input: ${e}`);a.push(n)}let{outputs:o,dispatchGroup:l,programUniforms:u}=e.getRunData(t),d=0===n.length?o.map((e,t)=>t):n;if(d.length!==o.length)throw new Error(`Output size ${d.length} must be equal to ${o.length}.`);let c,p=[],h=[];for(let w=0;w<o.length;++w){if(!Number.isInteger(d[w])||d[w]<-3||d[w]>=i)throw new Error(`Invalid output index: ${d[w]}`);if(-3===d[w])continue;let e=-1===d[w],t=-2===d[w],n=e||t?s(o[w].dataType,o[w].dims):r(d[w],o[w].dataType,o[w].dims);if(p.push(n),0===n.data)continue;let a=this.gpuDataManager.get(n.data);if(!a)throw new Error(`no GPU data for output: ${n.data}`);if(e&&this.temporaryData.push(a),t){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(a)}h.push(a)}if(a.length!==t.length||h.length!==p.length){if(0===h.length)return Q(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(u){let e=0,t=[];u.forEach(n=>{let r="number"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let s,i,a=10===n.type?2:4;10===n.type?(i=r.length>4?16:r.length>2?8:r.length*a,s=r.length>4?16:a*r.length):(i=r.length<=2?r.length*a:16,s=16),e=Math.ceil(e/i)*i,t.push(e);let o=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/o)*s:r.length*a});let n=16;e=Math.ceil(e/n)*n;let r=new ArrayBuffer(e);u.forEach((e,n)=>{let s=t[n],i="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,s,i.length).set(i);else if(12===e.type)new Uint32Array(r,s,i.length).set(i);else if(10===e.type)new Uint16Array(r,s,i.length).set(i);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${_t(e.type)}`);new Float32Array(r,s,i.length).set(i)}});let s=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(s.buffer,0,r,0,e),this.gpuDataManager.release(s.id),c={offset:0,size:e,buffer:s.buffer}}let m=this.programManager.normalizeDispatchGroupSize(l),f=1===m[1]&&1===m[2],_=Ld(e,t,f),g=this.programManager.getArtifact(_);if(g||(g=this.programManager.build(e,m),this.programManager.setArtifact(_,g),Ct("info",()=>`[artifact] key: ${_}, programName: ${e.name}`)),u&&g.uniformVariablesInfo){if(u.length!==g.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${u.length} in program "${g.programInfo.name}".`);for(let e=0;e<u.length;e++){let t=u[e],n=t.type,r="number"==typeof t.data?1:t.data.length,[s,i]=g.uniformVariablesInfo[e];if(n!==s||r!==i)throw new Error(`Uniform variable ${e} mismatch: expect type ${s} with size ${i}, got type ${n} with size ${r} in program "${g.programInfo.name}".`)}}if(Ct("info",()=>`[ProgramManager] run "${e.name}" (key=${_}) with ${m[0]}x${m[1]}x${m[2]}`),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:t,outputTensorViews:p};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(g,a,h,m,c),Q(e.name),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){let s=fu.get(e);if(!s)throw new Error(`kernel not implemented: ${e}`);let i={kernelType:e,kernelName:r,kernelEntry:s[0],attributes:[s[1],n]};this.kernels.set(t,i)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let s=r.kernelType,i=r.kernelName,a=r.kernelEntry,o=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${s}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),Ct("info",()=>`[WebGPU] Start to run kernel "[${s}] ${i}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(t,o[1]),0}catch(u){return n.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${i}" failed. ${u}`)),1}finally{l&&n.push(this.device.popErrorScope().then(e=>e?`GPU validation error for kernel "[${s}] ${i}": ${e.message}`:null));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let s=this.sessionExternalDataMapping.get(e);s||(s=new Map,this.sessionExternalDataMapping.set(e,s));let i=s.get(t),a=this.gpuDataManager.registerExternalBuffer(n,r,i);return s.set(t,[a,n]),a}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach(e=>this.gpuDataManager.unregisterExternalBuffer(e[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let r=await nn(this,e,t);return Lt(r.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){var e;this.queryType="none",("default"===(null==(e=this.env.webgpu.profiling)?void 0:e.mode)||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ct("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ct("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ct("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){let n=this.getComputePassEncoder(),s=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(s.computePipeline),n.setBindGroup(0,s.bindGroup),n.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),jd={};se(jd,{init:()=>Gd});var Rd,Vd,Gd,qd,Ud,Wd,Hd,Kd,Qd,Xd,Jd,Yd,Zd,ec,tc,nc,rc,sc,ic,ac,oc,lc,uc,dc,cc,pc,hc,mc,fc,_c,gc,wc,bc,yc,vc,xc,Mc,kc=re(()=>{Mu(),Tu(),$u(),Eu(),Rd=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=At.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=At.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=At.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw new Error("Invalid data type");let e=At.size(this.dims);return 0===e?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(At.size(t)!==At.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Vd=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let r=e.PTR_SIZE,s=n/e.PTR_SIZE,i=4===r?"i32":"i64";this.opKernelContext=Number(e.getValue(r*s++,i));let a=Number(e.getValue(r*s++,i));this.outputCount=Number(e.getValue(r*s++,i)),this.customDataOffset=Number(e.getValue(r*s++,"*")),this.customDataSize=Number(e.getValue(r*s++,i));let o=[];for(let l=0;l<a;l++){let t=Number(e.getValue(r*s++,i)),n=Number(e.getValue(r*s++,"*")),a=Number(e.getValue(r*s++,i)),l=[];for(let o=0;o<a;o++)l.push(Number(e.getValue(r*s++,i)));o.push(new Rd(e,t,n,l))}this.inputs=o}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){var n;let r=(null==(n=null==t?void 0:t.inputs)?void 0:n.map(e=>"number"==typeof e?this.inputs[e]:e))??this.inputs,s=(null==t?void 0:t.outputs)??[];return this.backend.run(e,r,s,(e,t,n)=>new Rd(this.module,t,this.output(e,n),n),(e,t)=>{let n=gt(e,t);if(!n)throw new Error(`Unsupported data type: ${e}`);let r=n>0?this.backend.gpuDataManager.create(n).id:0;return new Rd(this.module,e,r,t)},this.outputCount)}output(e,t){let n=this.module.stackSave();try{let n=this.module.PTR_SIZE,r=4===n?"i32":"i64",s=this.module.stackAlloc((1+t.length)*n);this.module.setValue(s,t.length,r);for(let e=0;e<t.length;e++)this.module.setValue(s+n*(e+1),t[e],r);return this.module._JsepOutput(this.opKernelContext,e,s)}catch(r){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${r}`)}finally{this.module.stackRestore(n)}}},Gd=async(e,t,n,r)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===e){let e=new(0,(Nd(),ie(Fd)).WebGpuBackend);await e.initialize(n,r),s("webgpu",[e,t=>e.alloc(Number(t)),t=>e.free(t),(n,r,s,i=!1)=>{if(i)Ct("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(n)}, dst=${Number(r)}, size=${Number(s)}`),e.memcpy(Number(n),Number(r));else{Ct("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(n)}, gpuDataId=${Number(r)}, size=${Number(s)}`);let i=t.HEAPU8.subarray(Number(n>>>0),Number(n>>>0)+Number(s));e.upload(Number(r),i)}},async(n,r,s)=>{Ct("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${r}, size=${s}`),await e.download(Number(n),()=>t.HEAPU8.subarray(Number(r)>>>0,Number(r+s)>>>0))},(n,r,s)=>e.createKernel(n,Number(r),s,t.UTF8ToString(t._JsepGetNodeName(Number(r)))),t=>e.releaseKernel(t),(n,r,s,i)=>{Ct("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${s}, kernel=${n}, contextDataOffset=${r}`);let a=new Vd(t,e,Number(r));return e.computeKernel(Number(n),a,i)},()=>e.captureBegin(),()=>e.captureEnd(),()=>e.replay()])}else{let e=new Qt(n);s("webnn",[e,()=>e.reserveTensorId(),t=>e.releaseTensorId(t),async(t,n,r,s,i)=>e.ensureTensor(t,n,r,s,i),(t,n)=>{e.uploadTensor(t,n)},async(t,n)=>e.downloadTensor(t,n)])}}}),Tc=re(()=>{vu(),xu(),Mu(),bu(),yu(),ku(),qd=(e,t)=>{0!==st()._OrtInit(e,t)&&ot("Can't initialize onnxruntime.")},Ud=async e=>{qd(e.wasm.numThreads,bt(e.logLevel))},Wd=async(e,t)=>{var n,r;null==(r=(n=st()).asyncInit)||r.call(n);{let n=(kc(),ie(jd)).init;if("webgpu"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=e.webgpu.adapter;if(t){if("object"!=typeof t.limits||"object"!=typeof t.features||"function"!=typeof t.requestDevice)throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(void 0!==n&&"low-power"!==n&&"high-performance"!==n)throw new Error(`Invalid powerPreference setting: "${n}"`);let r=e.webgpu.forceFallbackAdapter;if(void 0!==r&&"boolean"!=typeof r)throw new Error(`Invalid forceFallbackAdapter setting: "${r}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:r}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await n("webgpu",st(),e,t)}if("webnn"===t){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",st(),e)}}},Hd=new Map,Kd=e=>{let t=st(),n=t.stackSave();try{let n=t.PTR_SIZE,r=t.stackAlloc(2*n);0!==t._OrtGetInputOutputCount(e,r,r+n)&&ot("Can't get session input/output count.");let s=4===n?"i32":"i64";return[Number(t.getValue(r,s)),Number(t.getValue(r+n,s))]}finally{t.stackRestore(n)}},Qd=(e,t)=>{let n=st(),r=n.stackSave(),s=0;try{let r=n.PTR_SIZE,i=n.stackAlloc(2*r);0!==n._OrtGetInputOutputMetadata(e,t,i,i+r)&&ot("Can't get session input/output metadata.");let a=Number(n.getValue(i,"*"));s=Number(n.getValue(i+r,"*"));let o=n.HEAP32[s/4];if(0===o)return[a,0];let l=n.HEAPU32[s/4+1],u=[];for(let e=0;e<l;e++){let t=Number(n.getValue(s+8+e*r,"*"));u.push(0!==t?n.UTF8ToString(t):Number(n.getValue(s+8+(e+l)*r,"*")))}return[a,o,u]}finally{n.stackRestore(r),0!==s&&n._OrtFree(s)}},Xd=e=>{let t=st(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},Jd=async(e,t)=>{var n,r,s,i;let a,o,l=st();Array.isArray(e)?[a,o]=e:e.buffer===l.HEAPU8.buffer?[a,o]=[e.byteOffset,e.byteLength]:[a,o]=Xd(e);let u=0,d=0,c=0,p=[],h=[],m=[];try{if([d,p]=await mt(t),(null==t?void 0:t.externalData)&&l.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(Mt("string"==typeof n?n:n.data).then(e=>{l.mountExternalData(t,e)}))}await Promise.all(e)}for(let n of(null==t?void 0:t.executionProviders)??[])if("webnn"===("string"==typeof n?n:n.name)){if(l.shouldTransferToMLTensor=!1,"string"!=typeof n){let e=n,t=null==e?void 0:e.context,r=null==e?void 0:e.gpuDevice,s=null==e?void 0:e.deviceType,i=null==e?void 0:e.powerPreference;l.currentContext=t||(r?await l.webnnCreateMLContext(r):await l.webnnCreateMLContext({deviceType:s,powerPreference:i}))}else l.currentContext=await l.webnnCreateMLContext();break}u=await l._OrtCreateSession(a,o,d),null==(n=l.webgpuOnCreateSession)||n.call(l,u),0===u&&ot("Can't create a session."),null==(r=l.jsepOnCreateSession)||r.call(l),l.currentContext&&(l.webnnRegisterMLContext(u,l.currentContext),l.currentContext=void 0,l.shouldTransferToMLTensor=!0);let[e,i]=Kd(u),f=!!(null==t?void 0:t.enableGraphCapture),_=[],g=[],w=[],b=[],y=[];for(let t=0;t<e;t++){let[e,n,r]=Qd(u,t);0===e&&ot("Can't get an input name."),h.push(e);let s=l.UTF8ToString(e);_.push(s),w.push(0===n?{name:s,isTensor:!1}:{name:s,isTensor:!0,type:_t(n),shape:r})}for(let n=0;n<i;n++){let[r,i,a]=Qd(u,n+e);0===r&&ot("Can't get an output name."),m.push(r);let o=l.UTF8ToString(r);g.push(o),b.push(0===i?{name:o,isTensor:!1}:{name:o,isTensor:!0,type:_t(i),shape:a});{if(f&&void 0===(null==t?void 0:t.preferredOutputLocation)){y.push("gpu-buffer");continue}let e="string"==typeof(null==t?void 0:t.preferredOutputLocation)?t.preferredOutputLocation:(null==(s=null==t?void 0:t.preferredOutputLocation)?void 0:s[o])??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e&&"ml-tensor"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(f&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);y.push(e)}}let v=null;return y.some(e=>"gpu-buffer"===e||"ml-tensor"===e)&&(c=l._OrtCreateBinding(u),0===c&&ot("Can't create IO binding."),v={handle:c,outputPreferredLocations:y,outputPreferredLocationsEncoded:y.map(e=>xt(e))}),Hd.set(u,[u,h,m,v,f,!1]),[u,_,g,w,b]}catch(f){throw h.forEach(e=>l._OrtFree(e)),m.forEach(e=>l._OrtFree(e)),0!==c&&0!==l._OrtReleaseBinding(c)&&ot("Can't release IO binding."),0!==u&&0!==l._OrtReleaseSession(u)&&ot("Can't release session."),f}finally{l._free(a),0!==d&&0!==l._OrtReleaseSessionOptions(d)&&ot("Can't release session options."),p.forEach(e=>l._free(e)),null==(i=l.unmountExternalData)||i.call(l)}},Yd=e=>{var t,n,r;let s=st(),i=Hd.get(e);if(!i)throw new Error(`cannot release session. invalid session id: ${e}`);let[a,o,l,u,d]=i;u&&(d&&0!==s._OrtClearBoundOutputs(u.handle)&&ot("Can't clear bound outputs."),0!==s._OrtReleaseBinding(u.handle)&&ot("Can't release IO binding.")),null==(t=s.jsepOnReleaseSession)||t.call(s,e),null==(n=s.webnnOnReleaseSession)||n.call(s,e),null==(r=s.webgpuOnReleaseSession)||r.call(s,e),o.forEach(e=>s._OrtFree(e)),l.forEach(e=>s._OrtFree(e)),0!==s._OrtReleaseSession(a)&&ot("Can't release session."),Hd.delete(e)},Zd=async(e,t,n,r,s,i,a=!1)=>{if(!e)return void t.push(0);let o,l,u=st(),d=u.PTR_SIZE,c=e[0],p=e[1],h=e[3],m=h;if("string"===c&&("gpu-buffer"===h||"ml-tensor"===h))throw new Error("String tensor is not supported on GPU.");if(a&&"gpu-buffer"!==h)throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if("gpu-buffer"===h){let t=e[2].gpuBuffer;l=gt(ft(c),p);{let e=u.jsepRegisterBuffer;if(!e)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');o=e(r,i,t,l)}}else if("ml-tensor"===h){let t=e[2].mlTensor;l=gt(ft(c),p);let n=u.webnnRegisterMLTensor;if(!n)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');o=n(r,t,ft(c),p)}else{let t=e[2];if(Array.isArray(t)){l=d*t.length,o=u._malloc(l),n.push(o);for(let e=0;e<t.length;e++){if("string"!=typeof t[e])throw new TypeError(`tensor data at index ${e} is not a string`);u.setValue(o+e*d,it(t[e],n),"*")}}else{let e=u.webnnIsGraphInput;if("string"!==c&&e){if(e(r,u.UTF8ToString(s))){let e=ft(c);l=gt(e,p),m="ml-tensor";let n=u.webnnCreateTemporaryTensor,s=u.webnnUploadTensor;if(!n||!s)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let i=await n(r,e,p);s(i,new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),o=i}else l=t.byteLength,o=u._malloc(l),n.push(o),u.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),o)}else l=t.byteLength,o=u._malloc(l),n.push(o),u.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),o)}}let f=u.stackSave(),_=u.stackAlloc(4*p.length);try{p.forEach((e,t)=>u.setValue(_+t*d,e,4===d?"i32":"i64"));let e=u._OrtCreateTensor(ft(c),o,l,_,p.length,xt(m));0===e&&ot(`Can't create tensor for input/output. session=${r}, index=${i}.`),t.push(e)}finally{u.stackRestore(f)}},ec=async(e,t,n,r,s,i)=>{var a,o,l,u;let d=st(),c=d.PTR_SIZE,p=Hd.get(e);if(!p)throw new Error(`cannot run inference. invalid session id: ${e}`);let h=p[0],m=p[1],f=p[2],_=p[3],g=p[4],w=p[5],b=t.length,y=r.length,v=0,x=[],M=[],k=[],T=[],$=d.stackSave(),S=d.stackAlloc(b*c),C=d.stackAlloc(b*c),E=d.stackAlloc(y*c),P=d.stackAlloc(y*c);try{[v,x]=lt(i);for(let r=0;r<b;r++)await Zd(n[r],M,T,e,m[t[r]],t[r],g);for(let t=0;t<y;t++)await Zd(s[t],k,T,e,f[r[t]],b+r[t],g);for(let e=0;e<b;e++)d.setValue(S+e*c,M[e],"*"),d.setValue(C+e*c,m[t[e]],"*");for(let e=0;e<y;e++)d.setValue(E+e*c,k[e],"*"),d.setValue(P+e*c,f[r[e]],"*");if(_&&!w){let{handle:n,outputPreferredLocations:i,outputPreferredLocationsEncoded:o}=_;if(m.length!==b)throw new Error(`input count from feeds (${b}) is expected to be always equal to model's input count (${m.length}).`);for(let r=0;r<b;r++){let s=t[r];0!==await d._OrtBindInput(n,m[s],M[r])&&ot(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<y;t++){let l=r[t];(null==(a=s[t])?void 0:a[3])?0!==d._OrtBindOutput(n,f[l],k[t],0)&&ot(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==d._OrtBindOutput(n,f[l],0,o[l])&&ot(`Can't bind output[${t}] to ${i[t]} for session=${e}.`)}Hd.set(e,[h,m,f,_,g,!0])}let p;null==(o=d.jsepOnRunStart)||o.call(d,h),null==(l=d.webnnOnRunStart)||l.call(d,h),p=_?await d._OrtRunWithBinding(h,_.handle,y,E,v):await d._OrtRun(h,C,S,b,P,y,E,v),0!==p&&ot("failed to call OrtRun().");let $=[];for(let t=0;t<y;t++){let n=Number(d.getValue(E+t*c,"*"));if(n===k[t]){$.push(s[t]);continue}let i,a=d.stackSave(),o=d.stackAlloc(4*c),l=!1,p=0;try{0!==d._OrtGetTensorData(n,o,o+c,o+2*c,o+3*c)&&ot(`Can't access output tensor data on index ${t}.`);let s=4===c?"i32":"i64",a=Number(d.getValue(o,s));p=d.getValue(o+c,"*");let u=d.getValue(o+2*c,"*"),h=Number(d.getValue(o+3*c,s)),m=[];for(let e=0;e<h;e++)m.push(Number(d.getValue(u+e*c,s)));0!==d._OrtFree(u)&&ot("Can't free memory for tensor dims.");let f=m.reduce((e,t)=>e*t,1);i=_t(a);let g=null==_?void 0:_.outputPreferredLocations[r[t]];if("string"===i){if("gpu-buffer"===g||"ml-tensor"===g)throw new Error("String tensor is not supported on GPU.");let e=[];for(let t=0;t<f;t++){let n=d.getValue(p+t*c,"*"),r=d.getValue(p+(t+1)*c,"*"),s=t===f-1?void 0:r-n;e.push(d.UTF8ToString(n,s))}$.push([i,m,e,"cpu"])}else if("gpu-buffer"===g&&f>0){let e=d.jsepGetBuffer;if(!e)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let t=e(p),r=gt(a,f);if(void 0===r||!yt(i))throw new Error(`Unsupported data type: ${i}`);l=!0,$.push([i,m,{gpuBuffer:t,download:d.jsepCreateDownloader(t,r,i),dispose:()=>{0!==d._OrtReleaseTensor(n)&&ot("Can't release tensor.")}},"gpu-buffer"])}else if("ml-tensor"===g&&f>0){let t=d.webnnEnsureTensor,r=d.webnnIsInt64Supported;if(!t||!r)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===gt(a,f)||!vt(i))throw new Error(`Unsupported data type: ${i}`);if("int64"===i&&!r(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let s=await t(e,p,a,m,!1);l=!0,$.push([i,m,{mlTensor:s,download:d.webnnCreateMLTensorDownloader(p,i),dispose:()=>{d.webnnReleaseTensorId(p),d._OrtReleaseTensor(n)}},"ml-tensor"])}else{let e=new(wt(i))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(d.HEAPU8.subarray(p,p+e.byteLength)),$.push([i,m,e,"cpu"])}}finally{d.stackRestore(a),"string"===i&&p&&d._free(p),l||d._OrtReleaseTensor(n),null==(u=d.webnnOnRunEnd)||u.call(d,h)}}return _&&!g&&(0!==d._OrtClearBoundOutputs(_.handle)&&ot("Can't clear bound outputs."),Hd.set(e,[h,m,f,_,g,!1])),$}finally{d.stackRestore($),M.forEach(e=>d._OrtReleaseTensor(e)),k.forEach(e=>d._OrtReleaseTensor(e)),T.forEach(e=>d._free(e)),0!==v&&d._OrtReleaseRunOptions(v),x.forEach(e=>d._free(e))}},tc=e=>{let t=st(),n=Hd.get(e);if(!n)throw new Error("invalid session id");let r=n[0],s=t._OrtEndProfiling(r);0===s&&ot("Can't get an profile file name."),t._OrtFree(s)},nc=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}}),$c=re(()=>{Te(),Tc(),bu(),wu(),rc=()=>!!E.wasm.proxy&&typeof document<"u",ic=!1,ac=!1,oc=!1,dc=new Map,cc=(e,t)=>{let n=dc.get(e);n?n.push(t):dc.set(e,[t])},pc=()=>{if(ic||!ac||oc||!sc)throw new Error("worker not ready")},hc=e=>{switch(e.data.type){case"init-wasm":ic=!1,e.data.err?(oc=!0,uc[1](e.data.err)):(ac=!0,uc[0]()),lc&&(URL.revokeObjectURL(lc),lc=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=dc.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},mc=async()=>{if(!ac){if(ic)throw new Error("multiple calls to 'initWasm()' detected.");if(oc)throw new Error("previous call to 'initWasm()' failed.");if(ic=!0,rc())return new Promise((e,t)=>{null==sc||sc.terminate(),He().then(([n,r])=>{try{(sc=r).onerror=e=>t(e),sc.onmessage=hc,uc=[e,t];let s={type:"init-wasm",in:E};!s.in.wasm.wasmPaths&&(n||Be)&&(s.in.wasm.wasmPaths={wasm:new URL("/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),sc.postMessage(s),lc=n}catch(s){t(s)}},t)});try{await rt(E.wasm),await Ud(E),ac=!0}catch(y){throw oc=!0,y}finally{ic=!1}}},fc=async e=>{if(rc())return pc(),new Promise((t,n)=>{cc("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:E}};sc.postMessage(r)});await Wd(E,e)},_c=async e=>rc()?(pc(),new Promise((t,n)=>{cc("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};sc.postMessage(r,[e.buffer])})):Xd(e),gc=async(e,t)=>{if(rc()){if(null==t?void 0:t.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return pc(),new Promise((n,r)=>{cc("create",[n,r]);let s={type:"create",in:{model:e,options:{...t}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),sc.postMessage(s,i)})}return Jd(e,t)},wc=async e=>{if(rc())return pc(),new Promise((t,n)=>{cc("release",[t,n]);let r={type:"release",in:e};sc.postMessage(r)});Yd(e)},bc=async(e,t,n,r,s,i)=>{if(rc()){if(n.some(e=>"cpu"!==e[3]))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(e=>e))throw new Error("pre-allocated output tensor is not supported for proxy.");return pc(),new Promise((s,a)=>{cc("run",[s,a]);let o=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:r,options:i}};sc.postMessage(l,nc(o))})}return ec(e,t,n,r,s,i)},yc=async e=>{if(rc())return pc(),new Promise((t,n)=>{cc("end-profiling",[t,n]);let r={type:"end-profiling",in:e};sc.postMessage(r)});tc(e)}}),Sc=re(()=>{Te(),$c(),Mu(),$e(),ku(),vc=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},xc=e=>{switch(e[3]){case"cpu":return new U(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!yt(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:s}=e[2];return U.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:s})}case"ml-tensor":{let t=e[0];if(!vt(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:n,download:r,dispose:s}=e[2];return U.fromMLTensor(n,{dataType:t,dims:e[1],download:r,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},Mc=class{async fetchModelAndCopyToWasmMemory(e){return _c(await Mt(e))}async loadModel(e,t){let n;K(),n="string"==typeof e?await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await gc(n,t),Q()}async dispose(){return wc(this.sessionId)}async run(e,t,n){K();let r=[],s=[];Object.entries(e).forEach(e=>{let t=e[0],n=e[1],i=this.inputNames.indexOf(t);if(-1===i)throw new Error(`invalid input '${t}'`);r.push(n),s.push(i)});let i=[],a=[];Object.entries(t).forEach(e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);i.push(n),a.push(r)});let o=r.map((e,t)=>vc(e,()=>`input "${this.inputNames[s[t]]}"`)),l=i.map((e,t)=>e?vc(e,()=>`output "${this.outputNames[a[t]]}"`):null),u=await bc(this.sessionId,s,o,a,l,n),d={};for(let c=0;c<u.length;c++)d[this.outputNames[a[c]]]=i[c]??xc(u[c]);return Q(),d}startProfiling(){}endProfiling(){yc(this.sessionId)}}}),Cc={};se(Cc,{OnnxruntimeWebAssemblyBackend:()=>Pc,initializeFlags:()=>Ec,wasmBackend:()=>Ac});var Ec,Pc,Ac,Ic=re(()=>{Te(),$c(),Sc(),Ec=()=>{("number"!=typeof E.wasm.initTimeout||E.wasm.initTimeout<0)&&(E.wasm.initTimeout=0);let e=E.wasm.simd;if("boolean"!=typeof e&&void 0!==e&&"fixed"!==e&&"relaxed"!==e&&(E.wasm.simd=!1),"boolean"!=typeof E.wasm.proxy&&(E.wasm.proxy=!1),"boolean"!=typeof E.wasm.trace&&(E.wasm.trace=!1),"number"!=typeof E.wasm.numThreads||!Number.isInteger(E.wasm.numThreads)||E.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)E.wasm.numThreads=1;else{let e=typeof navigator>"u"?ne("node:os").cpus().length:navigator.hardwareConcurrency;E.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Ac=new(Pc=class{async init(e){Ec(),await mc(),await fc(e)}async createInferenceSessionHandler(e,t){let n=new Mc;return await n.loadModel(e,t),n}})});Te(),Te(),Te();var zc=ke;{let e=(Ic(),ie(Cc)).wasmBackend;M("webgpu",e,5),M("webnn",e,5),M("cpu",e,10),M("wasm",e,10)}Object.defineProperty(E.versions,"web",{value:"1.22.0-dev.20250409-89f8206ba4",enumerable:!0});
/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Fc=Object.freeze(Object.defineProperty({__proto__:null,get InferenceSession(){return J},get TRACE(){return W},get TRACE_FUNC_BEGIN(){return K},get TRACE_FUNC_END(){return Q},get Tensor(){return U},default:zc,get env(){return E},get registerBackend(){return M}},Symbol.toStringTag,{value:"Module"}));var Oc,Lc,Bc={},Dc={"onnxruntime-common":
/*!*************************************!*\
      !*** external "onnxruntime-common" ***!
      \*************************************/e=>{e.exports=b},"onnxruntime-web":
/*!**********************************!*\
      !*** external "onnxruntime-web" ***!
      \**********************************/e=>{e.exports=Fc},"?2ce3":
/*!**********************************!*\
      !*** onnxruntime-node (ignored) ***!
      \**********************************/()=>{},"?7992":
/*!*************************!*\
      !*** node:fs (ignored) ***!
      \*************************/()=>{},"?5af5":
/*!***************************!*\
      !*** node:path (ignored) ***!
      \***************************/()=>{},"?2b25":
/*!***********************!*\
      !*** sharp (ignored) ***!
      \***********************/()=>{},"?db59":
/*!*************************!*\
      !*** node:fs (ignored) ***!
      \*************************/()=>{},"?383f":
/*!***************************!*\
      !*** node:path (ignored) ***!
      \***************************/()=>{},"?fa4b":
/*!**************************!*\
      !*** node:url (ignored) ***!
      \**************************/()=>{},"./node_modules/@huggingface/jinja/dist/index.js":
/*!*******************************************************!*\
      !*** ./node_modules/@huggingface/jinja/dist/index.js ***!
      \*******************************************************/(e,n,r)=>{r.r(n),r.d(n,{Environment:()=>ae,Interpreter:()=>oe,Template:()=>me,parse:()=>V,tokenize:()=>d});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),i=class{constructor(e,t){this.value=e,this.type=t}};function a(e){return/\w/.test(e)}function o(e){return/[0-9]/.test(e)}var l=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["~",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],u=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function d(e,t={}){var n,r;const d=[],c=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%-])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%-]})\n/g,"$1")),e.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}(e,t);let p=0,h=0;const m=e=>{let t="";for(;e(c[p]);){if("\\"===c[p]){if(++p,p>=c.length)throw new SyntaxError("Unexpected end of input");const e=c[p++],n=u.get(e);if(void 0===n)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=n;continue}if(t+=c[p++],p>=c.length)throw new SyntaxError("Unexpected end of input")}return t};e:for(;p<c.length;){const e=null==(n=d.at(-1))?void 0:n.type;if(void 0===e||e===s.CloseStatement||e===s.CloseExpression||e===s.Comment){let e="";for(;p<c.length&&("{"!==c[p]||"%"!==c[p+1]&&"{"!==c[p+1]&&"#"!==c[p+1]);)e+=c[p++];if(e.length>0){d.push(new i(e,s.Text));continue}}if("{"===c[p]&&"#"===c[p+1]){p+=2;let e="";for(;"#"!==c[p]||"}"!==c[p+1];){if(p+2>=c.length)throw new SyntaxError("Missing end of comment tag");e+=c[p++]}d.push(new i(e,s.Comment)),p+=2;continue}m(e=>/\s/.test(e));const t=c[p];if("-"===t||"+"===t){const e=null==(r=d.at(-1))?void 0:r.type;if(e===s.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case s.Identifier:case s.NumericLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++p;const e=m(o);d.push(new i(`${t}${e}`,e.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[n,r]of l){if("}}"===n&&h>0)continue;if(c.slice(p,p+n.length)===n){d.push(new i(n,r)),r===s.OpenExpression?h=0:r===s.OpenCurlyBracket?++h:r===s.CloseCurlyBracket&&--h,p+=n.length;continue e}}if("'"===t||'"'===t){++p;const e=m(e=>e!==t);d.push(new i(e,s.StringLiteral)),++p;continue}if(o(t)){let e=m(o);if("."===c[p]&&o(c[p+1])){++p;e=`${e}.${m(o)}`}d.push(new i(e,s.NumericLiteral));continue}if(a(t)){const e=m(a);d.push(new i(e,s.Identifier));continue}throw new SyntaxError(`Unexpected character: ${t}`)}return d}var c=class{constructor(){t(this,"type","Statement")}},p=class extends c{constructor(e){super(),t(this,"type","Program"),this.body=e}},h=class extends c{constructor(e,n,r){super(),t(this,"type","If"),this.test=e,this.body=n,this.alternate=r}},m=class extends c{constructor(e,n,r,s){super(),t(this,"type","For"),this.loopvar=e,this.iterable=n,this.body=r,this.defaultBlock=s}},f=class extends c{constructor(){super(...arguments),t(this,"type","Break")}},_=class extends c{constructor(){super(...arguments),t(this,"type","Continue")}},g=class extends c{constructor(e,n,r){super(),t(this,"type","Set"),this.assignee=e,this.value=n,this.body=r}},w=class extends c{constructor(e,n,r){super(),t(this,"type","Macro"),this.name=e,this.args=n,this.body=r}},b=class extends c{constructor(e){super(),t(this,"type","Comment"),this.value=e}},y=class extends c{constructor(){super(...arguments),t(this,"type","Expression")}},v=class extends y{constructor(e,n,r){super(),t(this,"type","MemberExpression"),this.object=e,this.property=n,this.computed=r}},x=class extends y{constructor(e,n){super(),t(this,"type","CallExpression"),this.callee=e,this.args=n}},M=class extends y{constructor(e){super(),t(this,"type","Identifier"),this.value=e}},k=class extends y{constructor(e){super(),t(this,"type","Literal"),this.value=e}},T=class extends k{constructor(){super(...arguments),t(this,"type","IntegerLiteral")}},$=class extends k{constructor(){super(...arguments),t(this,"type","FloatLiteral")}},S=class extends k{constructor(){super(...arguments),t(this,"type","StringLiteral")}},C=class extends k{constructor(){super(...arguments),t(this,"type","ArrayLiteral")}},E=class extends k{constructor(){super(...arguments),t(this,"type","TupleLiteral")}},P=class extends k{constructor(){super(...arguments),t(this,"type","ObjectLiteral")}},A=class extends y{constructor(e,n,r){super(),t(this,"type","BinaryExpression"),this.operator=e,this.left=n,this.right=r}},I=class extends y{constructor(e,n){super(),t(this,"type","FilterExpression"),this.operand=e,this.filter=n}},z=class extends c{constructor(e,n){super(),t(this,"type","FilterStatement"),this.filter=e,this.body=n}},F=class extends y{constructor(e,n){super(),t(this,"type","SelectExpression"),this.lhs=e,this.test=n}},O=class extends y{constructor(e,n,r){super(),t(this,"type","TestExpression"),this.operand=e,this.negate=n,this.test=r}},L=class extends y{constructor(e,n){super(),t(this,"type","UnaryExpression"),this.operator=e,this.argument=n}},B=class extends y{constructor(e=void 0,n=void 0,r=void 0){super(),t(this,"type","SliceExpression"),this.start=e,this.stop=n,this.step=r}},D=class extends y{constructor(e,n){super(),t(this,"type","KeywordArgumentExpression"),this.key=e,this.value=n}},N=class extends y{constructor(e){super(),t(this,"type","SpreadExpression"),this.argument=e}},j=class extends c{constructor(e,n,r){super(),t(this,"type","CallStatement"),this.call=e,this.callerArgs=n,this.body=r}},R=class extends y{constructor(e,n,r){super(),t(this,"type","Ternary"),this.condition=e,this.trueExpr=n,this.falseExpr=r}};function V(e){const t=new p([]);let n=0;function r(t,r){const s=e[n++];if(!s||s.type!==t)throw new Error(`Parser Error: ${r}. ${s.type} !== ${t}.`);return s}function a(e){if(!d(e))throw new SyntaxError(`Expected ${e}`);++n}function o(){switch(e[n].type){case s.Comment:return new b(e[n++].value);case s.Text:return new S(r(s.Text,"Expected text token").value);case s.OpenStatement:return function(){if(r(s.OpenStatement,"Expected opening statement token"),e[n].type!==s.Identifier)throw new SyntaxError(`Unknown statement, got ${e[n].type}`);const t=e[n].value;let i;switch(t){case"set":++n,i=function(){const e=y();let t=null;const i=[];if(l(s.Equals))++n,t=y();else{for(r(s.CloseStatement,"Expected %} token");!u("endset");)i.push(o());r(s.OpenStatement,"Expected {% token"),a("endset")}return r(s.CloseStatement,"Expected closing statement token"),new g(e,t,i)}();break;case"if":++n,i=c(),r(s.OpenStatement,"Expected {% token"),a("endif"),r(s.CloseStatement,"Expected %} token");break;case"macro":++n,i=function(){const e=Z();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=K();r(s.CloseStatement,"Expected closing statement token");const n=[];for(;!u("endmacro");)n.push(o());return new w(e,t,n)}(),r(s.OpenStatement,"Expected {% token"),a("endmacro"),r(s.CloseStatement,"Expected %} token");break;case"for":++n,i=function(){const e=y(!0);if(!(e instanceof M||e instanceof E))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);if(!d("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++n;const t=k();r(s.CloseStatement,"Expected closing statement token");const i=[];for(;!u("endfor","else");)i.push(o());const a=[];if(u("else"))for(++n,++n,r(s.CloseStatement,"Expected closing statement token");!u("endfor");)a.push(o());return new m(e,t,i,a)}(),r(s.OpenStatement,"Expected {% token"),a("endfor"),r(s.CloseStatement,"Expected %} token");break;case"call":{++n;let e=null;l(s.OpenParen)&&(e=K());const t=Z();if("Identifier"!==t.type)throw new SyntaxError("Expected identifier following call statement");const d=K();r(s.CloseStatement,"Expected closing statement token");const c=[];for(;!u("endcall");)c.push(o());r(s.OpenStatement,"Expected '{%'"),a("endcall"),r(s.CloseStatement,"Expected closing statement token");const p=new x(t,d);i=new j(p,e,c);break}case"break":++n,r(s.CloseStatement,"Expected closing statement token"),i=new f;break;case"continue":++n,r(s.CloseStatement,"Expected closing statement token"),i=new _;break;case"filter":{++n;let e=Z();e instanceof M&&l(s.OpenParen)&&(e=H(e)),r(s.CloseStatement,"Expected closing statement token");const t=[];for(;!u("endfilter");)t.push(o());r(s.OpenStatement,"Expected '{%'"),a("endfilter"),r(s.CloseStatement,"Expected '%}'"),i=new z(e,t);break}default:throw new SyntaxError(`Unknown statement type: ${t}`)}return i}();case s.OpenExpression:return function(){r(s.OpenExpression,"Expected opening expression token");const e=k();return r(s.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function l(...t){return n+t.length<=e.length&&t.every((t,r)=>t===e[n+r].type)}function u(...t){var r,i,a;return(null==(r=e[n])?void 0:r.type)===s.OpenStatement&&(null==(i=e[n+1])?void 0:i.type)===s.Identifier&&t.includes(null==(a=e[n+1])?void 0:a.value)}function d(...t){return n+t.length<=e.length&&t.every((t,r)=>"Identifier"===e[n+r].type&&t===e[n+r].value)}function c(){const e=k();r(s.CloseStatement,"Expected closing statement token");const t=[],i=[];for(;!u("elif","else","endif");)t.push(o());if(u("elif")){++n,++n;const e=c();i.push(e)}else if(u("else"))for(++n,++n,r(s.CloseStatement,"Expected closing statement token");!u("endif");)i.push(o());return new h(e,t,i)}function y(e=!1){const t=e?Z:k,r=[t()],i=l(s.Comma);for(;i&&(++n,r.push(t()),l(s.Comma)););return i?new E(r):r[0]}function k(){return V()}function V(){const e=G();if(d("if")){++n;const t=G();if(d("else")){++n;const r=V();return new R(t,e,r)}return new F(e,t)}return e}function G(){let t=q();for(;d("or");){const r=e[n];++n;const s=q();t=new A(r,t,s)}return t}function q(){let t=U();for(;d("and");){const r=e[n];++n;const s=U();t=new A(r,t,s)}return t}function U(){let t;for(;d("not");){const r=e[n];++n;const s=U();t=new L(r,s)}return t??function(){let t=W();for(;;){let r;if(d("not","in"))r=new i("not in",s.Identifier),n+=2;else if(d("in"))r=e[n++];else{if(!l(s.ComparisonBinaryOperator))break;r=e[n++]}const a=W();t=new A(r,t,a)}return t}()}function W(){let t=J();for(;l(s.AdditiveBinaryOperator);){const r=e[n];++n;const s=J();t=new A(r,t,s)}return t}function H(e){let t=new x(e,K());return t=X(t),l(s.OpenParen)&&(t=H(t)),t}function K(){r(s.OpenParen,"Expected opening parenthesis for arguments list");const t=function(){const t=[];for(;!l(s.CloseParen);){let r;if(e[n].type===s.MultiplicativeBinaryOperator&&"*"===e[n].value){++n;const e=k();r=new N(e)}else if(r=k(),l(s.Equals)){if(++n,!(r instanceof M))throw new SyntaxError("Expected identifier for keyword argument");const e=k();r=new D(r,e)}t.push(r),l(s.Comma)&&++n}return t}();return r(s.CloseParen,"Expected closing parenthesis for arguments list"),t}function Q(){const e=[];let t=!1;for(;!l(s.CloseSquareBracket);)l(s.Colon)?(e.push(void 0),++n,t=!0):(e.push(k()),l(s.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new B(...e)}return e[0]}function X(t){for(;l(s.Dot)||l(s.OpenSquareBracket);){const i=e[n];let a;++n;const o=i.type===s.OpenSquareBracket;if(o)a=Q(),r(s.CloseSquareBracket,"Expected closing square bracket");else if(a=Z(),"Identifier"!==a.type)throw new SyntaxError("Expected identifier following dot operator");t=new v(t,a,o)}return t}function J(){let t=Y();for(;l(s.MultiplicativeBinaryOperator);){const r=e[n++],s=Y();t=new A(r,t,s)}return t}function Y(){let e=function(){let e=function(){const e=X(Z());return l(s.OpenParen)?H(e):e}();for(;l(s.Pipe);){++n;let t=Z();if(!(t instanceof M))throw new SyntaxError("Expected identifier for the filter");l(s.OpenParen)&&(t=H(t)),e=new I(e,t)}return e}();for(;d("is");){++n;const t=d("not");t&&++n;const r=Z();if(!(r instanceof M))throw new SyntaxError("Expected identifier for the test");e=new O(e,t,r)}return e}function Z(){const t=e[n++];switch(t.type){case s.NumericLiteral:{const e=t.value;return e.includes(".")?new $(Number(e)):new T(Number(e))}case s.StringLiteral:{let r=t.value;for(;l(s.StringLiteral);)r+=e[n++].value;return new S(r)}case s.Identifier:return new M(t.value);case s.OpenParen:{const e=y();return r(s.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),e}case s.OpenSquareBracket:{const e=[];for(;!l(s.CloseSquareBracket);)e.push(k()),l(s.Comma)&&++n;return++n,new C(e)}case s.OpenCurlyBracket:{const e=new Map;for(;!l(s.CloseCurlyBracket);){const t=k();r(s.Colon,"Expected colon between key and value in object literal");const i=k();e.set(t,i),l(s.Comma)&&++n}return++n,new P(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(o());return t}function G(e,t,n=1){void 0===t&&(t=e,e=0);const r=[];for(let s=e;s<t;s+=n)r.push(s);return r}function q(e,t,n,r=1){const s=Math.sign(r);s>=0?(t=(t??(t=0))<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??(n=e.length))<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??(t=e.length-1))<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??(n=-1))<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const i=[];for(let a=t;s*a<s*n;a+=r)i.push(e[a]);return i}function U(e){return function(e,t){const n=new Intl.DateTimeFormat(void 0,{month:"long"}),r=new Intl.DateTimeFormat(void 0,{month:"short"}),s=e=>e<10?"0"+e:e.toString();return t.replace(/%[YmdbBHM%]/g,t=>{switch(t){case"%Y":return e.getFullYear().toString();case"%m":return s(e.getMonth()+1);case"%d":return s(e.getDate());case"%b":return r.format(e);case"%B":return n.format(e);case"%H":return s(e.getHours());case"%M":return s(e.getMinutes());case"%%":return"%";default:return t}})}(new Date,e)}var W=class extends Error{},H=class extends Error{},K=class{constructor(e=void 0){t(this,"type","RuntimeValue"),t(this,"value"),t(this,"builtins",new Map),this.value=e}__bool__(){return new Y(!!this.value)}toString(){return String(this.value)}},Q=class extends K{constructor(){super(...arguments),t(this,"type","IntegerValue")}},X=class extends K{constructor(){super(...arguments),t(this,"type","FloatValue")}toString(){return this.value%1==0?this.value.toFixed(1):this.value.toString()}},J=class extends K{constructor(){super(...arguments),t(this,"type","StringValue"),t(this,"builtins",new Map([["upper",new re(()=>new J(this.value.toUpperCase()))],["lower",new re(()=>new J(this.value.toLowerCase()))],["strip",new re(()=>new J(this.value.trim()))],["title",new re(()=>new J(this.value.replace(/\b\w/g,e=>e.toUpperCase())))],["capitalize",new re(()=>new J(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new Q(this.value.length)],["rstrip",new re(()=>new J(this.value.trimEnd()))],["lstrip",new re(()=>new J(this.value.trimStart()))],["startswith",new re(e=>{if(0===e.length)throw new Error("startswith() requires at least one argument");const t=e[0];if(t instanceof J)return new Y(this.value.startsWith(t.value));if(t instanceof te){for(const e of t.value){if(!(e instanceof J))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(e.value))return new Y(!0)}return new Y(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new re(e=>{if(0===e.length)throw new Error("endswith() requires at least one argument");const t=e[0];if(t instanceof J)return new Y(this.value.endsWith(t.value));if(t instanceof te){for(const e of t.value){if(!(e instanceof J))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(e.value))return new Y(!0)}return new Y(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new re(e=>{const t=e[0]??new se;if(!(t instanceof J||t instanceof se))throw new Error("sep argument must be a string or null");const n=e[1]??new Q(-1);if(!(n instanceof Q))throw new Error("maxsplit argument must be a number");let r=[];if(t instanceof se){const e=this.value.trimStart();for(const{0:t,index:s}of e.matchAll(/\S+/g)){if(-1!==n.value&&r.length>=n.value&&void 0!==s){r.push(t+e.slice(s+t.length));break}r.push(t)}}else{if(""===t.value)throw new Error("empty separator");r=this.value.split(t.value),-1!==n.value&&r.length>n.value&&r.push(r.splice(n.value).join(t.value))}return new te(r.map(e=>new J(e)))})],["replace",new re(e=>{if(e.length<2)throw new Error("replace() requires at least two arguments");const t=e[0],n=e[1];if(!(t instanceof J&&n instanceof J))throw new Error("replace() arguments must be strings");let r;if(r=e.length>2?"KeywordArgumentsValue"===e[2].type?e[2].value.get("count")??new se:e[2]:new se,!(r instanceof Q||r instanceof se))throw new Error("replace() count argument must be a number or null");return new J(function(e,t,n,r){if(0===r)return e;let s=null==r||r<0?1/0:r;const i=0===t.length?new RegExp("(?=)","gu"):new RegExp(t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gu");return e.replaceAll(i,e=>s>0?(--s,n):e)}(this.value,t.value,n.value,r.value))})]]))}},Y=class extends K{constructor(){super(...arguments),t(this,"type","BooleanValue")}},Z=class extends K{constructor(){super(...arguments),t(this,"type","ObjectValue"),t(this,"builtins",new Map([["get",new re(([e,t])=>{if(!(e instanceof J))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new se})],["items",new re(()=>this.items())],["keys",new re(()=>this.keys())],["values",new re(()=>this.values())]]))}__bool__(){return new Y(this.value.size>0)}items(){return new te(Array.from(this.value.entries()).map(([e,t])=>new te([new J(e),t])))}keys(){return new te(Array.from(this.value.keys()).map(e=>new J(e)))}values(){return new te(Array.from(this.value.values()))}},ee=class extends Z{constructor(){super(...arguments),t(this,"type","KeywordArgumentsValue")}},te=class extends K{constructor(){super(...arguments),t(this,"type","ArrayValue"),t(this,"builtins",new Map([["length",new Q(this.value.length)]]))}__bool__(){return new Y(this.value.length>0)}},ne=class extends te{constructor(){super(...arguments),t(this,"type","TupleValue")}},re=class extends K{constructor(){super(...arguments),t(this,"type","FunctionValue")}},se=class extends K{constructor(){super(...arguments),t(this,"type","NullValue")}},ie=class extends K{constructor(){super(...arguments),t(this,"type","UndefinedValue")}},ae=class{constructor(e){t(this,"variables",new Map([["namespace",new re(e=>{if(0===e.length)return new Z(new Map);if(1!==e.length||!(e[0]instanceof Z))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]})]])),t(this,"tests",new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof re],["odd",e=>{if(!(e instanceof Q))throw new Error(`cannot odd on ${e.type}`);return e.value%2!=0}],["even",e=>{if(!(e instanceof Q))throw new Error(`cannot even on ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>e instanceof Q||e instanceof X],["integer",e=>e instanceof Q],["iterable",e=>"ArrayValue"===e.type||"StringValue"===e.type],["mapping",e=>"ObjectValue"===e.type],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]])),this.parent=e}set(e,t){return this.declareVariable(e,le(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new ie}catch{return new ie}}};var oe=class{constructor(e){t(this,"global"),this.global=e??new ae}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case"and":return n.__bool__().value?this.evaluate(e.right,t):n;case"or":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new Y(n.value==r.value);case"!=":return new Y(n.value!=r.value)}if(n instanceof ie||r instanceof ie){if(r instanceof ie&&["in","not in"].includes(e.operator.value))return new Y("not in"===e.operator.value);throw new Error(`Cannot perform operation ${e.operator.value} on undefined values`)}if(n instanceof se||r instanceof se)throw new Error("Cannot perform operation on null values");if("~"===e.operator.value)return new J(n.value.toString()+r.value.toString());if((n instanceof Q||n instanceof X)&&(r instanceof Q||r instanceof X)){const t=n.value,s=r.value;switch(e.operator.value){case"+":case"-":case"*":{const i="+"===e.operator.value?t+s:"-"===e.operator.value?t-s:t*s;return n instanceof X||r instanceof X?new X(i):new Q(i)}case"/":return new X(t/s);case"%":{const e=t%s;return n instanceof X||r instanceof X?new X(e):new Q(e)}case"<":return new Y(t<s);case">":return new Y(t>s);case">=":return new Y(t>=s);case"<=":return new Y(t<=s)}}else if(n instanceof te&&r instanceof te){if("+"===e.operator.value)return new te(n.value.concat(r.value))}else if(r instanceof te){const t=void 0!==r.value.find(e=>e.value===n.value);switch(e.operator.value){case"in":return new Y(t);case"not in":return new Y(!t)}}if((n instanceof J||r instanceof J)&&"+"===e.operator.value)return new J(n.value.toString()+r.value.toString());if(n instanceof J&&r instanceof J)switch(e.operator.value){case"in":return new Y(r.value.includes(n.value));case"not in":return new Y(!r.value.includes(n.value))}if(n instanceof J&&r instanceof Z)switch(e.operator.value){case"in":return new Y(r.value.has(n.value));case"not in":return new Y(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateArguments(e,t){const n=[],r=new Map;for(const s of e)if("SpreadExpression"===s.type){const e=s,r=this.evaluate(e.argument,t);if(!(r instanceof te))throw new Error(`Cannot unpack non-iterable type: ${r.type}`);for(const t of r.value)n.push(t)}else if("KeywordArgumentExpression"===s.type){const e=s;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");n.push(this.evaluate(s,t))}return[n,r]}applyFilter(e,t,n){if("Identifier"===t.type){const r=t;if("tojson"===r.value)return new J(ue(e));if(e instanceof te)switch(r.value){case"list":return e;case"first":return e.value[0];case"last":return e.value[e.value.length-1];case"length":return new Q(e.value.length);case"reverse":return new te(e.value.reverse());case"sort":return new te(e.value.sort((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"IntegerValue":case"FloatValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}}));case"join":return new J(e.value.map(e=>e.value).join(""));case"string":return new J(ue(e));case"unique":{const t=new Set,n=[];for(const r of e.value)t.has(r.value)||(t.add(r.value),n.push(r));return new te(n)}default:throw new Error(`Unknown ArrayValue filter: ${r.value}`)}else if(e instanceof J)switch(r.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const t=e.builtins.get(r.value);if(t instanceof re)return t.value([],n);if(t instanceof Q)return t;throw new Error(`Unknown StringValue filter: ${r.value}`)}case"trim":return new J(e.value.trim());case"indent":return new J(e.value.split("\n").map((e,t)=>0===t||0===e.length?e:"    "+e).join("\n"));case"join":case"string":return e;case"int":{const t=parseInt(e.value,10);return new Q(isNaN(t)?0:t)}case"float":{const t=parseFloat(e.value);return new X(isNaN(t)?0:t)}default:throw new Error(`Unknown StringValue filter: ${r.value}`)}else if(e instanceof Q||e instanceof X)switch(r.value){case"abs":return e instanceof Q?new Q(Math.abs(e.value)):new X(Math.abs(e.value));case"int":return new Q(Math.floor(e.value));case"float":return new X(e.value);default:throw new Error(`Unknown NumericValue filter: ${r.value}`)}else if(e instanceof Z)switch(r.value){case"items":return new te(Array.from(e.value.entries()).map(([e,t])=>new te([new J(e),t])));case"length":return new Q(e.value.size);default:throw new Error(`Unknown ObjectValue filter: ${r.value}`)}else if(e instanceof Y)switch(r.value){case"bool":return new Y(e.value);case"int":return new Q(e.value?1:0);case"float":return new X(e.value?1:0);case"string":return new J(e.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${r.value}`)}throw new Error(`Cannot apply filter "${r.value}" to type: ${e.type}`)}if("CallExpression"===t.type){const r=t;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const s=r.callee.value;if("tojson"===s){const[,t]=this.evaluateArguments(r.args,n),s=t.get("indent")??new se;if(!(s instanceof Q||s instanceof se))throw new Error("If set, indent must be a number");return new J(ue(e,s.value))}if("join"===s){let t;if(e instanceof J)t=Array.from(e.value);else{if(!(e instanceof te))throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`);t=e.value.map(e=>e.value)}const[i,a]=this.evaluateArguments(r.args,n),o=i.at(0)??a.get("separator")??new J("");if(!(o instanceof J))throw new Error("separator must be a string");return new J(t.join(o.value))}if("int"===s||"float"===s){const[t,i]=this.evaluateArguments(r.args,n),a=t.at(0)??i.get("default")??("int"===s?new Q(0):new X(0));if(e instanceof J){const t="int"===s?parseInt(e.value,10):parseFloat(e.value);return isNaN(t)?a:"int"===s?new Q(t):new X(t)}if(e instanceof Q||e instanceof X)return e;if(e instanceof Y)return"int"===s?new Q(e.value?1:0):new X(e.value?1:0);throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`)}if("default"===s){const[t,s]=this.evaluateArguments(r.args,n),i=t[0]??new J(""),a=t[1]??s.get("boolean")??new Y(!1);if(!(a instanceof Y))throw new Error("`default` filter flag must be a boolean");return e instanceof ie||a.value&&!e.__bool__().value?i:e}if(e instanceof te){switch(s){case"selectattr":case"rejectattr":{const t="selectattr"===s;if(e.value.some(e=>!(e instanceof Z)))throw new Error(`\`${s}\` can only be applied to array of objects`);if(r.args.some(e=>"StringLiteral"!==e.type))throw new Error(`arguments of \`${s}\` must be strings`);const[i,a,o]=r.args.map(e=>this.evaluate(e,n));let l;if(a){const e=n.tests.get(a.value);if(!e)throw new Error(`Unknown test: ${a.value}`);l=e}else l=(...e)=>e[0].__bool__().value;const u=e.value.filter(e=>{const n=e.value.get(i.value),r=!!n&&l(n,o);return t?r:!r});return new te(u)}case"map":{const[,t]=this.evaluateArguments(r.args,n);if(t.has("attribute")){const n=t.get("attribute");if(!(n instanceof J))throw new Error("attribute must be a string");const r=t.get("default"),s=e.value.map(e=>{if(!(e instanceof Z))throw new Error("items in map must be an object");return e.value.get(n.value)??r??new ie});return new te(s)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${s}`)}if(e instanceof J){switch(s){case"indent":{const[t,s]=this.evaluateArguments(r.args,n),i=t.at(0)??s.get("width")??new Q(4);if(!(i instanceof Q))throw new Error("width must be a number");const a=t.at(1)??s.get("first")??new Y(!1),o=t.at(2)??s.get("blank")??new Y(!1),l=e.value.split("\n"),u=" ".repeat(i.value),d=l.map((e,t)=>!a.value&&0===t||!o.value&&0===e.length?e:u+e);return new J(d.join("\n"))}case"replace":{const t=e.builtins.get("replace");if(!(t instanceof re))throw new Error("replace filter not available");const[s,i]=this.evaluateArguments(r.args,n);return t.value([...s,new ee(i)],n)}}throw new Error(`Unknown StringValue filter: ${s}`)}throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`)}throw new Error(`Unknown filter: ${t.type}`)}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);return this.applyFilter(n,e.filter,t)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const s=r(n);return new Y(e.negate?!s:s)}evaluateSelectExpression(e,t){return this.evaluate(e.test,t).__bool__().value?this.evaluate(e.lhs,t):new ie}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new Y(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evaluateTernaryExpression(e,t){return this.evaluate(e.condition,t).__bool__().value?this.evaluate(e.trueExpr,t):this.evaluate(e.falseExpr,t)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(n+=e.toString())}return new J(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[n,r]=this.evaluateArguments(e.args,t);r.size>0&&n.push(new ee(r));const s=this.evaluate(e.callee,t);if("FunctionValue"!==s.type)throw new Error(`Cannot call something that is not a function: got ${s.type}`);return s.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof te||e instanceof J))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),s=this.evaluate(t.stop,n),i=this.evaluate(t.step,n);if(!(r instanceof Q||r instanceof ie))throw new Error("Slice start must be numeric or undefined");if(!(s instanceof Q||s instanceof ie))throw new Error("Slice stop must be numeric or undefined");if(!(i instanceof Q||i instanceof ie))throw new Error("Slice step must be numeric or undefined");return e instanceof te?new te(q(e.value,r.value,s.value,i.value)):new J(q(Array.from(e.value),r.value,s.value,i.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,s;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new J(e.property.value);if(n instanceof Z){if(!(r instanceof J))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof te||n instanceof J)if(r instanceof Q)s=n.value.at(r.value),n instanceof J&&(s=new J(n.value.at(r.value)));else{if(!(r instanceof J))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);s=n.builtins.get(r.value)}else{if(!(r instanceof J))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.builtins.get(r.value)}return s instanceof K?s:new ie}evaluateSet(e,t){const n=e.value?this.evaluate(e.value,t):this.evaluateBlock(e.body,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else if("TupleLiteral"===e.assignee.type){const r=e.assignee;if(!(n instanceof te))throw new Error(`Cannot unpack non-iterable type in set: ${n.type}`);const s=n.value;if(s.length!==r.value.length)throw new Error(`Too ${r.value.length>s.length?"few":"many"} items to unpack in set`);for(let e=0;e<r.value.length;++e){const n=r.value[e];if("Identifier"!==n.type)throw new Error(`Cannot unpack to non-identifier in set: ${n.type}`);t.setVariable(n.value,s[e])}}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,s=this.evaluate(r.object,t);if(!(s instanceof Z))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");s.value.set(r.property.value,n)}}return new se}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new ae(t);let r,s;if("SelectExpression"===e.iterable.type){const t=e.iterable;s=this.evaluate(t.lhs,n),r=t.test}else s=this.evaluate(e.iterable,n);if(!(s instanceof te||s instanceof Z))throw new Error(`Expected iterable or object type in for loop: got ${s.type}`);s instanceof Z&&(s=s.keys());const i=[],a=[];for(let d=0;d<s.value.length;++d){const t=new ae(n),o=s.value[d];let l;if("Identifier"===e.loopvar.type)l=t=>t.setVariable(e.loopvar.value,o);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==o.type)throw new Error(`Cannot unpack non-iterable type: ${o.type}`);const n=o;if(t.value.length!==n.value.length)throw new Error(`Too ${t.value.length>n.value.length?"few":"many"} items to unpack`);l=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,n.value[r])}}}}if(r){l(t);if(!this.evaluate(r,t).__bool__().value)continue}i.push(o),a.push(l)}let o="",l=!0;for(let d=0;d<i.length;++d){const t=new Map([["index",new Q(d+1)],["index0",new Q(d)],["revindex",new Q(i.length-d)],["revindex0",new Q(i.length-d-1)],["first",new Y(0===d)],["last",new Y(d===i.length-1)],["length",new Q(i.length)],["previtem",d>0?i[d-1]:new ie],["nextitem",d<i.length-1?i[d+1]:new ie]]);n.setVariable("loop",new Z(t)),a[d](n);try{o+=this.evaluateBlock(e.body,n).value}catch(u){if(u instanceof H)continue;if(u instanceof W)break;throw u}l=!1}if(l){o+=this.evaluateBlock(e.defaultBlock,n).value}return new J(o)}evaluateMacro(e,t){return t.setVariable(e.name.value,new re((t,n)=>{var r;const s=new ae(n);let i;"KeywordArgumentsValue"===(null==(r=(t=t.slice()).at(-1))?void 0:r.type)&&(i=t.pop());for(let a=0;a<e.args.length;++a){const n=e.args[a],r=t[a];if("Identifier"===n.type){const e=n;if(!r)throw new Error(`Missing positional argument: ${e.value}`);s.setVariable(e.value,r)}else{if("KeywordArgumentExpression"!==n.type)throw new Error(`Unknown argument type: ${n.type}`);{const e=n,t=r??(null==i?void 0:i.value.get(e.key.value))??this.evaluate(e.value,s);s.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,s)})),new se}evaluateCallStatement(e,t){const n=new re((t,n)=>{const r=new ae(n);if(e.callerArgs)for(let s=0;s<e.callerArgs.length;++s){const n=e.callerArgs[s];if("Identifier"!==n.type)throw new Error(`Caller parameter must be an identifier, got ${n.type}`);r.setVariable(n.value,t[s]??new ie)}return this.evaluateBlock(e.body,r)}),[r,s]=this.evaluateArguments(e.call.args,t);r.push(new ee(s));const i=this.evaluate(e.call.callee,t);if("FunctionValue"!==i.type)throw new Error(`Cannot call something that is not a function: got ${i.type}`);const a=new ae(t);return a.setVariable("caller",n),i.value(r,a)}evaluateFilterStatement(e,t){const n=this.evaluateBlock(e.body,t);return this.applyFilter(n,e.filter,t)}evaluate(e,t){if(!e)return new ie;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"CallStatement":return this.evaluateCallStatement(e,t);case"Break":throw new W;case"Continue":throw new H;case"IntegerLiteral":return new Q(e.value);case"FloatLiteral":return new X(e.value);case"StringLiteral":return new J(e.value);case"ArrayLiteral":return new te(e.value.map(e=>this.evaluate(e,t)));case"TupleLiteral":return new ne(e.value.map(e=>this.evaluate(e,t)));case"ObjectLiteral":{const n=new Map;for(const[r,s]of e.value){const e=this.evaluate(r,t);if(!(e instanceof J))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(s,t))}return new Z(n)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"FilterStatement":return this.evaluateFilterStatement(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);case"SelectExpression":return this.evaluateSelectExpression(e,t);case"Ternary":return this.evaluateTernaryExpression(e,t);case"Comment":return new se;default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function le(e){switch(typeof e){case"number":return Number.isInteger(e)?new Q(e):new X(e);case"string":return new J(e);case"boolean":return new Y(e);case"undefined":return new ie;case"object":return null===e?new se:Array.isArray(e)?new te(e.map(le)):new Z(new Map(Object.entries(e).map(([e,t])=>[e,le(t)])));case"function":return new re((t,n)=>le(e(...t.map(e=>e.value))??null));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function ue(e,t,n){const r=n??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const n=t?" ".repeat(t):"",s="\n"+n.repeat(r),i=s+n;if("ArrayValue"===e.type){const n=e.value.map(e=>ue(e,t,r+1));return t?`[${i}${n.join(`,${i}`)}${s}]`:`[${n.join(", ")}]`}{const n=Array.from(e.value.entries()).map(([e,n])=>{const s=`"${e}": ${ue(n,t,r+1)}`;return t?`${i}${s}`:s});return t?`{${n.join(",")}${s}}`:`{${n.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var de="\n";function ce(...e){return"{%- "+e.join(" ")+" -%}"}function pe(e,t,n){return e.map(e=>function(e,t,n){const r=n.repeat(t);switch(e.type){case"Program":return pe(e.body,t,n);case"If":return function(e,t,n){const r=n.repeat(t),s=[];let i=e;for(;i&&(s.push({test:i.test,body:i.body}),1===i.alternate.length&&"If"===i.alternate[0].type);)i=i.alternate[0];let a=r+ce("if",he(s[0].test))+de+pe(s[0].body,t+1,n);for(let o=1;o<s.length;++o)a+=de+r+ce("elif",he(s[o].test))+de+pe(s[o].body,t+1,n);i&&i.alternate.length>0&&(a+=de+r+ce("else")+de+pe(i.alternate,t+1,n));return a+=de+r+ce("endif"),a}(e,t,n);case"For":return function(e,t,n){const r=n.repeat(t);let s="";if("SelectExpression"===e.iterable.type){const t=e.iterable;s=`${he(t.lhs)} if ${he(t.test)}`}else s=he(e.iterable);let i=r+ce("for",he(e.loopvar),"in",s)+de+pe(e.body,t+1,n);e.defaultBlock.length>0&&(i+=de+r+ce("else")+de+pe(e.defaultBlock,t+1,n));return i+=de+r+ce("endfor"),i}(e,t,n);case"Set":return function(e,t,n){const r=n.repeat(t),s=he(e.assignee),i=e.value?he(e.value):"",a=r+ce("set",`${s}${e.value?" = "+i:""}`);if(0===e.body.length)return a;return a+de+pe(e.body,t+1,n)+de+r+ce("endset")}(e,t,n);case"Macro":return function(e,t,n){const r=n.repeat(t),s=e.args.map(he).join(", ");return r+ce("macro",`${e.name.value}(${s})`)+de+pe(e.body,t+1,n)+de+r+ce("endmacro")}(e,t,n);case"Break":return r+ce("break");case"Continue":return r+ce("continue");case"CallStatement":return function(e,t,n){const r=n.repeat(t),s=e.callerArgs&&e.callerArgs.length>0?`(${e.callerArgs.map(he).join(", ")})`:"",i=he(e.call);let a=r+ce(`call${s}`,i)+de;return a+=pe(e.body,t+1,n)+de,a+=r+ce("endcall"),a}(e,t,n);case"FilterStatement":return function(e,t,n){const r=n.repeat(t),s="Identifier"===e.filter.type?e.filter.value:he(e.filter);let i=r+ce("filter",s)+de;return i+=pe(e.body,t+1,n)+de,i+=r+ce("endfilter"),i}(e,t,n);case"Comment":return r+"{# "+e.value+" #}";default:return r+"{{- "+he(e)+" -}}"}}(e,t,n)).join(de)}function he(e,t=-1){switch(e.type){case"SpreadExpression":return`*${he(e.argument)}`;case"Identifier":return e.value;case"IntegerLiteral":case"FloatLiteral":return`${e.value}`;case"StringLiteral":return JSON.stringify(e.value);case"BinaryExpression":{const n=e,r=function(e){switch(e.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return"and"===e.operator.value?1:"in"===e.operator.value||"not in"===e.operator.value?2:0}return 0}(n),s=he(n.left,r),i=he(n.right,r+1),a=`${s} ${n.operator.value} ${i}`;return r<t?`(${a})`:a}case"UnaryExpression":{const t=e;return t.operator.value+("not"===t.operator.value?" ":"")+he(t.argument,1/0)}case"CallExpression":{const t=e,n=t.args.map(he).join(", ");return`${he(t.callee)}(${n})`}case"MemberExpression":{const t=e;let n=he(t.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(t.object.type)||(n=`(${n})`);let r=he(t.property);return t.computed||"Identifier"===t.property.type||(r=`(${r})`),t.computed?`${n}[${r}]`:`${n}.${r}`}case"FilterExpression":{const t=e,n=he(t.operand,1/0);return"CallExpression"===t.filter.type?`${n} | ${he(t.filter)}`:`${n} | ${t.filter.value}`}case"SelectExpression":{const t=e;return`${he(t.lhs)} if ${he(t.test)}`}case"TestExpression":{const t=e;return`${he(t.operand)} is${t.negate?" not":""} ${t.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const t=e.value.map(he),n="ArrayLiteral"===e.type?"[]":"()";return`${n[0]}${t.join(", ")}${n[1]}`}case"ObjectLiteral":return`{${Array.from(e.value.entries()).map(([e,t])=>`${he(e)}: ${he(t)}`).join(", ")}}`;case"SliceExpression":{const t=e;return`${t.start?he(t.start):""}:${t.stop?he(t.stop):""}${t.step?`:${he(t.step)}`:""}`}case"KeywordArgumentExpression":{const t=e;return`${t.key.value}=${he(t.value)}`}case"Ternary":{const n=e,r=`${he(n.trueExpr)} if ${he(n.condition,0)} else ${he(n.falseExpr)}`;return t>-1?`(${r})`:r}default:throw new Error(`Unknown expression type: ${e.type}`)}}var me=class{constructor(e){t(this,"parsed");const n=d(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=V(n)}render(e){const t=new ae;if(function(e){e.set("false",!1),e.set("true",!0),e.set("none",null),e.set("raise_exception",e=>{throw new Error(e)}),e.set("range",G),e.set("strftime_now",U),e.set("True",!0),e.set("False",!1),e.set("None",null)}(t),e)for(const[n,r]of Object.entries(e))t.set(n,r);return new oe(t).run(this.parsed).value}format(e){return function(e,t="\t"){const n="number"==typeof t?" ".repeat(t):t;return pe(e.body,0,n).replace(/\n$/,"")}(this.parsed,(null==e?void 0:e.indent)||"\t")}}},"./src/backends/onnx.js":
/*!******************************!*\
      !*** ./src/backends/onnx.js ***!
      \******************************/(e,t,n)=>{var r;n.r(t),n.d(t,{Tensor:()=>o.Tensor,createInferenceSession:()=>_,deviceToExecutionProviders:()=>m,isONNXProxy:()=>b,isONNXTensor:()=>g});var s=n(
/*! ../env.js */
"./src/env.js"),i=n(
/*! onnxruntime-node */
"?2ce3"),a=n(
/*! onnxruntime-web */
"onnxruntime-web"),o=n(
/*! onnxruntime-common */
"onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),u=[];let d,c;const p=Symbol.for("onnxruntime");if(p in globalThis)c=globalThis[p];else if(s.apis.IS_NODE_ENV){switch(c=i??(r||(r=n.t(i,2))),process.platform){case"win32":u.push("dml");break;case"linux":"x64"===process.arch&&u.push("cuda")}u.push("cpu"),d=["cpu"]}else c=a,s.apis.IS_WEBNN_AVAILABLE&&u.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),s.apis.IS_WEBGPU_AVAILABLE&&u.push("webgpu"),u.push("wasm"),d=["wasm"];const h=c.InferenceSession;function m(e=null){if(!e)return d;switch(e){case"auto":return u;case"gpu":return u.filter(e=>["webgpu","cuda","dml","webnn-gpu"].includes(e))}if(u.includes(e))return[l[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${u.join(", ")}.`)}let f=null;async function _(e,t,n){f&&await f;const r=h.create(e,t);f??(f=r);const s=await r;return s.config=n,s}function g(e){return e instanceof c.Tensor}const w=null==c?void 0:c.env;function b(){var e;return null==(e=null==w?void 0:w.wasm)?void 0:e.proxy}(null==w?void 0:w.wasm)&&("undefined"!=typeof ServiceWorkerGlobalScope&&self instanceof ServiceWorkerGlobalScope||w.wasm.wasmPaths||(w.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${s.env.version}/dist/`),w.wasm.proxy=!1),(null==w?void 0:w.webgpu)&&(w.webgpu.powerPreference="high-performance"),s.env.backends.onnx=w},"./src/base/feature_extraction_utils.js":
/*!**********************************************!*\
      !*** ./src/base/feature_extraction_utils.js ***!
      \**********************************************/(e,t,n)=>{n.r(t),n.d(t,{FeatureExtractor:()=>a,validate_audio_inputs:()=>o});var r=n(
/*! ../utils/constants.js */
"./src/utils/constants.js"),s=n(
/*! ../utils/generic.js */
"./src/utils/generic.js"),i=n(
/*! ../utils/hub.js */
"./src/utils/hub.js");class a extends s.Callable{constructor(e){super(),this.config=e}static async from_pretrained(e,t={}){return new this(await(0,i.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t))}}function o(e,t){var n;if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${(null==(n=null==e?void 0:e.constructor)?void 0:n.name)??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":
/*!********************************************!*\
      !*** ./src/base/image_processors_utils.js ***!
      \********************************************/(e,t,n)=>{n.r(t),n.d(t,{ImageProcessor:()=>b,center_to_corners_format:()=>c,post_process_instance_segmentation:()=>w,post_process_object_detection:()=>p,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>h});var r=n(
/*! ../utils/generic.js */
"./src/utils/generic.js"),s=n(
/*! ../utils/tensor.js */
"./src/utils/tensor.js"),i=n(
/*! ../utils/maths.js */
"./src/utils/maths.js");n(
/*! ../utils/image.js */
"./src/utils/image.js");var a=n(
/*! ../utils/core.js */
"./src/utils/core.js"),o=n(
/*! ../utils/hub.js */
"./src/utils/hub.js"),l=n(
/*! ../utils/constants.js */
"./src/utils/constants.js");function u(e,t,n=0,r=null){const s=e/t;let a=(0,i.bankers_round)(s)*t;return null!==r&&a>r&&(a=Math.floor(s)*t),a<n&&(a=Math.ceil(s)*t),a}function d([e,t],n){return[Math.max(Math.floor(e/n),1)*n,Math.max(Math.floor(t/n),1)*n]}function c([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function p(e,t=.5,n=null,r=!1){const s=e.logits,a=e.pred_boxes,[o,l,u]=s.dims;if(null!==n&&n.length!==o)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let d=[];for(let p=0;p<o;++p){let e=null!==n?n[p]:null,o={boxes:[],classes:[],scores:[]},h=s[p],m=a[p];for(let n=0;n<l;++n){let s,a=h[n],l=[];if(r){s=a.sigmoid().data;for(let e=0;e<s.length;++e)s[e]>t&&l.push(e)}else{let e=(0,i.max)(a.data)[1];if(e===u-1)continue;if(s=(0,i.softmax)(a.data),s[e]<t)continue;l.push(e)}for(const t of l){let r=m[n].data;r=c(r),null!==e&&(r=r.map((t,n)=>t*e[(n+1)%2])),o.boxes.push(r),o.classes.push(t),o.scores.push(s[t])}}d.push(o)}return d}function h(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const i=[];for(let a=0;a<r;++a){const e=null!==t?t[a]:null;let r=n[a];null!==e&&(r=(0,s.interpolate)(r,e,"bilinear",!1));const[o,l]=e??r.dims.slice(-2),u=new s.Tensor("int32",new Int32Array(o*l),[o,l]),d=r[0].data,c=u.data;for(let t=1;t<r.dims[0];++t){const e=r[t].data;for(let n=0;n<e.length;++n)e[n]>d[n]&&(d[n]=e[n],c[n]=t)}const p=new Array(r.dims[0]);for(let t=0;t<c.length;++t){const e=c[t];p[e]=e}const h=p.filter(e=>void 0!==e);i.push({segmentation:u,labels:h})}return i}function m(e,t,n,r){const s=[],a=[],o=[];for(let l=0;l<e.dims[0];++l){const u=e[l],d=t[l],c=(0,i.max)(u.data)[1];if(c===r)continue;const p=(0,i.softmax)(u.data)[c];p>n&&(s.push(d),a.push(p),o.push(c))}return[s,a,o]}function f(e,t,n,r=.5,s=.8){const i=[];let a=0,o=0;const l=t[n].data;for(let d=0;d<e.length;++d)e[d]===n&&(i.push(d),++a),l[d]>=r&&++o;let u=a>0&&o>0;if(u){u=a/o>s}return[u,i]}function _(e,t,n,r,i,a=null,o=null){const[l,u]=o??e[0].dims,d=new s.Tensor("int32",new Int32Array(l*u),[l,u]),c=[];if(null!==o)for(let f=0;f<e.length;++f)e[f]=(0,s.interpolate)(e[f],o,"bilinear",!1);const p=new Int32Array(e[0].data.length),h=new Float32Array(e[0].data.length);for(let s=0;s<e.length;++s){let n=t[s];const r=e[s].data;for(let e=0;e<r.length;++e)r[e]*=n,r[e]>h[e]&&(p[e]=s,h[e]=r[e])}let m=0;const _=d.data;for(let s=0;s<n.length;++s){const a=n[s],[o,l]=f(p,e,s,r,i);if(o){++m;for(const e of l)_[e]=m;c.push({id:m,label_id:a,score:t[s]})}}return[d,c]}function g(e,t=.5,n=.5,r=.8,i=null,a=null){null===i&&(i=new Set);const o=e.class_queries_logits??e.logits,l=(e.masks_queries_logits??e.pred_masks).sigmoid();let[u,d,c]=o.dims;if(c-=1,null!==a&&a.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let p=[];for(let h=0;h<u;++h){let e=null!==a?a[h]:null,u=o[h],d=l[h],[f,g,w]=m(u,d,t,c);if(0===w.length){let[t,n]=e??d.dims.slice(-2),r=new s.Tensor("int32",new Int32Array(t*n).fill(-1),[t,n]);p.push({segmentation:r,segments_info:[]});continue}let[b,y]=_(f,g,w,n,r,i,e);p.push({segmentation:b,segments_info:y})}return p}function w(e,t=.5,n=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class b extends r.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??void 0!==this.size,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.min_pixels=e.min_pixels,this.max_pixels=e.max_pixels,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,t,n=2){const r=e.height,s=e.width,i=t.height,a=t.width;let o=Math.min(r,i),l=Math.min(s,a);return o===r&&l===s?e:(r>s?l=Math.floor(s*o/r):s>r&&(o=Math.floor(r*l/s)),await e.resize(l,o,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=(0,i.min)(n.data)[0],s=(0,i.max)(n.data)[0]-r;if(0===s)return e;const a=t/255;let o=n.width,l=n.height,u=0,d=0;const c=n.data;for(let i=0;i<n.height;++i){const e=i*n.width;for(let t=0;t<n.width;++t)(c[e+t]-r)/s<a&&(o=Math.min(o,t),l=Math.min(l,i),u=Math.max(u,t),d=Math.max(d,i))}return e=await e.crop([o,l,u,d])}pad_image(e,t,n,{mode:r="constant",center:s=!1,constant_values:i=0}={}){const[o,l,u]=t;let d,c;if("number"==typeof n?(d=n,c=n):"square"===n?d=c=Math.max(o,l):(d=n.width,c=n.height),d!==l||c!==o){const n=new Float32Array(d*c*u);if(Array.isArray(i))for(let e=0;e<n.length;++e)n[e]=i[e%u];else 0!==i&&n.fill(i);const[p,h]=s?[Math.floor((d-l)/2),Math.floor((c-o)/2)]:[0,0];for(let t=0;t<o;++t){const r=(t+h)*d,s=t*l;for(let t=0;t<l;++t){const i=(r+t+p)*u,a=(s+t)*u;for(let t=0;t<u;++t)n[i+t]=e[a+t]}}if("symmetric"===r){if(s)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=o-1,r=l-1;for(let s=0;s<c;++s){const i=s*d,c=(0,a.calculateReflectOffset)(s,t)*l;for(let t=0;t<d;++t){if(s<o&&t<l)continue;const d=(i+t)*u,p=(c+(0,a.calculateReflectOffset)(t,r))*u;for(let t=0;t<u;++t)n[d+t]=e[p+t]}}}e=n,t=[c,d,u]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let s,i;if(this.do_thumbnail){const{height:e,width:n}=t;s=Math.min(e,n)}else Number.isInteger(t)?(s=t,i=this.config.max_size??s):void 0!==t&&(s=t.shortest_edge,i=t.longest_edge);if(void 0!==s||void 0!==i){const e=void 0===s?1:Math.max(s/n,s/r),t=n*e,a=r*e,o=void 0===i?1:Math.min(i/t,i/a);let l=Math.floor(Number((t*o).toFixed(2))),u=Math.floor(Number((a*o).toFixed(2)));return void 0!==this.size_divisibility&&([l,u]=d([l,u],this.size_divisibility)),[l,u]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,s=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=s/r,i=e/n;Math.abs(1-i)<Math.abs(1-t)?t=i:i=t,s=u(t*r,this.config.ensure_multiple_of),e=u(i*n,this.config.ensure_multiple_of)}return[e,s]}if(void 0!==this.size_divisibility)return d([n,r],this.size_divisibility);if(void 0!==this.min_pixels&&void 0!==this.max_pixels){return function(e,t,n=28,r=3136,s=1003520){if(e<n||t<n)throw new Error(`height:${e} or width:${t} must be larger than factor:${n}`);if(Math.max(e,t)/Math.min(e,t)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(e,t)/Math.min(e,t));let i=Math.round(e/n)*n,a=Math.round(t/n)*n;if(i*a>s){const r=Math.sqrt(e*t/s);i=Math.floor(e/r/n)*n,a=Math.floor(t/r/n)*n}else if(i*a<r){const s=Math.sqrt(r/(e*t));i=Math.ceil(e*s/n)*n,a=Math.ceil(t*s/n)*n}return[i,a]}(r,n,this.config.patch_size*this.config.merge_size,this.min_pixels,this.max_pixels)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:i=null,do_flip_channel_order:a=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[o,l]=e.size;if(r??this.do_convert_rgb?e=e.rgb():i&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const u=[e.height,e.width];let c=Float32Array.from(e.data),p=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(c),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<c.length;r+=e.channels)for(let s=0;s<e.channels;++s)c[r+s]=(c[r+s]-t[s])/n[s]}if(n??this.do_pad)if(this.pad_size){const t=this.pad_image(c,[e.height,e.width,e.channels],this.pad_size);[c,p]=t}else if(this.size_divisibility){const[e,t]=d([p[1],p[0]],this.size_divisibility);[c,p]=this.pad_image(c,p,{width:e,height:t})}if(a??this.do_flip_channel_order){if(3!==p[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<c.length;e+=3){const t=c[e];c[e]=c[e+2],c[e+2]=t}}return{original_size:[l,o],reshaped_input_size:u,pixel_values:new s.Tensor("float32",c,p).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const n=await Promise.all(e.map(e=>this.preprocess(e)));return{pixel_values:(0,s.stack)(n.map(e=>e.pixel_values),0),original_sizes:n.map(e=>e.original_size),reshaped_input_sizes:n.map(e=>e.reshaped_input_size)}}static async from_pretrained(e,t={}){return new this(await(0,o.getModelJSON)(e,l.IMAGE_PROCESSOR_NAME,!0,t))}}},"./src/base/processing_utils.js":
/*!**************************************!*\
      !*** ./src/base/processing_utils.js ***!
      \**************************************/(e,n,r)=>{r.r(n),r.d(n,{Processor:()=>o});var s=r(
/*! ../utils/constants.js */
"./src/utils/constants.js"),i=r(
/*! ../utils/generic.js */
"./src/utils/generic.js"),a=r(
/*! ../utils/hub.js */
"./src/utils/hub.js");class o extends i.Callable{constructor(e,t,n){super(),this.config=e,this.components=t,this.chat_template=n}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(e,t={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(e,{tokenize:!1,chat_template:this.chat_template??void 0,...t})}batch_decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...e)}decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...e)}async _call(e,...t){for(const n of[this.image_processor,this.feature_extractor,this.tokenizer])if(n)return n(e,...t);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(e,t={}){const[n,r,i]=await Promise.all([this.uses_processor_config?(0,a.getModelJSON)(e,s.PROCESSOR_NAME,!0,t):{},Promise.all(this.classes.filter(e=>e in this).map(async n=>{const r=await this[n].from_pretrained(e,t);return[n.replace(/_class$/,""),r]})).then(Object.fromEntries),this.uses_chat_template_file?(0,a.getModelText)(e,s.CHAT_TEMPLATE_NAME,!0,t):null]);return new this(n,r,i)}}t(o,"classes",["image_processor_class","tokenizer_class","feature_extractor_class"]),t(o,"uses_processor_config",!1),t(o,"uses_chat_template_file",!1)},"./src/configs.js":
/*!************************!*\
      !*** ./src/configs.js ***!
      \************************/(e,n,r)=>{r.r(n),r.d(n,{AutoConfig:()=>u,PretrainedConfig:()=>l,getCacheShapes:()=>o});var s=r(
/*! ./utils/core.js */
"./src/utils/core.js"),i=r(
/*! ./utils/hub.js */
"./src/utils/hub.js");function a(e){const t={};let n={};switch(e.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":n=a(e.text_config);break;case"moondream1":n=a(e.phi_config);break;case"musicgen":n=a(e.decoder);break;case"multi_modality":n=a(e.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads",t.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"exaone":t.num_heads="num_key_value_heads",t.num_layers="num_layers",t.dim_kv="head_dim",t.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"moonshine":t.num_decoder_layers="decoder_num_hidden_layers",t.num_decoder_heads="decoder_num_key_value_heads",t.num_encoder_layers="encoder_num_hidden_layers",t.num_encoder_heads="encoder_num_key_value_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const r=a(e.decoder),i="num_decoder_layers"in r,o=(0,s.pick)(e,["model_type","is_encoder_decoder"]);return i?(o.num_decoder_layers=r.num_decoder_layers,o.num_decoder_heads=r.num_decoder_heads,o.decoder_hidden_size=r.decoder_hidden_size,o.num_encoder_layers=r.num_encoder_layers,o.num_encoder_heads=r.num_encoder_heads,o.encoder_hidden_size=r.encoder_hidden_size):(o.num_layers=r.num_layers,o.num_heads=r.num_heads,o.hidden_size=r.hidden_size),o}const r={...n,...(0,s.pick)(e,["model_type","multi_query","is_encoder_decoder"])};for(const s in t)r[s]=e[t[s]];return r}function o(e,t){if("lfm2"===e.model_type){const n=(null==t?void 0:t.prefix)??"past_key_values",r="present"===n?"present":"past",s={},{layer_types:i,num_attention_heads:a,num_key_value_heads:o,hidden_size:l,conv_L_cache:u}=e,d=l/a,c=(null==t?void 0:t.batch_size)??1;for(let e=0;e<i.length;++e)if("full_attention"===i[e])for(const t of["key","value"])s[`${n}.${e}.${t}`]=[c,o,0,d];else{if("conv"!==i[e])throw new Error(`Unsupported layer type: ${i[e]}`);s[`${r}_conv.${e}`]=[c,l,u]}return s}return function(e,{prefix:t="past_key_values",batch_size:n=1}={}){const r={},s=e.normalized_config;if(s.is_encoder_decoder&&"num_encoder_heads"in s&&"num_decoder_heads"in s){const e=s.encoder_dim_kv??s.encoder_hidden_size/s.num_encoder_heads,i=s.decoder_dim_kv??s.decoder_hidden_size/s.num_decoder_heads,a=[n,s.num_encoder_heads,0,e],o=[n,s.num_decoder_heads,0,i];for(let n=0;n<s.num_decoder_layers;++n)r[`${t}.${n}.encoder.key`]=a,r[`${t}.${n}.encoder.value`]=a,r[`${t}.${n}.decoder.key`]=o,r[`${t}.${n}.decoder.value`]=o}else{const e=s.num_heads,i=s.num_layers,a=s.dim_kv??s.hidden_size/(s.num_attention_heads??e);if("falcon"===s.model_type){const s=[n*e,0,a];for(let e=0;e<i;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}else if(s.multi_query){const s=[n*e,0,2*a];for(let e=0;e<i;++e)r[`${t}.${e}.key_value`]=s}else if("bloom"===s.model_type){const s=[n*e,a,0],o=[n*e,0,a];for(let e=0;e<i;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=o}else if("openelm"===s.model_type)for(let s=0;s<i;++s){const i=[n,e[s],0,a];r[`${t}.${s}.key`]=i,r[`${t}.${s}.value`]=i}else{const s=[n,e,0,a];for(let e=0;e<i;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}}return r}(e,t)}class l{constructor(e){t(this,"model_type",null),t(this,"is_encoder_decoder",!1),t(this,"max_position_embeddings"),t(this,"transformers.js_config"),Object.assign(this,e),this.normalized_config=a(this)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:a="main"}={}){!n||n instanceof l||(n=new l(n));const o=n??await async function(e,t){return await(0,i.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:a});return new this(o)}}class u{static async from_pretrained(...e){return l.from_pretrained(...e)}}},"./src/env.js":
/*!********************!*\
      !*** ./src/env.js ***!
      \********************/(e,t,n)=>{var r,s;n.r(t),n.d(t,{apis:()=>w,env:()=>M});var i=n(
/*! node:fs */
"?db59"),a=n(
/*! node:path */
"?383f"),o=n(
/*! node:url */
"?fa4b");const l="undefined"!=typeof window&&void 0!==window.document,u="undefined"!=typeof self&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes(null==(r=self.constructor)?void 0:r.name),d="undefined"!=typeof self&&"caches"in self,c="undefined"!=typeof navigator&&"gpu"in navigator,p="undefined"!=typeof navigator&&"ml"in navigator,h="undefined"!=typeof process,m=h&&"node"===(null==(s=null==process?void 0:process.release)?void 0:s.name),f=!k(i),_=!k(a),g=void 0!==globalThis.Deno,w=Object.freeze({IS_BROWSER_ENV:l,IS_WEBWORKER_ENV:u,IS_WEB_CACHE_AVAILABLE:d,IS_WEBGPU_AVAILABLE:c,IS_WEBNN_AVAILABLE:p,IS_PROCESS_AVAILABLE:h,IS_NODE_ENV:m,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:_}),b=f&&_;let y="./";if(b){const e=Object(import.meta).url;e?y=a.dirname(a.dirname(o.fileURLToPath(e))):"undefined"!=typeof __dirname&&(y=a.dirname(__dirname))}const v=b?a.join(y,"/.cache/"):null,x="/models/",M={version:"3.7.2",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(l||u),localModelPath:b?a.join(y,x):x,useFS:f,useBrowserCache:d&&!g,useFSCache:f,cacheDir:v,useCustomCache:!1,customCache:null};function k(e){return 0===Object.keys(e).length}},"./src/generation/configuration_utils.js":
/*!***********************************************!*\
      !*** ./src/generation/configuration_utils.js ***!
      \***********************************************/(e,n,r)=>{r.r(n),r.d(n,{GenerationConfig:()=>i});var s=r(
/*! ../utils/core.js */
"./src/utils/core.js");class i{constructor(e){t(this,"max_length",20),t(this,"max_new_tokens",null),t(this,"min_length",0),t(this,"min_new_tokens",null),t(this,"early_stopping",!1),t(this,"max_time",null),t(this,"do_sample",!1),t(this,"num_beams",1),t(this,"num_beam_groups",1),t(this,"penalty_alpha",null),t(this,"use_cache",!0),t(this,"temperature",1),t(this,"top_k",50),t(this,"top_p",1),t(this,"typical_p",1),t(this,"epsilon_cutoff",0),t(this,"eta_cutoff",0),t(this,"diversity_penalty",0),t(this,"repetition_penalty",1),t(this,"encoder_repetition_penalty",1),t(this,"length_penalty",1),t(this,"no_repeat_ngram_size",0),t(this,"bad_words_ids",null),t(this,"force_words_ids",null),t(this,"renormalize_logits",!1),t(this,"constraints",null),t(this,"forced_bos_token_id",null),t(this,"forced_eos_token_id",null),t(this,"remove_invalid_values",!1),t(this,"exponential_decay_length_penalty",null),t(this,"suppress_tokens",null),t(this,"streamer",null),t(this,"begin_suppress_tokens",null),t(this,"forced_decoder_ids",null),t(this,"guidance_scale",null),t(this,"num_return_sequences",1),t(this,"output_attentions",!1),t(this,"output_hidden_states",!1),t(this,"output_scores",!1),t(this,"return_dict_in_generate",!1),t(this,"pad_token_id",null),t(this,"bos_token_id",null),t(this,"eos_token_id",null),t(this,"encoder_no_repeat_ngram_size",0),t(this,"decoder_start_token_id",null),t(this,"generation_kwargs",{}),Object.assign(this,(0,s.pick)(e,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":
/*!******************************************!*\
      !*** ./src/generation/logits_process.js ***!
      \******************************************/(e,t,n)=>{n.r(t),n.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>g,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>u,LogitsProcessor:()=>i,LogitsProcessorList:()=>o,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>m,MinNewTokensLengthLogitsProcessor:()=>f,NoBadWordsLogitsProcessor:()=>_,NoRepeatNGramLogitsProcessor:()=>p,RepetitionPenaltyLogitsProcessor:()=>h,SuppressTokensAtBeginLogitsProcessor:()=>d,TemperatureLogitsWarper:()=>w,TopKLogitsWarper:()=>y,TopPLogitsWarper:()=>b,WhisperTimeStampLogitsProcessor:()=>c});var r=n(
/*! ../utils/generic.js */
"./src/utils/generic.js");n(
/*! ../utils/tensor.js */
"./src/utils/tensor.js");var s=n(
/*! ../utils/maths.js */
"./src/utils/maths.js");class i extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class o extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const r of this.processors)n=r(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class l extends i{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class u extends i{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class d extends i{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class c extends i{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const i=e[n].slice(this.begin_index),a=i.length>=1&&i[i.length-1]>=this.timestamp_begin,o=i.length<2||i[i.length-2]>=this.timestamp_begin;if(a&&(o?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,s.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce((e,t)=>e+t))>(0,s.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class p extends i{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let s=0;s<t+1-this.no_repeat_ngram_size;++s){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[s+n]);n.push(t.map(Number))}const r=new Map;for(const s of n){const e=s.slice(0,s.length-1),t=JSON.stringify(e),n=r.get(t)??[];n.push(s[s.length-1]),r.set(t,n)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=this.calcBannedNgramTokens(e[n]);for(const e of s)r[e]=-1/0}return t}}class h extends i{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;for(const t of new Set(e[n])){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class m extends i{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class f extends i{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n){if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class _ extends i{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=e[n];for(const e of this.bad_words_ids){if(s.length<e.length-1)continue;let t=!0;for(let n=1;n<=e.length-1;++n)if(e.at(-n-1)!=s.at(-n)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class g extends i{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),s=t.slice([n,t.dims[0]],null);for(let i=0;i<s.data.length;++i)s.data[i]+=(r.data[i]-s.data[i])*this.guidance_scale;return s}}class w extends a{constructor(e){super(),this.temperature=e}_call(e,t){const n=t.data;for(let r=0;r<n.length;++r)n[r]/=this.temperature;return t}}class b extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class y extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}},"./src/generation/logits_sampler.js":
/*!******************************************!*\
      !*** ./src/generation/logits_sampler.js ***!
      \******************************************/(e,t,n)=>{n.r(t),n.d(t,{LogitsSampler:()=>a});var r=n(
/*! ../utils/generic.js */
"./src/utils/generic.js"),s=n(
/*! ../utils/tensor.js */
"./src/utils/tensor.js"),i=n(
/*! ../utils/maths.js */
"./src/utils/maths.js");n(
/*! ../generation/configuration_utils.js */
"./src/generation/configuration_utils.js");class a extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let r=0;r<e.length;++r)t+=e[r];let n=Math.random()*t;for(let r=0;r<e.length;++r)if(n-=e[r],n<=0)return r;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new u(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new o(e)}}class o extends a{async sample(e){const t=(0,i.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),a=(0,i.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},()=>{const e=this.randomSelect(a);return[r.data[e],Math.log(a[e])]})}}class u extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),a=(0,i.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},(e,t)=>[r.data[t],Math.log(a[t])])}}},"./src/generation/stopping_criteria.js":
/*!*********************************************!*\
      !*** ./src/generation/stopping_criteria.js ***!
      \*********************************************/(e,t,n)=>{n.r(t),n.d(t,{EosTokenCriteria:()=>o,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>s,StoppingCriteriaList:()=>i});var r=n(
/*! ../utils/generic.js */
"./src/utils/generic.js");class s extends r.Callable{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class i extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof i?e=e.criteria:e instanceof s&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const s=r(e,t);for(let e=0;e<n.length;++e)n[e]||(n[e]=s[e])}return n}[Symbol.iterator](){return this.criteria.values()}}class a extends s{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map(e=>e.length>=this.max_length)}}class o extends s{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map(e=>{const t=e.at(-1);return this.eos_token_id.some(e=>t==e)})}}class l extends s{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},"./src/generation/streamers.js":
/*!*************************************!*\
      !*** ./src/generation/streamers.js ***!
      \*************************************/(e,t,n)=>{n.r(t),n.d(t,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>u});var r=n(
/*! ../utils/core.js */
"./src/utils/core.js"),s=n(
/*! ../tokenizers.js */
"./src/tokenizers.js"),i=n(
/*! ../env.js */
"./src/env.js");class a{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const o=i.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>{};class l extends a{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,skip_special_tokens:s=!0,decode_kwargs:i={},...a}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=n??o,this.token_callback_function=r,this.decode_kwargs={skip_special_tokens:s,...i,...a},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){var t;if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const n=this.next_tokens_are_prompt;if(n&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const i=e[0];null==(t=this.token_callback_function)||t.call(this,i),this.token_cache=(0,r.mergeArrays)(this.token_cache,i);const a=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let o;n||a.endsWith("\n")?(o=a.slice(this.print_len),this.token_cache=[],this.print_len=0):a.length>0&&(0,s.is_chinese_char)(a.charCodeAt(a.length-1))?(o=a.slice(this.print_len),this.print_len+=o.length):(o=a.slice(this.print_len,a.lastIndexOf(" ")+1),this.print_len+=o.length),this.on_finalized_text(o,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e="";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){var n,r;e.length>0&&(null==(n=this.callback_function)||n.call(this,e)),t&&this.callback_function===o&&i.apis.IS_PROCESS_AVAILABLE&&(null==(r=this.callback_function)||r.call(this,"\n"))}}class u extends l{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,on_chunk_start:s=null,on_chunk_end:i=null,on_finalize:a=null,time_precision:o=.02,skip_special_tokens:l=!0,decode_kwargs:u={}}={}){super(e,{skip_prompt:t,skip_special_tokens:l,callback_function:n,token_callback_function:r,decode_kwargs:u}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=s,this.on_chunk_end=i,this.on_finalize=a,this.time_precision=o,this.waiting_for_timestamp=!1}put(e){var t,n,r;if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const s=e[0];if(1===s.length){const e=Number(s[0])-this.timestamp_begin;if(e>=0){const i=e*this.time_precision;return this.waiting_for_timestamp?null==(t=this.on_chunk_end)||t.call(this,i):null==(n=this.on_chunk_start)||n.call(this,i),this.waiting_for_timestamp=!this.waiting_for_timestamp,void(null==(r=this.token_callback_function)||r.call(this,s))}}return super.put(e)}end(){var e;super.end(),null==(e=this.on_finalize)||e.call(this)}}},"./src/models.js":
/*!***********************!*\
      !*** ./src/models.js ***!
      \***********************/(e,n,r)=>{r.r(n),r.d(n,{ASTForAudioClassification:()=>On,ASTModel:()=>Fn,ASTPreTrainedModel:()=>zn,AlbertForMaskedLM:()=>Gt,AlbertForQuestionAnswering:()=>Vt,AlbertForSequenceClassification:()=>Rt,AlbertModel:()=>jt,AlbertPreTrainedModel:()=>Nt,ArceeForCausalLM:()=>Jr,ArceeModel:()=>Xr,ArceePreTrainedModel:()=>Qr,AutoModel:()=>Od,AutoModelForAudioClassification:()=>ec,AutoModelForAudioFrameClassification:()=>nc,AutoModelForAudioTextToText:()=>cc,AutoModelForCTC:()=>Zd,AutoModelForCausalLM:()=>Vd,AutoModelForDepthEstimation:()=>ac,AutoModelForDocumentQuestionAnswering:()=>rc,AutoModelForImageClassification:()=>Wd,AutoModelForImageFeatureExtraction:()=>uc,AutoModelForImageMatting:()=>sc,AutoModelForImageSegmentation:()=>Hd,AutoModelForImageTextToText:()=>dc,AutoModelForImageToImage:()=>ic,AutoModelForMaskGeneration:()=>Yd,AutoModelForMaskedLM:()=>Gd,AutoModelForNormalEstimation:()=>oc,AutoModelForObjectDetection:()=>Xd,AutoModelForPoseEstimation:()=>lc,AutoModelForQuestionAnswering:()=>qd,AutoModelForSemanticSegmentation:()=>Kd,AutoModelForSeq2SeqLM:()=>Dd,AutoModelForSequenceClassification:()=>Ld,AutoModelForSpeechSeq2Seq:()=>Nd,AutoModelForTextToSpectrogram:()=>jd,AutoModelForTextToWaveform:()=>Rd,AutoModelForTokenClassification:()=>Bd,AutoModelForUniversalSegmentation:()=>Qd,AutoModelForVision2Seq:()=>Ud,AutoModelForXVector:()=>tc,AutoModelForZeroShotObjectDetection:()=>Jd,BartForConditionalGeneration:()=>tn,BartForSequenceClassification:()=>nn,BartModel:()=>en,BartPretrainedModel:()=>Zt,BaseModelOutput:()=>oe,BeitForImageClassification:()=>Wi,BeitModel:()=>Ui,BeitPreTrainedModel:()=>qi,BertForMaskedLM:()=>de,BertForQuestionAnswering:()=>he,BertForSequenceClassification:()=>ce,BertForTokenClassification:()=>pe,BertModel:()=>ue,BertPreTrainedModel:()=>le,BlenderbotForConditionalGeneration:()=>cn,BlenderbotModel:()=>dn,BlenderbotPreTrainedModel:()=>un,BlenderbotSmallForConditionalGeneration:()=>mn,BlenderbotSmallModel:()=>hn,BlenderbotSmallPreTrainedModel:()=>pn,BloomForCausalLM:()=>ni,BloomModel:()=>ti,BloomPreTrainedModel:()=>ei,CLIPModel:()=>or,CLIPPreTrainedModel:()=>ar,CLIPSegForImageSegmentation:()=>kr,CLIPSegModel:()=>Mr,CLIPSegPreTrainedModel:()=>xr,CLIPTextModel:()=>lr,CLIPTextModelWithProjection:()=>ur,CLIPVisionModel:()=>dr,CLIPVisionModelWithProjection:()=>cr,CamembertForMaskedLM:()=>Xe,CamembertForQuestionAnswering:()=>Ze,CamembertForSequenceClassification:()=>Je,CamembertForTokenClassification:()=>Ye,CamembertModel:()=>Qe,CamembertPreTrainedModel:()=>Ke,CausalLMOutput:()=>wc,CausalLMOutputWithPast:()=>bc,ChineseCLIPModel:()=>gr,ChineseCLIPPreTrainedModel:()=>_r,ClapAudioModelWithProjection:()=>Dl,ClapModel:()=>Ll,ClapPreTrainedModel:()=>Ol,ClapTextModelWithProjection:()=>Bl,CodeGenForCausalLM:()=>Ur,CodeGenModel:()=>qr,CodeGenPreTrainedModel:()=>Gr,CohereForCausalLM:()=>Ss,CohereModel:()=>$s,CoherePreTrainedModel:()=>Ts,ConvBertForMaskedLM:()=>De,ConvBertForQuestionAnswering:()=>Re,ConvBertForSequenceClassification:()=>Ne,ConvBertForTokenClassification:()=>je,ConvBertModel:()=>Be,ConvBertPreTrainedModel:()=>Le,ConvNextForImageClassification:()=>io,ConvNextModel:()=>so,ConvNextPreTrainedModel:()=>ro,ConvNextV2ForImageClassification:()=>lo,ConvNextV2Model:()=>oo,ConvNextV2PreTrainedModel:()=>ao,DFineForObjectDetection:()=>ha,DFineModel:()=>pa,DFinePreTrainedModel:()=>ca,DINOv3ConvNextModel:()=>bo,DINOv3ConvNextPreTrainedModel:()=>wo,DINOv3ViTModel:()=>go,DINOv3ViTPreTrainedModel:()=>_o,DPTForDepthEstimation:()=>La,DPTModel:()=>Oa,DPTPreTrainedModel:()=>Fa,DacDecoderModel:()=>qu,DacDecoderOutput:()=>Ru,DacEncoderModel:()=>Gu,DacEncoderOutput:()=>ju,DacModel:()=>Vu,DacPreTrainedModel:()=>Nu,DebertaForMaskedLM:()=>nt,DebertaForQuestionAnswering:()=>it,DebertaForSequenceClassification:()=>rt,DebertaForTokenClassification:()=>st,DebertaModel:()=>tt,DebertaPreTrainedModel:()=>et,DebertaV2ForMaskedLM:()=>lt,DebertaV2ForQuestionAnswering:()=>ct,DebertaV2ForSequenceClassification:()=>ut,DebertaV2ForTokenClassification:()=>dt,DebertaV2Model:()=>ot,DebertaV2PreTrainedModel:()=>at,DecisionTransformerModel:()=>wu,DecisionTransformerPreTrainedModel:()=>gu,DeiTForImageClassification:()=>ya,DeiTModel:()=>ba,DeiTPreTrainedModel:()=>wa,DepthAnythingForDepthEstimation:()=>Da,DepthAnythingPreTrainedModel:()=>Ba,DepthProForDepthEstimation:()=>qa,DepthProPreTrainedModel:()=>Ga,DetrForObjectDetection:()=>Qi,DetrForSegmentation:()=>Xi,DetrModel:()=>Ki,DetrObjectDetectionOutput:()=>Ji,DetrPreTrainedModel:()=>Hi,DetrSegmentationOutput:()=>Yi,Dinov2ForImageClassification:()=>po,Dinov2Model:()=>co,Dinov2PreTrainedModel:()=>uo,Dinov2WithRegistersForImageClassification:()=>fo,Dinov2WithRegistersModel:()=>mo,Dinov2WithRegistersPreTrainedModel:()=>ho,DistilBertForMaskedLM:()=>gt,DistilBertForQuestionAnswering:()=>_t,DistilBertForSequenceClassification:()=>mt,DistilBertForTokenClassification:()=>ft,DistilBertModel:()=>ht,DistilBertPreTrainedModel:()=>pt,DonutSwinModel:()=>no,DonutSwinPreTrainedModel:()=>to,EfficientNetForImageClassification:()=>Xl,EfficientNetModel:()=>Ql,EfficientNetPreTrainedModel:()=>Kl,ElectraForMaskedLM:()=>qe,ElectraForQuestionAnswering:()=>He,ElectraForSequenceClassification:()=>Ue,ElectraForTokenClassification:()=>We,ElectraModel:()=>Ge,ElectraPreTrainedModel:()=>Ve,Ernie4_5_ForCausalLM:()=>Cl,Ernie4_5_Model:()=>Sl,Ernie4_5_PretrainedModel:()=>$l,EsmForMaskedLM:()=>yt,EsmForSequenceClassification:()=>vt,EsmForTokenClassification:()=>xt,EsmModel:()=>bt,EsmPreTrainedModel:()=>wt,ExaoneForCausalLM:()=>ps,ExaoneModel:()=>cs,ExaonePreTrainedModel:()=>ds,FalconForCausalLM:()=>Fl,FalconModel:()=>zl,FalconPreTrainedModel:()=>Il,FastViTForImageClassification:()=>Ei,FastViTModel:()=>Ci,FastViTPreTrainedModel:()=>Si,Florence2ForConditionalGeneration:()=>Qn,Florence2PreTrainedModel:()=>Kn,GLPNForDepthEstimation:()=>eo,GLPNModel:()=>Za,GLPNPreTrainedModel:()=>Ya,GPT2LMHeadModel:()=>Sr,GPT2Model:()=>$r,GPT2PreTrainedModel:()=>Tr,GPTBigCodeForCausalLM:()=>Vr,GPTBigCodeModel:()=>Rr,GPTBigCodePreTrainedModel:()=>jr,GPTJForCausalLM:()=>Nr,GPTJModel:()=>Dr,GPTJPreTrainedModel:()=>Br,GPTNeoForCausalLM:()=>zr,GPTNeoModel:()=>Ir,GPTNeoPreTrainedModel:()=>Ar,GPTNeoXForCausalLM:()=>Lr,GPTNeoXModel:()=>Or,GPTNeoXPreTrainedModel:()=>Fr,Gemma2ForCausalLM:()=>zs,Gemma2Model:()=>Is,Gemma2PreTrainedModel:()=>As,Gemma3ForCausalLM:()=>Ls,Gemma3Model:()=>Os,Gemma3PreTrainedModel:()=>Fs,Gemma3nForConditionalGeneration:()=>er,Gemma3nPreTrainedModel:()=>Zn,GemmaForCausalLM:()=>Ps,GemmaModel:()=>Es,GemmaPreTrainedModel:()=>Cs,GlmForCausalLM:()=>us,GlmModel:()=>ls,GlmPreTrainedModel:()=>os,GraniteForCausalLM:()=>ks,GraniteModel:()=>Ms,GranitePreTrainedModel:()=>xs,GroundingDinoForObjectDetection:()=>vo,GroundingDinoPreTrainedModel:()=>yo,GroupViTModel:()=>$i,GroupViTPreTrainedModel:()=>Ti,HeliumForCausalLM:()=>as,HeliumModel:()=>is,HeliumPreTrainedModel:()=>ss,HieraForImageClassification:()=>Ma,HieraModel:()=>xa,HieraPreTrainedModel:()=>va,HubertForCTC:()=>al,HubertForSequenceClassification:()=>ol,HubertModel:()=>il,HubertPreTrainedModel:()=>sl,IJepaForImageClassification:()=>mi,IJepaModel:()=>hi,IJepaPreTrainedModel:()=>pi,Idefics3ForConditionalGeneration:()=>nr,Idefics3PreTrainedModel:()=>tr,ImageMattingOutput:()=>yc,JAISLMHeadModel:()=>Pr,JAISModel:()=>Er,JAISPreTrainedModel:()=>Cr,JinaCLIPModel:()=>br,JinaCLIPPreTrainedModel:()=>wr,JinaCLIPTextModel:()=>yr,JinaCLIPVisionModel:()=>vr,Lfm2ForCausalLM:()=>es,Lfm2Model:()=>Zr,Lfm2PreTrainedModel:()=>Yr,LiteWhisperForConditionalGeneration:()=>Nn,LlamaForCausalLM:()=>Kr,LlamaModel:()=>Hr,LlamaPreTrainedModel:()=>Wr,LlavaForConditionalGeneration:()=>Un,LlavaOnevisionForConditionalGeneration:()=>Wn,LlavaPreTrainedModel:()=>qn,LlavaQwen2ForCausalLM:()=>Yn,LongT5ForConditionalGeneration:()=>Qt,LongT5Model:()=>Kt,LongT5PreTrainedModel:()=>Ht,M2M100ForConditionalGeneration:()=>Fo,M2M100Model:()=>zo,M2M100PreTrainedModel:()=>Io,MBartForCausalLM:()=>ln,MBartForConditionalGeneration:()=>an,MBartForSequenceClassification:()=>on,MBartModel:()=>sn,MBartPreTrainedModel:()=>rn,MPNetForMaskedLM:()=>Pt,MPNetForQuestionAnswering:()=>zt,MPNetForSequenceClassification:()=>At,MPNetForTokenClassification:()=>It,MPNetModel:()=>Et,MPNetPreTrainedModel:()=>Ct,MT5ForConditionalGeneration:()=>Yt,MT5Model:()=>Jt,MT5PreTrainedModel:()=>Xt,MarianMTModel:()=>Ao,MarianModel:()=>Po,MarianPreTrainedModel:()=>Eo,MaskFormerForInstanceSegmentation:()=>Ja,MaskFormerModel:()=>Xa,MaskFormerPreTrainedModel:()=>Qa,MaskedLMOutput:()=>_c,Metric3DForDepthEstimation:()=>Wa,Metric3DPreTrainedModel:()=>Ua,Metric3Dv2ForDepthEstimation:()=>Ka,Metric3Dv2PreTrainedModel:()=>Ha,MgpstrForSceneTextRecognition:()=>Mu,MgpstrModelOutput:()=>vu,MgpstrPreTrainedModel:()=>xu,MimiDecoderModel:()=>Du,MimiDecoderOutput:()=>Ou,MimiEncoderModel:()=>Bu,MimiEncoderOutput:()=>Fu,MimiModel:()=>Lu,MimiPreTrainedModel:()=>zu,MistralForCausalLM:()=>Tl,MistralModel:()=>kl,MistralPreTrainedModel:()=>Ml,MobileBertForMaskedLM:()=>Tt,MobileBertForQuestionAnswering:()=>St,MobileBertForSequenceClassification:()=>$t,MobileBertModel:()=>kt,MobileBertPreTrainedModel:()=>Mt,MobileLLMForCausalLM:()=>fs,MobileLLMModel:()=>ms,MobileLLMPreTrainedModel:()=>hs,MobileNetV1ForImageClassification:()=>ru,MobileNetV1ForSemanticSegmentation:()=>su,MobileNetV1Model:()=>nu,MobileNetV1PreTrainedModel:()=>tu,MobileNetV2ForImageClassification:()=>ou,MobileNetV2ForSemanticSegmentation:()=>lu,MobileNetV2Model:()=>au,MobileNetV2PreTrainedModel:()=>iu,MobileNetV3ForImageClassification:()=>cu,MobileNetV3ForSemanticSegmentation:()=>pu,MobileNetV3Model:()=>du,MobileNetV3PreTrainedModel:()=>uu,MobileNetV4ForImageClassification:()=>fu,MobileNetV4ForSemanticSegmentation:()=>_u,MobileNetV4Model:()=>mu,MobileNetV4PreTrainedModel:()=>hu,MobileViTForImageClassification:()=>Fi,MobileViTModel:()=>zi,MobileViTPreTrainedModel:()=>Ii,MobileViTV2ForImageClassification:()=>Bi,MobileViTV2Model:()=>Li,MobileViTV2PreTrainedModel:()=>Oi,ModelOutput:()=>ae,ModernBertDecoderForCausalLM:()=>Se,ModernBertDecoderModel:()=>$e,ModernBertDecoderPreTrainedModel:()=>Te,ModernBertForMaskedLM:()=>xe,ModernBertForSequenceClassification:()=>Me,ModernBertForTokenClassification:()=>ke,ModernBertModel:()=>ve,ModernBertPreTrainedModel:()=>ye,Moondream1ForConditionalGeneration:()=>Hn,MoonshineForConditionalGeneration:()=>Vn,MoonshineModel:()=>Rn,MoonshinePreTrainedModel:()=>jn,MptForCausalLM:()=>ii,MptModel:()=>si,MptPreTrainedModel:()=>ri,MultiModalityCausalLM:()=>yu,MultiModalityPreTrainedModel:()=>bu,MusicgenForCausalLM:()=>Zl,MusicgenForConditionalGeneration:()=>eu,MusicgenModel:()=>Yl,MusicgenPreTrainedModel:()=>Jl,NeoBertForMaskedLM:()=>_e,NeoBertForQuestionAnswering:()=>be,NeoBertForSequenceClassification:()=>ge,NeoBertForTokenClassification:()=>we,NeoBertModel:()=>fe,NeoBertPreTrainedModel:()=>me,NomicBertModel:()=>Ee,NomicBertPreTrainedModel:()=>Ce,OPTForCausalLM:()=>li,OPTModel:()=>oi,OPTPreTrainedModel:()=>ai,Olmo2ForCausalLM:()=>vs,Olmo2Model:()=>ys,Olmo2PreTrainedModel:()=>bs,OlmoForCausalLM:()=>ws,OlmoModel:()=>gs,OlmoPreTrainedModel:()=>_s,OpenELMForCausalLM:()=>Ns,OpenELMModel:()=>Ds,OpenELMPreTrainedModel:()=>Bs,OwlViTForObjectDetection:()=>ji,OwlViTModel:()=>Ni,OwlViTPreTrainedModel:()=>Di,Owlv2ForObjectDetection:()=>Gi,Owlv2Model:()=>Vi,Owlv2PreTrainedModel:()=>Ri,PaliGemmaForConditionalGeneration:()=>Jn,PaliGemmaPreTrainedModel:()=>Xn,PatchTSMixerForPrediction:()=>Eu,PatchTSMixerModel:()=>Cu,PatchTSMixerPreTrainedModel:()=>Su,PatchTSTForPrediction:()=>$u,PatchTSTModel:()=>Tu,PatchTSTPreTrainedModel:()=>ku,Phi3ForCausalLM:()=>Zs,Phi3Model:()=>Ys,Phi3PreTrainedModel:()=>Js,Phi3VForCausalLM:()=>ir,Phi3VPreTrainedModel:()=>sr,PhiForCausalLM:()=>Xs,PhiModel:()=>Qs,PhiPreTrainedModel:()=>Ks,PreTrainedModel:()=>ie,PretrainedMixin:()=>Qu,PvtForImageClassification:()=>bi,PvtModel:()=>wi,PvtPreTrainedModel:()=>gi,PyAnnoteForAudioFrameClassification:()=>Vo,PyAnnoteModel:()=>Ro,PyAnnotePreTrainedModel:()=>jo,QuestionAnsweringModelOutput:()=>gc,Qwen2ForCausalLM:()=>Vs,Qwen2Model:()=>Rs,Qwen2PreTrainedModel:()=>js,Qwen2VLForConditionalGeneration:()=>Hs,Qwen2VLPreTrainedModel:()=>Ws,Qwen3ForCausalLM:()=>Us,Qwen3Model:()=>qs,Qwen3PreTrainedModel:()=>Gs,RFDetrForObjectDetection:()=>ua,RFDetrModel:()=>la,RFDetrObjectDetectionOutput:()=>da,RFDetrPreTrainedModel:()=>oa,RTDetrForObjectDetection:()=>ta,RTDetrModel:()=>ea,RTDetrObjectDetectionOutput:()=>na,RTDetrPreTrainedModel:()=>Zi,RTDetrV2ForObjectDetection:()=>ia,RTDetrV2Model:()=>sa,RTDetrV2ObjectDetectionOutput:()=>aa,RTDetrV2PreTrainedModel:()=>ra,ResNetForImageClassification:()=>$a,ResNetModel:()=>Ta,ResNetPreTrainedModel:()=>ka,RoFormerForMaskedLM:()=>Ie,RoFormerForQuestionAnswering:()=>Oe,RoFormerForSequenceClassification:()=>ze,RoFormerForTokenClassification:()=>Fe,RoFormerModel:()=>Ae,RoFormerPreTrainedModel:()=>Pe,RobertaForMaskedLM:()=>gn,RobertaForQuestionAnswering:()=>yn,RobertaForSequenceClassification:()=>wn,RobertaForTokenClassification:()=>bn,RobertaModel:()=>_n,RobertaPreTrainedModel:()=>fn,SamImageSegmentationOutput:()=>Co,SamModel:()=>So,SamPreTrainedModel:()=>$o,SapiensForDepthEstimation:()=>Ra,SapiensForNormalEstimation:()=>Va,SapiensForSemanticSegmentation:()=>ja,SapiensPreTrainedModel:()=>Na,SegformerForImageClassification:()=>Gl,SegformerForSemanticSegmentation:()=>ql,SegformerModel:()=>Vl,SegformerPreTrainedModel:()=>Rl,Seq2SeqLMOutput:()=>pc,SequenceClassifierOutput:()=>hc,SiglipModel:()=>hr,SiglipPreTrainedModel:()=>pr,SiglipTextModel:()=>mr,SiglipVisionModel:()=>fr,SmolLM3ForCausalLM:()=>rs,SmolLM3Model:()=>ns,SmolLM3PreTrainedModel:()=>ts,SmolVLMForConditionalGeneration:()=>rr,SnacDecoderModel:()=>Ku,SnacEncoderModel:()=>Hu,SnacModel:()=>Wu,SnacPreTrainedModel:()=>Uu,SpeechT5ForSpeechToText:()=>wl,SpeechT5ForTextToSpeech:()=>bl,SpeechT5HifiGan:()=>yl,SpeechT5Model:()=>gl,SpeechT5PreTrainedModel:()=>_l,SqueezeBertForMaskedLM:()=>Lt,SqueezeBertForQuestionAnswering:()=>Dt,SqueezeBertForSequenceClassification:()=>Bt,SqueezeBertModel:()=>Ot,SqueezeBertPreTrainedModel:()=>Ft,StableLmForCausalLM:()=>Hl,StableLmModel:()=>Wl,StableLmPreTrainedModel:()=>Ul,Starcoder2ForCausalLM:()=>Al,Starcoder2Model:()=>Pl,Starcoder2PreTrainedModel:()=>El,StyleTextToSpeech2Model:()=>fl,StyleTextToSpeech2PreTrainedModel:()=>ml,Swin2SRForImageSuperResolution:()=>za,Swin2SRModel:()=>Ia,Swin2SRPreTrainedModel:()=>Aa,SwinForImageClassification:()=>Ea,SwinForSemanticSegmentation:()=>Pa,SwinModel:()=>Ca,SwinPreTrainedModel:()=>Sa,T5ForConditionalGeneration:()=>Wt,T5Model:()=>Ut,T5PreTrainedModel:()=>qt,TableTransformerForObjectDetection:()=>_a,TableTransformerModel:()=>fa,TableTransformerObjectDetectionOutput:()=>ga,TableTransformerPreTrainedModel:()=>ma,TokenClassifierOutput:()=>fc,TrOCRForCausalLM:()=>xl,TrOCRPreTrainedModel:()=>vl,UltravoxModel:()=>Au,UltravoxPreTrainedModel:()=>Pu,UniSpeechForCTC:()=>Ho,UniSpeechForSequenceClassification:()=>Ko,UniSpeechModel:()=>Wo,UniSpeechPreTrainedModel:()=>Uo,UniSpeechSatForAudioFrameClassification:()=>Zo,UniSpeechSatForCTC:()=>Jo,UniSpeechSatForSequenceClassification:()=>Yo,UniSpeechSatModel:()=>Xo,UniSpeechSatPreTrainedModel:()=>Qo,ViTForImageClassification:()=>ci,ViTMAEModel:()=>vi,ViTMAEPreTrainedModel:()=>yi,ViTMSNForImageClassification:()=>ki,ViTMSNModel:()=>Mi,ViTMSNPreTrainedModel:()=>xi,ViTModel:()=>di,ViTPreTrainedModel:()=>ui,VisionEncoderDecoderModel:()=>Gn,VitMatteForImageMatting:()=>Ai,VitMattePreTrainedModel:()=>Pi,VitPoseForPoseEstimation:()=>_i,VitPosePreTrainedModel:()=>fi,VitsModel:()=>jl,VitsModelOutput:()=>vc,VitsPreTrainedModel:()=>Nl,VoxtralForConditionalGeneration:()=>Iu,Wav2Vec2BertForCTC:()=>nl,Wav2Vec2BertForSequenceClassification:()=>rl,Wav2Vec2BertModel:()=>tl,Wav2Vec2BertPreTrainedModel:()=>el,Wav2Vec2ForAudioFrameClassification:()=>No,Wav2Vec2ForCTC:()=>Bo,Wav2Vec2ForSequenceClassification:()=>Do,Wav2Vec2Model:()=>Lo,Wav2Vec2PreTrainedModel:()=>Oo,WavLMForAudioFrameClassification:()=>hl,WavLMForCTC:()=>dl,WavLMForSequenceClassification:()=>cl,WavLMForXVector:()=>pl,WavLMModel:()=>ul,WavLMPreTrainedModel:()=>ll,WeSpeakerResNetModel:()=>qo,WeSpeakerResNetPreTrainedModel:()=>Go,WhisperForConditionalGeneration:()=>Dn,WhisperModel:()=>Bn,WhisperPreTrainedModel:()=>Ln,XLMForQuestionAnswering:()=>$n,XLMForSequenceClassification:()=>kn,XLMForTokenClassification:()=>Tn,XLMModel:()=>xn,XLMPreTrainedModel:()=>vn,XLMRobertaForMaskedLM:()=>En,XLMRobertaForQuestionAnswering:()=>In,XLMRobertaForSequenceClassification:()=>Pn,XLMRobertaForTokenClassification:()=>An,XLMRobertaModel:()=>Cn,XLMRobertaPreTrainedModel:()=>Sn,XLMWithLMHeadModel:()=>Mn,XVectorOutput:()=>mc,YolosForObjectDetection:()=>ko,YolosModel:()=>Mo,YolosObjectDetectionOutput:()=>To,YolosPreTrainedModel:()=>xo});var s=r(
/*! ./configs.js */
"./src/configs.js"),i=r(
/*! ./backends/onnx.js */
"./src/backends/onnx.js"),a=r(
/*! ./utils/dtypes.js */
"./src/utils/dtypes.js"),o=r(
/*! ./utils/generic.js */
"./src/utils/generic.js"),l=r(
/*! ./utils/core.js */
"./src/utils/core.js"),u=r(
/*! ./utils/hub.js */
"./src/utils/hub.js"),d=(r(
/*! ./utils/constants.js */
"./src/utils/constants.js"),r(
/*! ./generation/logits_process.js */
"./src/generation/logits_process.js")),c=r(
/*! ./generation/configuration_utils.js */
"./src/generation/configuration_utils.js"),p=r(
/*! ./utils/tensor.js */
"./src/utils/tensor.js"),h=r(
/*! ./utils/image.js */
"./src/utils/image.js"),m=r(
/*! ./utils/maths.js */
"./src/utils/maths.js"),f=r(
/*! ./generation/stopping_criteria.js */
"./src/generation/stopping_criteria.js"),_=r(
/*! ./generation/logits_sampler.js */
"./src/generation/logits_sampler.js"),g=r(
/*! ./env.js */
"./src/env.js"),w=r(
/*! ./models/whisper/generation_whisper.js */
"./src/models/whisper/generation_whisper.js"),b=r(
/*! ./models/whisper/common_whisper.js */
"./src/models/whisper/common_whisper.js");const v=0,x=1,M=2,k=3,T=4,$=5,S=6,C=7,E=8,P=9,A=10,I=11,z=12,F=new Map,O=new Map,L=new Map;async function B(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map(async r=>{const{buffer_or_path:o,session_options:l,session_config:d}=await async function(e,t,n){var r;let o=(null==(r=n.config)?void 0:r["transformers.js_config"])??{},l=n.device??o.device;l&&"string"!=typeof l&&(l=l.hasOwnProperty(t)?l[t]:null);const d=l??(g.apis.IS_NODE_ENV?"cpu":"wasm"),c=(0,i.deviceToExecutionProviders)(d),p=o.device_config??{};p.hasOwnProperty(d)&&(o={...o,...p[d]});let h=n.dtype??o.dtype;if("string"!=typeof h&&(h=h&&h.hasOwnProperty(t)?h[t]:a.DEFAULT_DEVICE_DTYPE_MAPPING[d]??a.DATA_TYPES.fp32),h===a.DATA_TYPES.auto){let e=o.dtype;"string"!=typeof e&&(e=null==e?void 0:e[t]),h=e&&e!==a.DATA_TYPES.auto&&a.DATA_TYPES.hasOwnProperty(e)?e:a.DEFAULT_DEVICE_DTYPE_MAPPING[d]??a.DATA_TYPES.fp32}const m=h;if(!a.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(m))throw new Error(`Invalid dtype: ${m}. Should be one of: ${Object.keys(a.DATA_TYPES).join(", ")}`);if(m===a.DATA_TYPES.fp16&&"webgpu"===d&&!(await(0,a.isWebGpuFp16Supported)()))throw new Error(`The device (${d}) does not support fp16.`);const f=o.kv_cache_dtype,_=f?"string"==typeof f?f:f[m]??"float32":void 0;if(_&&!["float32","float16"].includes(_))throw new Error(`Invalid kv_cache_dtype: ${_}. Should be one of: float32, float16`);const w={dtype:m,kv_cache_dtype:_,device:d},b=`${t}${a.DEFAULT_DTYPE_SUFFIX_MAPPING[m]}.onnx`,y=`${n.subfolder??""}/${b}`,v={...n.session_options};v.executionProviders??(v.executionProviders=c);const x=o.free_dimension_overrides;x?v.freeDimensionOverrides??(v.freeDimensionOverrides=x):d.startsWith("webnn")&&v.freeDimensionOverrides;const M=g.apis.IS_NODE_ENV&&g.env.useFSCache,k=(0,u.getModelFile)(e,y,!0,n,M),T=n.use_external_data_format??o.use_external_data_format;let $=[];if(T){let r;r="object"==typeof T?T.hasOwnProperty(b)?T[b]:!!T.hasOwnProperty(t)&&T[t]:T;const s=+r;if(s>u.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${s}) exceeds the maximum allowed value (${u.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let t=0;t<s;++t){const r=`${b}_data${0===t?"":"_"+t}`,s=`${n.subfolder??""}/${r}`;$.push(new Promise(async(t,i)=>{const a=await(0,u.getModelFile)(e,s,!0,n,M);t(a instanceof Uint8Array?{path:r,data:a}:r)}))}}else void 0!==v.externalData&&($=v.externalData.map(async t=>{if("string"==typeof t.data){const r=await(0,u.getModelFile)(e,t.data,!0,n);return{...t,data:r}}return t}));if($.length>0){const e=await Promise.all($);g.apis.IS_NODE_ENV||(v.externalData=e)}if("webgpu"===d){const e=(0,s.getCacheShapes)(n.config,{prefix:"present"});if(Object.keys(e).length>0&&!(0,i.isONNXProxy)()){const t={};for(const n in e)t[n]="gpu-buffer";v.preferredOutputLocation=t}}return{buffer_or_path:await k,session_options:v,session_config:w}}(e,t[r],n);return[r,await(0,i.createInferenceSession)(o,l,d)]})))}async function D(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map(async r=>[r,await(0,u.getModelJSON)(e,t[r],!1,n)])))}let N=Promise.resolve();async function j(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const s of e.inputNames){const e=t[s];e instanceof p.Tensor?n[s]=(0,i.isONNXProxy)()?e.clone():e:r.push(s)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);Object.keys(t).length>e.inputNames.length&&Object.keys(t).filter(t=>!e.inputNames.includes(t));return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map(([e,t])=>[e,t.ort_tensor])),r=()=>e.run(t);return R(await(g.apis.IS_BROWSER_ENV||g.apis.IS_WEBWORKER_ENV?N=N.then(r):r()))}catch(y){Object.fromEntries(Object.entries(n).map(([e,t])=>{const n={type:t.type,dims:t.dims,location:t.location};return"gpu-buffer"!==n.location&&(n.data=t.data),[e,n]}));throw y}}function R(e){for(let t in e)(0,i.isONNXTensor)(e[t])?e[t]=new p.Tensor(e[t]):"object"==typeof e[t]&&R(e[t]);return e}function V(e){if(e instanceof p.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some(t=>t.length!==e[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new p.Tensor("int64",BigInt64Array.from(e.flat().map(e=>BigInt(e))),[e.length,e[0].length])}return new p.Tensor("int64",BigInt64Array.from(e.map(e=>BigInt(e))),[1,e.length])}function G(e){return new p.Tensor("bool",[e],[1])}async function q(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:s,...i}=t;if(!n){const r=(0,l.pick)(t,e.sessions.model.inputNames);n=(await U(e,r)).last_hidden_state}i.input_ids=s,i.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(i.encoder_attention_mask=t.attention_mask);return await H(e,i,!0)}async function U(e,t){const n=e.sessions.model,r=(0,l.pick)(t,n.inputNames);if(n.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}if(n.inputNames.includes("token_type_ids")&&!r.token_type_ids){if(!r.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");r.token_type_ids=(0,p.zeros_like)(r.input_ids)}if(n.inputNames.includes("pixel_mask")&&!r.pixel_mask){if(!r.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const e=r.pixel_values.dims;r.pixel_mask=(0,p.ones)([e[0],e[2],e[3]])}return await j(n,r)}async function W(e,t){const n=await e.encode(t);return await e.decode(n)}async function H(e,t,n=!1){const r=e.sessions[n?"decoder_model_merged":"model"],{past_key_values:s,...i}=t;if(r.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=G(!!s)),r.inputNames.includes("position_ids")&&i.attention_mask&&!i.position_ids){const t=["paligemma","gemma3_text","gemma3"].includes(e.config.model_type)?1:0;i.position_ids=function(e,t=null,n=0){const{input_ids:r,inputs_embeds:s,attention_mask:i}=e,{data:a,dims:o}=ee(i,n);let l=new p.Tensor("int64",a,o);if(t){const e=-(r??s).dims.at(1);l=l.slice(null,[e,null])}return l}(i,s,t)}e.addPastKeyValues(i,s);const a=(0,l.pick)(i,r.inputNames);return await j(r,a)}function K({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s}){const i=r.tolist().map(t=>t.reduce((t,n,r)=>(n==e&&t.push(r),t),[])),a=i.reduce((e,t)=>e+t.length,0),o=n.dims[0];if(a!==o)throw new Error(`Number of tokens and features do not match: tokens: ${a}, features ${o}`);let l=0;for(let u=0;u<i.length;++u){const e=i[u],r=t[u];for(let t=0;t<e.length;++t)r[e[t]].data.set(n[l++].data)}return{inputs_embeds:t,attention_mask:s}}function Q({image_token_id:e,inputs_embeds:t,image_features:n,input_ids:r,attention_mask:s}){return K({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s})}function X({audio_token_id:e,inputs_embeds:t,audio_features:n,input_ids:r,attention_mask:s}){return K({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s})}async function J(e,{encode_function:t,merge_function:n,modality_input_name:r,modality_output_name:s,input_ids:i=null,attention_mask:a=null,position_ids:o=null,inputs_embeds:l=null,past_key_values:u=null,generation_config:d=null,logits_processor:c=null,...h}){const m=h[r];if(!l)if(l=await e.encode_text({input_ids:i,...h}),m&&1!==i.dims[1]){const e=await t({[r]:m,...h});({inputs_embeds:l,attention_mask:a}=n({[s]:e,inputs_embeds:l,input_ids:i,attention_mask:a}))}else if(u&&m&&1===i.dims[1]){const e=i.dims[1],t=Object.values(u)[0].dims.at(-2);a=(0,p.cat)([(0,p.ones)([i.dims[0],t]),a.slice(null,[a.dims[1]-e,a.dims[1]])],1)}if(!o&&"qwen2_vl"===e.config.model_type){const{image_grid_thw:t,video_grid_thw:n}=h;[o]=e.get_rope_index(i,t,n,a)}return await H(e,{inputs_embeds:l,past_key_values:u,attention_mask:a,position_ids:o,generation_config:d,logits_processor:c},!0)}async function Y(e,t){return await J(e,{...t,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:e.encode_audio.bind(e),merge_function:e._merge_input_ids_with_audio_features.bind(e)})}async function Z(e,t){return await J(e,{...t,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:e.encode_image.bind(e),merge_function:e._merge_input_ids_with_image_features.bind(e)})}function ee(e,t=0){const[n,r]=e.dims,s=e.data,i=new BigInt64Array(s.length);for(let a=0;a<n;++a){const e=a*r;let n=BigInt(t);for(let t=0;t<r;++t){const r=e+t;0n===s[r]?i[r]=BigInt(1):(i[r]=n,n+=s[r])}}return{data:i,dims:e.dims}}function te(e,t,n,r){const s=n.past_key_values?Object.values(n.past_key_values)[0].dims.at(-2):0;if(!n.attention_mask){let e;for(const t of["input_ids","inputs_embeds","position_ids"])if(n[t]){e=n[t].dims;break}if(!e)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");n.attention_mask=(0,p.ones)([e[0],s+e[1]])}if(n.past_key_values){const{input_ids:e,attention_mask:t}=n;t&&t.dims[1]>e.dims[1]||s<e.dims[1]&&(n.input_ids=e.slice(null,[s,null]))}return n}function ne(e,t,n,r){return n.past_key_values&&(t=t.map(e=>[e.at(-1)])),{...n,decoder_input_ids:V(t)}}function re(e,...t){return e.config.is_encoder_decoder?ne(e,...t):te(e,...t)}function se(e,t,n,r){const s=!!n.past_key_values;if(null!==r.guidance_scale&&r.guidance_scale>1&&(s?n.input_ids=(0,p.cat)([n.input_ids,n.input_ids],0):(n.input_ids=(0,p.cat)([n.input_ids,(0,p.full_like)(n.input_ids,BigInt(r.pad_token_id))],0),n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.full_like)(n.attention_mask,0n)],0))),!s&&n.pixel_values||(n.pixel_values=(0,p.full)([0,0,3,384,384],1)),s){const e=0,t=1,r=0,s=1;n.images_seq_mask=new p.Tensor("bool",new Array(e+t).fill(!0).fill(!1,0,t),[s,e+t]),n.images_emb_mask=new p.Tensor("bool",new Array(e).fill(!!r),[s,1,e])}return n}class ie extends o.Callable{constructor(e,n,r){super(),t(this,"main_input_name","input_ids"),t(this,"forward_params",["input_ids","attention_mask"]),this.config=e,this.sessions=n,this.configs=r;const s=L.get(this.constructor),i=F.get(s);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,i){case T:this.can_generate=!0,this._forward=H,this._prepare_inputs_for_generation=te;break;case M:case k:case C:this.can_generate=!0,this._forward=q,this._prepare_inputs_for_generation=ne;break;case x:this._forward=q;break;case S:this.can_generate=!0,this._forward=Z,this._prepare_inputs_for_generation=re;break;case A:this.can_generate=!0,this._forward=Y,this._prepare_inputs_for_generation=re;break;case P:case z:this.can_generate=!0,this._prepare_inputs_for_generation=re;break;case E:this.can_generate=!0,this._prepare_inputs_for_generation=se;break;case I:this._forward=W;break;default:this._forward=U}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){var e;const t=[];for(const n of Object.values(this.sessions))(null==(e=null==n?void 0:n.handler)?void 0:e.dispose)&&t.push(n.handler.dispose());return await Promise.all(t)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:i=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:d=null,use_external_data_format:c=null,session_options:p={}}={}){let h={progress_callback:t,config:n,cache_dir:r,local_files_only:i,revision:a,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:c,session_options:p};const m=L.get(this),f=F.get(m);let _;if(n=h.config=await s.AutoConfig.from_pretrained(e,h),f===T)_=await Promise.all([B(e,{model:h.model_file_name??"model"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(f===M||f===k)_=await Promise.all([B(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(f===$)_=await Promise.all([B(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},h)]);else if(f===x)_=await Promise.all([B(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},h)]);else if(f===S){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};n.is_encoder_decoder&&(t.model="encoder_model"),_=await Promise.all([B(e,t,h),D(e,{generation_config:"generation_config.json"},h)])}else if(f===A){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};_=await Promise.all([B(e,t,h),D(e,{generation_config:"generation_config.json"},h)])}else if(f===z){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};_=await Promise.all([B(e,t,h),D(e,{generation_config:"generation_config.json"},h)])}else if(f===C)_=await Promise.all([B(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(f===E)_=await Promise.all([B(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(f===P)_=await Promise.all([B(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(f===I)_=await Promise.all([B(e,{encoder_model:"encoder_model",decoder_model:"decoder_model"},h)]);else{if(f!==v){m??(null==n||n.model_type)}_=await Promise.all([B(e,{model:h.model_file_name??"model"},h)])}return new this(n,..._)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){var e;return(null==(e=this.configs)?void 0:e.generation_config)??null}_get_logits_warper(e){const t=new d.LogitsProcessorList;return null!==e.temperature&&1!==e.temperature&&t.push(new d.TemperatureLogitsWarper(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new d.TopKLogitsWarper(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new d.TopPLogitsWarper(e.top_p)),t}_get_logits_processor(e,t,n=null){const r=new d.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new d.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new d.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new d.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new d.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new d.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new d.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new d.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new d.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new d.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t,n=c.GenerationConfig){const r={...this.config};for(const i of["decoder","generator","text_config"])i in r&&Object.assign(r,r[i]);const s=new n(r);return Object.assign(s,this.generation_config??{}),e&&Object.assign(s,e),t&&Object.assign(s,(0,l.pick)(t,Object.getOwnPropertyNames(s))),s}_get_stopping_criteria(e,t=null){const n=new f.StoppingCriteriaList;return null!==e.max_length&&n.push(new f.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new f.EosTokenCriteria(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[ad,dd,id,ed],t=L.get(this.constructor),n=new Set,r=this.config.model_type;for(const i of e){const e=i.get(r);e&&n.add(e[0])}let s=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(s+=` Please use the following class instead: ${[...n].join(", ")}`),Error(s)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:n,is_encoder_decoder:r}){return n.past_key_values=this.getPastKeyValues(t,n.past_key_values),n.input_ids=new p.Tensor("int64",e.flat(),[e.length,1]),r||(n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.ones)([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:n}){const r=(0,l.pick)(n,this.forward_params),s=this.main_input_name;if(s in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[s]=e;return{inputs_tensor:r[s],model_inputs:r,model_input_name:s}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:n,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:n,attention_mask:r,...s}=t,i=await this._prepare_inputs_embeds(t);t={...s,...(0,l.pick)(i,["inputs_embeds","attention_mask"])}}let{last_hidden_state:s}=await U(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)s=(0,p.cat)([s,(0,p.full_like)(s,0)],0),"attention_mask"in t&&(t.attention_mask=(0,p.cat)([t.attention_mask,(0,p.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=V(t.decoder_input_ids).dims[0];if(e!==s.dims[0]){if(1!==s.dims[0])throw new Error(`The encoder outputs have a different batch size (${s.dims[0]}) than the decoder inputs (${e}).`);s=(0,p.cat)(Array.from({length:e},()=>s),0)}}return t.encoder_outputs=s,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:n,decoder_start_token_id:r,bos_token_id:s,generation_config:i}){let{decoder_input_ids:a,...o}=n;if(!(a instanceof p.Tensor)){if(a)Array.isArray(a[0])||(a=Array.from({length:e},()=>a));else if(r??(r=s),"musicgen"===this.config.model_type)a=Array.from({length:e*this.config.decoder.num_codebooks},()=>[r]);else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);a=r}else a=Array.from({length:e},()=>[r]);a=V(a)}return n.decoder_attention_mask=(0,p.ones_like)(a),{input_ids:a,model_inputs:o}}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,streamer:s=null,...i}){this._validate_model_class(),t=this._prepare_generation_config(t,i);let{inputs_tensor:a,model_inputs:o,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:i});const u=this.config.is_encoder_decoder;let d;u&&("encoder_outputs"in o||(o=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:a,model_inputs:o,model_input_name:l,generation_config:t}))),u?({input_ids:d,model_inputs:o}=this._prepare_decoder_input_ids_for_generation({batch_size:o[l].dims.at(0),model_input_name:l,model_kwargs:o,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):d=o[l];let c=d.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=c+t.max_new_tokens);const h=this._get_logits_processor(t,c,n),m=this._get_stopping_criteria(t,r),f=o[l].dims.at(0),g=_.LogitsSampler.getSampler(t),w=new Array(f).fill(0),b=d.tolist();let y;s&&s.put(b);let v={};for(;;){if(o=this.prepare_inputs_for_generation(b,o,t),y=await this.forward(o),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(y);for(const t in e)t in v||(v[t]=[]),v[t].push(e[t])}const e=h(b,y.logits.slice(null,-1,null)),n=[];for(let t=0;t<e.dims.at(0);++t){const r=e[t],s=await g(r);for(const[e,i]of s){const r=BigInt(e);w[t]+=i,b[t].push(r),n.push([r]);break}}s&&s.put(n);if(m(b).every(e=>e))break;o=this._update_model_kwargs_for_generation({generated_input_ids:n,outputs:y,model_inputs:o,is_encoder_decoder:u})}s&&s.end();const x=this.getPastKeyValues(y,o.past_key_values,!0),M=new p.Tensor("int64",b.flat(),[b.length,b[0].length]);if(t.return_dict_in_generate)return{sequences:M,past_key_values:x,...v};for(const p of Object.values(y))"gpu-buffer"===p.location&&p.dispose();return M}getPastKeyValues(e,t,n=!1){const r=Object.create(null);for(const s in e)if(s.startsWith("present")){const i=s.replace("present_conv","past_conv").replace("present","past_key_values"),a=s.includes("encoder");if(r[i]=a&&t?t[i]:e[s],t&&(!a||n)){const e=t[i];"gpu-buffer"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const n of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){var n,r,i;if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,a=(null==(r=null==(n=e[this.main_input_name]??e.attention_mask)?void 0:n.dims)?void 0:r[0])??1,o=(null==(i=null==t?void 0:t.config)?void 0:i.kv_cache_dtype)??"float32",l="float16"===o?p.DataTypeMap.float16:p.DataTypeMap.float32,u=(0,s.getCacheShapes)(this.config,{batch_size:a});for(const n in u){const t=u[n].reduce((e,t)=>e*t,1);e[n]=new p.Tensor(o,new l(t),u[n])}}}async encode_image({pixel_values:e}){return(await j(this.sessions.vision_encoder,{pixel_values:e})).image_features}async encode_text({input_ids:e}){return(await j(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}async encode_audio({audio_values:e}){return(await j(this.sessions.audio_encoder,{audio_values:e})).audio_features}}class ae{}class oe extends ae{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class le extends ie{}class ue extends le{}class de extends le{async _call(e){return new _c(await super._call(e))}}class ce extends le{async _call(e){return new hc(await super._call(e))}}class pe extends le{async _call(e){return new fc(await super._call(e))}}class he extends le{async _call(e){return new gc(await super._call(e))}}class me extends ie{}class fe extends me{}class _e extends me{async _call(e){return new _c(await super._call(e))}}class ge extends me{async _call(e){return new hc(await super._call(e))}}class we extends me{async _call(e){return new fc(await super._call(e))}}class be extends me{async _call(e){return new gc(await super._call(e))}}class ye extends ie{}class ve extends ye{}class xe extends ye{async _call(e){return new _c(await super._call(e))}}class Me extends ye{async _call(e){return new hc(await super._call(e))}}class ke extends ye{async _call(e){return new fc(await super._call(e))}}class Te extends ie{}class $e extends Te{}class Se extends Te{}class Ce extends ie{}class Ee extends Ce{}class Pe extends ie{}class Ae extends Pe{}class Ie extends Pe{async _call(e){return new _c(await super._call(e))}}class ze extends Pe{async _call(e){return new hc(await super._call(e))}}class Fe extends Pe{async _call(e){return new fc(await super._call(e))}}class Oe extends Pe{async _call(e){return new gc(await super._call(e))}}class Le extends ie{}class Be extends Le{}class De extends Le{async _call(e){return new _c(await super._call(e))}}class Ne extends Le{async _call(e){return new hc(await super._call(e))}}class je extends Le{async _call(e){return new fc(await super._call(e))}}class Re extends Le{async _call(e){return new gc(await super._call(e))}}class Ve extends ie{}class Ge extends Ve{}class qe extends Ve{async _call(e){return new _c(await super._call(e))}}class Ue extends Ve{async _call(e){return new hc(await super._call(e))}}class We extends Ve{async _call(e){return new fc(await super._call(e))}}class He extends Ve{async _call(e){return new gc(await super._call(e))}}class Ke extends ie{}class Qe extends Ke{}class Xe extends Ke{async _call(e){return new _c(await super._call(e))}}class Je extends Ke{async _call(e){return new hc(await super._call(e))}}class Ye extends Ke{async _call(e){return new fc(await super._call(e))}}class Ze extends Ke{async _call(e){return new gc(await super._call(e))}}class et extends ie{}class tt extends et{}class nt extends et{async _call(e){return new _c(await super._call(e))}}class rt extends et{async _call(e){return new hc(await super._call(e))}}class st extends et{async _call(e){return new fc(await super._call(e))}}class it extends et{async _call(e){return new gc(await super._call(e))}}class at extends ie{}class ot extends at{}class lt extends at{async _call(e){return new _c(await super._call(e))}}class ut extends at{async _call(e){return new hc(await super._call(e))}}class dt extends at{async _call(e){return new fc(await super._call(e))}}class ct extends at{async _call(e){return new gc(await super._call(e))}}class pt extends ie{}class ht extends pt{}class mt extends pt{async _call(e){return new hc(await super._call(e))}}class ft extends pt{async _call(e){return new fc(await super._call(e))}}class _t extends pt{async _call(e){return new gc(await super._call(e))}}class gt extends pt{async _call(e){return new _c(await super._call(e))}}class wt extends ie{}class bt extends wt{}class yt extends wt{async _call(e){return new _c(await super._call(e))}}class vt extends wt{async _call(e){return new hc(await super._call(e))}}class xt extends wt{async _call(e){return new fc(await super._call(e))}}class Mt extends ie{}class kt extends Mt{}class Tt extends Mt{async _call(e){return new _c(await super._call(e))}}class $t extends Mt{async _call(e){return new hc(await super._call(e))}}class St extends Mt{async _call(e){return new gc(await super._call(e))}}class Ct extends ie{}class Et extends Ct{}class Pt extends Ct{async _call(e){return new _c(await super._call(e))}}class At extends Ct{async _call(e){return new hc(await super._call(e))}}class It extends Ct{async _call(e){return new fc(await super._call(e))}}class zt extends Ct{async _call(e){return new gc(await super._call(e))}}class Ft extends ie{}class Ot extends Ft{}class Lt extends Ft{async _call(e){return new _c(await super._call(e))}}class Bt extends Ft{async _call(e){return new hc(await super._call(e))}}class Dt extends Ft{async _call(e){return new gc(await super._call(e))}}class Nt extends ie{}class jt extends Nt{}class Rt extends Nt{async _call(e){return new hc(await super._call(e))}}class Vt extends Nt{async _call(e){return new gc(await super._call(e))}}class Gt extends Nt{async _call(e){return new _c(await super._call(e))}}class qt extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Ut extends qt{}class Wt extends qt{}class Ht extends ie{}class Kt extends Ht{}class Qt extends Ht{}class Xt extends ie{}class Jt extends Xt{}class Yt extends Xt{}class Zt extends ie{}class en extends Zt{}class tn extends Zt{}class nn extends Zt{async _call(e){return new hc(await super._call(e))}}class rn extends ie{}class sn extends rn{}class an extends rn{}class on extends rn{async _call(e){return new hc(await super._call(e))}}class ln extends rn{}class un extends ie{}class dn extends un{}class cn extends un{}class pn extends ie{}class hn extends pn{}class mn extends pn{}class fn extends ie{}class _n extends fn{}class gn extends fn{async _call(e){return new _c(await super._call(e))}}class wn extends fn{async _call(e){return new hc(await super._call(e))}}class bn extends fn{async _call(e){return new fc(await super._call(e))}}class yn extends fn{async _call(e){return new gc(await super._call(e))}}class vn extends ie{}class xn extends vn{}class Mn extends vn{async _call(e){return new _c(await super._call(e))}}class kn extends vn{async _call(e){return new hc(await super._call(e))}}class Tn extends vn{async _call(e){return new fc(await super._call(e))}}class $n extends vn{async _call(e){return new gc(await super._call(e))}}class Sn extends ie{}class Cn extends Sn{}class En extends Sn{async _call(e){return new _c(await super._call(e))}}class Pn extends Sn{async _call(e){return new hc(await super._call(e))}}class An extends Sn{async _call(e){return new fc(await super._call(e))}}class In extends Sn{async _call(e){return new gc(await super._call(e))}}class zn extends ie{}class Fn extends zn{}class On extends zn{}class Ln extends ie{constructor(){super(...arguments),t(this,"requires_attention_mask",!1),t(this,"main_input_name","input_features"),t(this,"forward_params",["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"])}}class Bn extends Ln{}class Dn extends Ln{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,w.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(n="en");const s=`<|${(0,b.whisper_language_to_code)(n)}|>`;t.push(e.lang_to_id[s]),t.push(e.task_to_id[r??"transcribe"])}else if(n||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&t.pop(),t.filter(e=>null!=e)}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,...s}){t=this._prepare_generation_config(t,s);const i=s.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(n??(n=new d.LogitsProcessorList),n.push(new d.WhisperTimeStampLogitsProcessor(t,i))),t.begin_suppress_tokens&&(n??(n=new d.LogitsProcessorList),n.push(new d.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,i.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");t.task,t.output_attentions=!0,t.return_dict_in_generate=!0}const a=await super.generate({inputs:e,generation_config:t,logits_processor:n,decoder_input_ids:i,...s});return t.return_token_timestamps&&(a.token_timestamps=this._extract_token_timestamps(a,t.alignment_heads,t.num_frames)),a}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");let s=this.config.median_filter_width;void 0===s&&(s=7);const i=e.cross_attentions,a=Array.from({length:this.config.decoder_layers},(e,t)=>(0,p.cat)(i.map(e=>e[t]),2)),o=(0,p.stack)(t.map(([e,t])=>{if(e>=a.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${a.length}).`);return n?a[e].slice(null,t,null,[0,n]):a[e].slice(null,t)})).transpose(1,0,2,3),[u,d]=(0,p.std_mean)(o,-2,0,!0),c=o.clone();for(let l=0;l<c.dims[0];++l){const e=c[l];for(let t=0;t<e.dims[0];++t){const n=e[t],r=u[l][t][0].data,i=d[l][t][0].data;for(let e=0;e<n.dims[0];++e){let t=n[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-i[e])/r[e];t.set((0,m.medianFilter)(t,s))}}}const h=[(0,p.mean)(c,1)],f=e.sequences.dims,_=new p.Tensor("float32",new Float32Array(f[0]*f[1]),f);for(let p=0;p<f[0];++p){const e=h[p].neg().squeeze_(0),[t,n]=(0,m.dynamic_time_warping)(e.tolist()),s=Array.from({length:t.length-1},(e,n)=>t[n+1]-t[n]),i=(0,l.mergeArrays)([1],s).map(e=>!!e),a=[];for(let o=0;o<i.length;++o)i[o]&&a.push(n[o]*r);_[p].data.set(a,1)}return _}}class Nn extends Dn{}class jn extends ie{constructor(){super(...arguments),t(this,"requires_attention_mask",!1),t(this,"main_input_name","input_values"),t(this,"forward_params",["input_values","decoder_input_ids","past_key_values"])}}class Rn extends jn{}class Vn extends jn{}class Gn extends ie{constructor(){super(...arguments),t(this,"main_input_name","pixel_values"),t(this,"forward_params",["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"])}}class qn extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Un extends qn{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Wn extends Un{}class Hn extends Un{}class Kn extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"]),t(this,"main_input_name","inputs_embeds")}}class Qn extends Kn{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){return{inputs_embeds:(0,p.cat)([t,e],1),attention_mask:(0,p.cat)([(0,p.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:n,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let s,i;return e&&(s=await this.encode_text({input_ids:e})),t&&(i=await this.encode_image({pixel_values:t})),s&&i?({inputs_embeds:n,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:s,image_features:i,input_ids:e,attention_mask:r})):n=s||i,{inputs_embeds:n,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:n,decoder_input_ids:r,decoder_attention_mask:s,encoder_outputs:i,past_key_values:a,inputs_embeds:o,decoder_inputs_embeds:l}){if(o||({inputs_embeds:o,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:o,attention_mask:n})),!i){let{last_hidden_state:e}=await U(this,{inputs_embeds:o,attention_mask:n});i=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const u={inputs_embeds:l,attention_mask:s,encoder_attention_mask:n,encoder_hidden_states:i,past_key_values:a};return await H(this,u,!0)}}class Xn extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","pixel_values","position_ids","past_key_values"])}}class Jn extends Xn{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Yn extends qn{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Zn extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"])}}class er extends Zn{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:n=null,input_features:r=null,input_features_mask:s=null,position_ids:i=null,inputs_embeds:a=null,per_layer_inputs:o=null,past_key_values:l=null,generation_config:u=null,logits_processor:d=null,...c}){if(!(a&&o||(({inputs_embeds:a,per_layer_inputs:o}=await j(this.sessions.embed_tokens,{input_ids:e})),1===e.dims[1]))){if(n){const{image_features:r}=await j(this.sessions.vision_encoder,{pixel_values:n});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_image_features({image_features:r,inputs_embeds:a,input_ids:e,attention_mask:t}))}if(r){const{audio_features:n}=await j(this.sessions.audio_encoder,{input_features:r,input_features_mask:s});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_audio_features({audio_features:n,inputs_embeds:a,input_ids:e,attention_mask:t}))}}return await H(this,{inputs_embeds:a,per_layer_inputs:o,past_key_values:l,attention_mask:t,position_ids:i,generation_config:u,logits_processor:d},!0)}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_id,...e,image_features:n})}_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),n=e.audio_features.view(-1,t);return X({audio_token_id:this.config.audio_token_id,...e,audio_features:n})}}class tr extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"])}}class nr extends tr{async encode_image({pixel_values:e,pixel_attention_mask:t}){return(await j(this.sessions.vision_encoder,{pixel_values:e,pixel_attention_mask:t})).image_features}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_id,...e,image_features:n})}}class rr extends nr{}class sr extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"])}}class ir extends sr{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:n=null,image_sizes:r=null,position_ids:s=null,inputs_embeds:i=null,past_key_values:a=null,generation_config:o=null,logits_processor:l=null,...u}){if(!i){let t;if(n&&1!==e.dims[1]){if(!r)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:t}=await j(this.sessions.vision_encoder,{pixel_values:n,image_sizes:r}))}else{const e=this.config.normalized_config.hidden_size;t=new p.Tensor("float32",[],[0,e])}({inputs_embeds:i}=await j(this.sessions.prepare_inputs_embeds,{input_ids:e,image_features:t}))}return await H(this,{inputs_embeds:i,past_key_values:a,attention_mask:t,position_ids:s,generation_config:o,logits_processor:l},!1)}}class ar extends ie{}class or extends ar{}class lr extends ar{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class ur extends ar{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class dr extends ar{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class cr extends ar{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class pr extends ie{}class hr extends pr{}class mr extends pr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class fr extends ar{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class _r extends ie{}class gr extends _r{}class wr extends ie{}class br extends wr{async forward(e){const t=!e.input_ids,n=!e.pixel_values;if(t&&n)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(t&&(e.input_ids=(0,p.ones)([e.pixel_values.dims[0],1])),n){const{image_size:t}=this.config.vision_config;e.pixel_values=(0,p.full)([0,3,t,t],0)}const{text_embeddings:r,image_embeddings:s,l2norm_text_embeddings:i,l2norm_image_embeddings:a}=await super.forward(e),o={};return t||(o.text_embeddings=r,o.l2norm_text_embeddings=i),n||(o.image_embeddings=s,o.l2norm_image_embeddings=a),o}}class yr extends wr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class vr extends wr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class xr extends ie{}class Mr extends xr{}class kr extends xr{}class Tr extends ie{}class $r extends Tr{}class Sr extends Tr{}class Cr extends ie{}class Er extends Cr{}class Pr extends Cr{}class Ar extends ie{}class Ir extends Ar{}class zr extends Ar{}class Fr extends ie{}class Or extends Fr{}class Lr extends Fr{}class Br extends ie{}class Dr extends Br{}class Nr extends Br{}class jr extends ie{}class Rr extends jr{}class Vr extends jr{}class Gr extends ie{}class qr extends Gr{}class Ur extends Gr{}class Wr extends ie{}class Hr extends Wr{}class Kr extends Wr{}class Qr extends ie{}class Xr extends Qr{}class Jr extends Qr{}class Yr extends ie{}class Zr extends Yr{}class es extends Yr{}class ts extends ie{}class ns extends ts{}class rs extends ts{}class ss extends ie{}class is extends ss{}class as extends ss{}class os extends ie{}class ls extends os{}class us extends os{}class ds extends ie{}class cs extends ds{}class ps extends ds{}class hs extends ie{}class ms extends hs{}class fs extends hs{}class _s extends ie{}class gs extends _s{}class ws extends _s{}class bs extends ie{}class ys extends bs{}class vs extends bs{}class xs extends ie{}class Ms extends xs{}class ks extends xs{}class Ts extends ie{}class $s extends Ts{}class Ss extends Ts{}class Cs extends ie{}class Es extends Cs{}class Ps extends Cs{}class As extends ie{}class Is extends As{}class zs extends As{}class Fs extends ie{}class Os extends Fs{}class Ls extends Fs{}class Bs extends ie{}class Ds extends Bs{}class Ns extends Bs{}class js extends ie{}class Rs extends js{}class Vs extends js{}class Gs extends ie{}class qs extends Gs{}class Us extends Gs{}class Ws extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"])}}class Hs extends Ws{get_rope_index(e,t,n,r){const{vision_config:s,image_token_id:i,video_token_id:a,vision_start_token_id:o}=this.config,l=s.spatial_merge_size??2,u=[];if(t||n){let s=e.tolist();r||(r=(0,p.ones_like)(e));const d=r.tolist(),c=Array.from({length:3},t=>Array.from({length:e.dims[0]},t=>Array.from({length:e.dims[1]},e=>1))),h=t?t.tolist():[],f=n?n.tolist():[];let _=0,g=0;for(let e=0;e<s.length;++e){const t=s[e].filter((t,n)=>1==d[e][n]),n=t.reduce((e,t,n)=>(t==o&&e.push(n),e),[]).map(e=>t[e+1]),r=n.filter(e=>e==i).length,p=n.filter(e=>e==a).length;let w=[],b=0,y=r,v=p;for(let e=0;e<n.length;++e){const e=t.findIndex((e,t)=>t>b&&e==i),n=t.findIndex((e,t)=>t>b&&e==a),r=y>0&&-1!==e?e:t.length+1,s=v>0&&-1!==n?n:t.length+1;let o,u,d,c;r<s?([u,d,c]=h[_],++_,--y,o=r):([u,d,c]=f[g],++g,--v,o=s);const[p,x,M]=[Number(u),Math.floor(Number(d)/l),Math.floor(Number(c)/l)],k=o-b,T=w.length>0?(0,m.max)(w.at(-1))[0]+1:0;w.push(Array.from({length:3*k},(e,t)=>T+t%k));const $=k+T,S=p*x*M,C=Array.from({length:S},(e,t)=>$+Math.floor(t/(x*M))),E=Array.from({length:S},(e,t)=>$+Math.floor(t/M)%x),P=Array.from({length:S},(e,t)=>$+t%M);w.push([C,E,P].flat()),b=o+S}if(b<t.length){const e=w.length>0?(0,m.max)(w.at(-1))[0]+1:0,n=t.length-b;w.push(Array.from({length:3*n},(t,r)=>e+r%n))}const x=w.reduce((e,t)=>e+t.length,0),M=new Array(x);let k=0;for(let e=0;e<3;++e)for(let t=0;t<w.length;++t){const n=w[t],r=n.length/3;for(let t=e*r;t<(e+1)*r;++t)M[k++]=n[t]}let T=0;const $=d[e];for(let s=0;s<$.length;++s)if(1==$[s]){for(let t=0;t<3;++t)c[t][e][s]=M[t*x/3+T];++T}const S=(0,m.max)(M)[0];u.push(S+1-s[e].length)}return[new p.Tensor("int64",c.flat(1/0),[3,e.dims[0],e.dims[1]]),new p.Tensor("int64",u,[u.length,1])]}if(r){const{data:e,dims:t}=ee(r),n=BigInt64Array.from({length:3*e.length},(t,n)=>e[n%e.length]),s=Array.from({length:t[0]},(n,r)=>(0,m.max)(e.subarray(t[1]*r,t[1]*(r+1)))[0]+1n+BigInt(t[1]));return[new p.Tensor("int64",n,[3,...t]),new p.Tensor("int64",s,[s.length,1])]}{const[t,n]=e.dims,r=BigInt64Array.from({length:3*t*n},(e,r)=>BigInt(Math.floor(r%n/t)));return[new p.Tensor("int64",r,[3,...e.dims]),(0,p.zeros)([t,1])]}}async encode_image({pixel_values:e,image_grid_thw:t}){return(await j(this.sessions.vision_encoder,{pixel_values:e,grid_thw:t})).image_features}_merge_input_ids_with_image_features(e){return Q({image_token_id:this.config.image_token_id,...e})}prepare_inputs_for_generation(e,t,n){if(t.attention_mask&&!t.position_ids)if(t.past_key_values){t.pixel_values=null;const e=BigInt(Object.values(t.past_key_values)[0].dims.at(-2)),n=t.rope_deltas.map(t=>e+t);t.position_ids=(0,p.stack)([n,n,n],0)}else[t.position_ids,t.rope_deltas]=this.get_rope_index(t.input_ids,t.image_grid_thw,t.video_grid_thw,t.attention_mask);return t}}class Ks extends ie{}class Qs extends Ks{}class Xs extends Ks{}class Js extends ie{}class Ys extends Js{}class Zs extends Js{}class ei extends ie{}class ti extends ei{}class ni extends ei{}class ri extends ie{}class si extends ri{}class ii extends ri{}class ai extends ie{}class oi extends ai{}class li extends ai{}class ui extends ie{}class di extends ui{}class ci extends ui{async _call(e){return new hc(await super._call(e))}}class pi extends ie{}class hi extends pi{}class mi extends pi{async _call(e){return new hc(await super._call(e))}}class fi extends ie{}class _i extends fi{}class gi extends ie{}class wi extends gi{}class bi extends gi{async _call(e){return new hc(await super._call(e))}}class yi extends ie{}class vi extends yi{}class xi extends ie{}class Mi extends xi{}class ki extends xi{async _call(e){return new hc(await super._call(e))}}class Ti extends ie{}class $i extends Ti{}class Si extends ie{}class Ci extends Si{}class Ei extends Si{async _call(e){return new hc(await super._call(e))}}class Pi extends ie{}class Ai extends Pi{async _call(e){return new yc(await super._call(e))}}class Ii extends ie{}class zi extends Ii{}class Fi extends Ii{async _call(e){return new hc(await super._call(e))}}class Oi extends ie{}class Li extends Oi{}class Bi extends Oi{async _call(e){return new hc(await super._call(e))}}class Di extends ie{}class Ni extends Di{}class ji extends Di{}class Ri extends ie{}class Vi extends Ri{}class Gi extends Ri{}class qi extends ie{}class Ui extends qi{}class Wi extends qi{async _call(e){return new hc(await super._call(e))}}class Hi extends ie{}class Ki extends Hi{}class Qi extends Hi{async _call(e){return new Ji(await super._call(e))}}class Xi extends Hi{async _call(e){return new Yi(await super._call(e))}}class Ji extends ae{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Yi extends ae{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class Zi extends ie{}class ea extends Zi{}class ta extends Zi{async _call(e){return new na(await super._call(e))}}class na extends ae{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class ra extends ie{}class sa extends ra{}class ia extends ra{async _call(e){return new aa(await super._call(e))}}class aa extends na{}class oa extends ie{}class la extends oa{}class ua extends oa{async _call(e){return new da(await super._call(e))}}class da extends na{}class ca extends ie{}class pa extends ca{}class ha extends ca{async _call(e){return new na(await super._call(e))}}class ma extends ie{}class fa extends ma{}class _a extends ma{async _call(e){return new ga(await super._call(e))}}class ga extends Ji{}class wa extends ie{}class ba extends wa{}class ya extends wa{async _call(e){return new hc(await super._call(e))}}class va extends ie{}class xa extends va{}class Ma extends va{async _call(e){return new hc(await super._call(e))}}class ka extends ie{}class Ta extends ka{}class $a extends ka{async _call(e){return new hc(await super._call(e))}}class Sa extends ie{}class Ca extends Sa{}class Ea extends Sa{async _call(e){return new hc(await super._call(e))}}class Pa extends Sa{}class Aa extends ie{}class Ia extends Aa{}class za extends Aa{}class Fa extends ie{}class Oa extends Fa{}class La extends Fa{}class Ba extends ie{}class Da extends Ba{}class Na extends ie{}class ja extends Na{}class Ra extends Na{}class Va extends Na{}class Ga extends ie{}class qa extends Ga{}class Ua extends ie{}class Wa extends Ua{}class Ha extends ie{}class Ka extends Ha{}class Qa extends ie{}class Xa extends Qa{}class Ja extends Qa{}class Ya extends ie{}class Za extends Ya{}class eo extends Ya{}class to extends ie{}class no extends to{}class ro extends ie{}class so extends ro{}class io extends ro{async _call(e){return new hc(await super._call(e))}}class ao extends ie{}class oo extends ao{}class lo extends ao{async _call(e){return new hc(await super._call(e))}}class uo extends ie{}class co extends uo{}class po extends uo{async _call(e){return new hc(await super._call(e))}}class ho extends ie{}class mo extends ho{}class fo extends ho{async _call(e){return new hc(await super._call(e))}}class _o extends ie{}class go extends _o{}class wo extends ie{}class bo extends wo{}class yo extends ie{}class vo extends yo{}class xo extends ie{}class Mo extends xo{}class ko extends xo{async _call(e){return new To(await super._call(e))}}class To extends ae{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class $o extends ie{}class So extends $o{async get_image_embeddings({pixel_values:e}){return await U(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce((e,t)=>e*t,1);e.input_labels=new p.Tensor("int64",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await j(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new Co(await super._call(e))}}class Co extends ae{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class Eo extends ie{}class Po extends Eo{}class Ao extends Eo{}class Io extends ie{}class zo extends Io{}class Fo extends Io{}class Oo extends ie{}class Lo extends Oo{}class Bo extends Oo{async _call(e){return new wc(await super._call(e))}}class Do extends Oo{async _call(e){return new hc(await super._call(e))}}class No extends Oo{async _call(e){return new fc(await super._call(e))}}class jo extends ie{}class Ro extends jo{}class Vo extends jo{async _call(e){return new fc(await super._call(e))}}class Go extends ie{}class qo extends Go{}class Uo extends ie{}class Wo extends Uo{}class Ho extends Uo{async _call(e){return new wc(await super._call(e))}}class Ko extends Uo{async _call(e){return new hc(await super._call(e))}}class Qo extends ie{}class Xo extends Qo{}class Jo extends Qo{async _call(e){return new wc(await super._call(e))}}class Yo extends Qo{async _call(e){return new hc(await super._call(e))}}class Zo extends Qo{async _call(e){return new fc(await super._call(e))}}class el extends ie{}class tl extends el{}class nl extends el{async _call(e){return new wc(await super._call(e))}}class rl extends el{async _call(e){return new hc(await super._call(e))}}class sl extends ie{}class il extends Oo{}class al extends Oo{async _call(e){return new wc(await super._call(e))}}class ol extends Oo{async _call(e){return new hc(await super._call(e))}}class ll extends ie{}class ul extends ll{}class dl extends ll{async _call(e){return new wc(await super._call(e))}}class cl extends ll{async _call(e){return new hc(await super._call(e))}}class pl extends ll{async _call(e){return new mc(await super._call(e))}}class hl extends ll{async _call(e){return new fc(await super._call(e))}}class ml extends ie{}class fl extends ml{}class _l extends ie{}class gl extends _l{}class wl extends _l{}class bl extends _l{async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:s=20,vocoder:i=null}={}){const a={input_ids:e},{encoder_outputs:o,encoder_attention_mask:l}=await U(this,a),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*s),c=Math.floor(u*r),h=this.config.num_mel_bins;let m=[],f=null,_=null,g=0;for(;;){++g;const e=G(!!_);let r;r=_?_.output_sequence_out:new p.Tensor("float32",new Float32Array(h),[1,1,h]);let s={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:o};this.addPastKeyValues(s,f),_=await j(this.sessions.decoder_model_merged,s),f=this.getPastKeyValues(_,f);const{prob:i,spectrum:a}=_;if(m.push(a),g>=c&&(Array.from(i.data).filter(e=>e>=n).length>0||g>=d))break}const w=(0,p.cat)(m),{waveform:b}=await j(i.sessions.model,{spectrogram:w});return{spectrogram:w,waveform:b}}}class yl extends ie{constructor(){super(...arguments),t(this,"main_input_name","spectrogram")}}class vl extends ie{}class xl extends vl{}class Ml extends ie{}class kl extends Ml{}class Tl extends Ml{}class $l extends ie{}class Sl extends $l{}class Cl extends $l{}class El extends ie{}class Pl extends El{}class Al extends El{}class Il extends ie{}class zl extends Il{}class Fl extends Il{}class Ol extends ie{}class Ll extends Ol{}class Bl extends Ol{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Dl extends Ol{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"audio_model"})}}class Nl extends ie{}class jl extends Nl{async _call(e){return new vc(await super._call(e))}}class Rl extends ie{}class Vl extends Rl{}class Gl extends Rl{}class ql extends Rl{}class Ul extends ie{}class Wl extends Ul{}class Hl extends Ul{}class Kl extends ie{}class Ql extends Kl{}class Xl extends Kl{async _call(e){return new hc(await super._call(e))}}class Jl extends ie{}class Yl extends Jl{}class Zl extends Jl{}class eu extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"])}_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,s=n-r;let i=0;for(let l=0;l<e.size;++l){if(e.data[l]===this.config.decoder.pad_token_id)continue;const t=l%n-Math.floor(l/n)%r;t>0&&t<=s&&(e.data[i++]=e.data[l])}const a=Math.floor(t/r),o=i/(a*r);return new p.Tensor(e.type,e.data.slice(0,i),[a,r,o])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let s=0;s<r.length;++s)for(let e=0;e<r[s].length;++e)s%this.config.decoder.num_codebooks>=e&&(r[s][e]=BigInt(this.config.decoder.pad_token_id));null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await j(this.sessions.encodec_decode,{audio_codes:n});return r}}class tu extends ie{}class nu extends tu{}class ru extends tu{async _call(e){return new hc(await super._call(e))}}class su extends tu{}class iu extends ie{}class au extends iu{}class ou extends iu{async _call(e){return new hc(await super._call(e))}}class lu extends iu{}class uu extends ie{}class du extends uu{}class cu extends uu{async _call(e){return new hc(await super._call(e))}}class pu extends uu{}class hu extends ie{}class mu extends hu{}class fu extends hu{async _call(e){return new hc(await super._call(e))}}class _u extends hu{}class gu extends ie{}class wu extends gu{}class bu extends ie{}class yu extends bu{constructor(...e){super(...e),t(this,"forward_params",["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"]),this._generation_mode="text"}async forward(e){const t=this._generation_mode??"text";let n;if("text"!==t&&e.past_key_values){const t=this.sessions.gen_img_embeds,r=(0,l.pick)({image_ids:e.input_ids},t.inputNames);n=await j(t,r)}else{const t=this.sessions.prepare_inputs_embeds,r=(0,l.pick)(e,t.inputNames);n=await j(t,r)}const r={...e,...n},s=await H(this,r),i=this.sessions["text"===t?"lm_head":"gen_head"];if(!i)throw new Error(`Unable to find "${i}" generation head`);const a=await j(i,(0,l.pick)(s,i.inputNames));return{...n,...s,...a}}async generate(e){return this._generation_mode="text",super.generate(e)}async generate_images(e){this._generation_mode="image";const t=(e.inputs??e[this.main_input_name]).dims[1],n=(await super.generate(e)).slice(null,[t,null]),r=this.sessions.image_decode,{decoded_image:s}=await j(r,{generated_tokens:n}),i=s.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),a=[];for(const o of i){const e=h.RawImage.fromTensor(o);a.push(e)}return a}}class vu extends ae{constructor({char_logits:e,bpe_logits:t,wp_logits:n}){super(),this.char_logits=e,this.bpe_logits=t,this.wp_logits=n}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class xu extends ie{}class Mu extends xu{async _call(e){return new vu(await super._call(e))}}class ku extends ie{}class Tu extends ku{}class $u extends ku{}class Su extends ie{}class Cu extends Su{}class Eu extends Su{}class Pu extends ie{constructor(){super(...arguments),t(this,"forward_params",["input_ids","attention_mask","position_ids","audio_values","past_key_values"])}}class Au extends Pu{_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),n=e.audio_features.view(-1,t);return X({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...e,audio_features:n})}}class Iu extends Au{}class zu extends ie{constructor(){super(...arguments),t(this,"main_input_name","input_values"),t(this,"forward_params",["input_values"])}}class Fu extends ae{constructor({audio_codes:e}){super(),this.audio_codes=e}}class Ou extends ae{constructor({audio_values:e}){super(),this.audio_values=e}}class Lu extends zu{async encode(e){return new Fu(await j(this.sessions.encoder_model,e))}async decode(e){return new Ou(await j(this.sessions.decoder_model,e))}}class Bu extends zu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Du extends zu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Nu extends ie{constructor(){super(...arguments),t(this,"main_input_name","input_values"),t(this,"forward_params",["input_values"])}}class ju extends ae{constructor({audio_codes:e}){super(),this.audio_codes=e}}class Ru extends ae{constructor({audio_values:e}){super(),this.audio_values=e}}class Vu extends Nu{async encode(e){return new ju(await j(this.sessions.encoder_model,e))}async decode(e){return new Ru(await j(this.sessions.decoder_model,e))}}class Gu extends Nu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class qu extends Nu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Uu extends ie{constructor(){super(...arguments),t(this,"main_input_name","input_values"),t(this,"forward_params",["input_values"])}}class Wu extends Uu{async encode(e){return await j(this.sessions.encoder_model,e)}async decode(e){return await j(this.sessions.decoder_model,e)}}class Hu extends Uu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Ku extends Uu{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Qu{static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:i=!1,revision:a="main",model_file_name:o=null,subfolder:l="onnx",device:u=null,dtype:d=null,use_external_data_format:c=null,session_options:p={}}={}){const h={progress_callback:t,config:n,cache_dir:r,local_files_only:i,revision:a,model_file_name:o,subfolder:l,device:u,dtype:d,use_external_data_format:c,session_options:p};if(h.config=await s.AutoConfig.from_pretrained(e,h),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const m=h.config.model_type;for(const s of this.MODEL_CLASS_MAPPINGS){let t=s.get(m);if(!t){for(const e of s.values())if(e[0]===m){t=e;break}if(!t)continue}return await t[1].from_pretrained(e,h)}if(this.BASE_IF_FAIL)return Fd.has(m),await ie.from_pretrained(e,h);throw Error(`Unsupported model type: ${m}`)}}t(Qu,"MODEL_CLASS_MAPPINGS",null),t(Qu,"BASE_IF_FAIL",!1);const Xu=new Map([["bert",["BertModel",ue]],["neobert",["NeoBertModel",fe]],["modernbert",["ModernBertModel",ve]],["nomic_bert",["NomicBertModel",Ee]],["roformer",["RoFormerModel",Ae]],["electra",["ElectraModel",Ge]],["esm",["EsmModel",bt]],["convbert",["ConvBertModel",Be]],["camembert",["CamembertModel",Qe]],["deberta",["DebertaModel",tt]],["deberta-v2",["DebertaV2Model",ot]],["mpnet",["MPNetModel",Et]],["albert",["AlbertModel",jt]],["distilbert",["DistilBertModel",ht]],["roberta",["RobertaModel",_n]],["xlm",["XLMModel",xn]],["xlm-roberta",["XLMRobertaModel",Cn]],["clap",["ClapModel",Ll]],["clip",["CLIPModel",or]],["clipseg",["CLIPSegModel",Mr]],["chinese_clip",["ChineseCLIPModel",gr]],["siglip",["SiglipModel",hr]],["jina_clip",["JinaCLIPModel",br]],["mobilebert",["MobileBertModel",kt]],["squeezebert",["SqueezeBertModel",Ot]],["wav2vec2",["Wav2Vec2Model",Lo]],["wav2vec2-bert",["Wav2Vec2BertModel",tl]],["unispeech",["UniSpeechModel",Wo]],["unispeech-sat",["UniSpeechSatModel",Xo]],["hubert",["HubertModel",il]],["wavlm",["WavLMModel",ul]],["audio-spectrogram-transformer",["ASTModel",Fn]],["vits",["VitsModel",jl]],["pyannote",["PyAnnoteModel",Ro]],["wespeaker-resnet",["WeSpeakerResNetModel",qo]],["detr",["DetrModel",Ki]],["rt_detr",["RTDetrModel",ea]],["rt_detr_v2",["RTDetrV2Model",sa]],["rf_detr",["RFDetrModel",la]],["d_fine",["DFineModel",pa]],["table-transformer",["TableTransformerModel",fa]],["vit",["ViTModel",di]],["ijepa",["IJepaModel",hi]],["pvt",["PvtModel",wi]],["vit_msn",["ViTMSNModel",Mi]],["vit_mae",["ViTMAEModel",vi]],["groupvit",["GroupViTModel",$i]],["fastvit",["FastViTModel",Ci]],["mobilevit",["MobileViTModel",zi]],["mobilevitv2",["MobileViTV2Model",Li]],["owlvit",["OwlViTModel",Ni]],["owlv2",["Owlv2Model",Vi]],["beit",["BeitModel",Ui]],["deit",["DeiTModel",ba]],["hiera",["HieraModel",xa]],["convnext",["ConvNextModel",so]],["convnextv2",["ConvNextV2Model",oo]],["dinov2",["Dinov2Model",co]],["dinov2_with_registers",["Dinov2WithRegistersModel",mo]],["dinov3_vit",["DINOv3ViTModel",go]],["dinov3_convnext",["DINOv3ConvNextModel",bo]],["resnet",["ResNetModel",Ta]],["swin",["SwinModel",Ca]],["swin2sr",["Swin2SRModel",Ia]],["donut-swin",["DonutSwinModel",no]],["yolos",["YolosModel",Mo]],["dpt",["DPTModel",Oa]],["glpn",["GLPNModel",Za]],["hifigan",["SpeechT5HifiGan",yl]],["efficientnet",["EfficientNetModel",Ql]],["decision_transformer",["DecisionTransformerModel",wu]],["patchtst",["PatchTSTForPrediction",Tu]],["patchtsmixer",["PatchTSMixerForPrediction",Cu]],["mobilenet_v1",["MobileNetV1Model",nu]],["mobilenet_v2",["MobileNetV2Model",au]],["mobilenet_v3",["MobileNetV3Model",du]],["mobilenet_v4",["MobileNetV4Model",mu]],["maskformer",["MaskFormerModel",Xa]],["mgp-str",["MgpstrForSceneTextRecognition",Mu]],["style_text_to_speech_2",["StyleTextToSpeech2Model",fl]]]),Ju=new Map([["t5",["T5Model",Ut]],["longt5",["LongT5Model",Kt]],["mt5",["MT5Model",Jt]],["bart",["BartModel",en]],["mbart",["MBartModel",sn]],["marian",["MarianModel",Po]],["whisper",["WhisperModel",Bn]],["m2m_100",["M2M100Model",zo]],["blenderbot",["BlenderbotModel",dn]],["blenderbot-small",["BlenderbotSmallModel",hn]]]),Yu=new Map([["mimi",["MimiModel",Lu]],["dac",["DacModel",Vu]],["snac",["SnacModel",Wu]]]),Zu=new Map([["bloom",["BloomModel",ti]],["jais",["JAISModel",Er]],["gpt2",["GPT2Model",$r]],["gptj",["GPTJModel",Dr]],["gpt_bigcode",["GPTBigCodeModel",Rr]],["gpt_neo",["GPTNeoModel",Ir]],["gpt_neox",["GPTNeoXModel",Or]],["codegen",["CodeGenModel",qr]],["llama",["LlamaModel",Hr]],["arcee",["ArceeModel",Xr]],["lfm2",["Lfm2Model",Zr]],["smollm3",["SmolLM3Model",ns]],["exaone",["ExaoneModel",cs]],["olmo",["OlmoModel",gs]],["olmo2",["Olmo2Model",ys]],["mobilellm",["MobileLLMModel",ms]],["granite",["GraniteModel",Ms]],["cohere",["CohereModel",$s]],["gemma",["GemmaModel",Es]],["gemma2",["Gemma2Model",Is]],["gemma3_text",["Gemma3Model",Os]],["helium",["HeliumModel",is]],["glm",["GlmModel",ls]],["openelm",["OpenELMModel",Ds]],["qwen2",["Qwen2Model",Rs]],["qwen3",["Qwen3Model",qs]],["phi",["PhiModel",Qs]],["phi3",["Phi3Model",Ys]],["mpt",["MptModel",si]],["opt",["OPTModel",oi]],["mistral",["MistralModel",kl]],["ernie4_5",["Ernie4_5_Model",Sl]],["starcoder2",["Starcoder2Model",Pl]],["falcon",["FalconModel",zl]],["stablelm",["StableLmModel",Wl]],["modernbert-decoder",["ModernBertDecoderModel",$e]]]),ed=new Map([["speecht5",["SpeechT5ForSpeechToText",wl]],["whisper",["WhisperForConditionalGeneration",Dn]],["lite-whisper",["LiteWhisperForConditionalGeneration",Nn]],["moonshine",["MoonshineForConditionalGeneration",Vn]]]),td=new Map([["speecht5",["SpeechT5ForTextToSpeech",bl]]]),nd=new Map([["vits",["VitsModel",jl]],["musicgen",["MusicgenForConditionalGeneration",eu]]]),rd=new Map([["bert",["BertForSequenceClassification",ce]],["neobert",["NeoBertForSequenceClassification",ge]],["modernbert",["ModernBertForSequenceClassification",Me]],["roformer",["RoFormerForSequenceClassification",ze]],["electra",["ElectraForSequenceClassification",Ue]],["esm",["EsmForSequenceClassification",vt]],["convbert",["ConvBertForSequenceClassification",Ne]],["camembert",["CamembertForSequenceClassification",Je]],["deberta",["DebertaForSequenceClassification",rt]],["deberta-v2",["DebertaV2ForSequenceClassification",ut]],["mpnet",["MPNetForSequenceClassification",At]],["albert",["AlbertForSequenceClassification",Rt]],["distilbert",["DistilBertForSequenceClassification",mt]],["roberta",["RobertaForSequenceClassification",wn]],["xlm",["XLMForSequenceClassification",kn]],["xlm-roberta",["XLMRobertaForSequenceClassification",Pn]],["bart",["BartForSequenceClassification",nn]],["mbart",["MBartForSequenceClassification",on]],["mobilebert",["MobileBertForSequenceClassification",$t]],["squeezebert",["SqueezeBertForSequenceClassification",Bt]]]),sd=new Map([["bert",["BertForTokenClassification",pe]],["neobert",["NeoBertForTokenClassification",we]],["modernbert",["ModernBertForTokenClassification",ke]],["roformer",["RoFormerForTokenClassification",Fe]],["electra",["ElectraForTokenClassification",We]],["esm",["EsmForTokenClassification",xt]],["convbert",["ConvBertForTokenClassification",je]],["camembert",["CamembertForTokenClassification",Ye]],["deberta",["DebertaForTokenClassification",st]],["deberta-v2",["DebertaV2ForTokenClassification",dt]],["mpnet",["MPNetForTokenClassification",It]],["distilbert",["DistilBertForTokenClassification",ft]],["roberta",["RobertaForTokenClassification",bn]],["xlm",["XLMForTokenClassification",Tn]],["xlm-roberta",["XLMRobertaForTokenClassification",An]]]),id=new Map([["t5",["T5ForConditionalGeneration",Wt]],["longt5",["LongT5ForConditionalGeneration",Qt]],["mt5",["MT5ForConditionalGeneration",Yt]],["bart",["BartForConditionalGeneration",tn]],["mbart",["MBartForConditionalGeneration",an]],["marian",["MarianMTModel",Ao]],["m2m_100",["M2M100ForConditionalGeneration",Fo]],["blenderbot",["BlenderbotForConditionalGeneration",cn]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",mn]]]),ad=new Map([["bloom",["BloomForCausalLM",ni]],["gpt2",["GPT2LMHeadModel",Sr]],["jais",["JAISLMHeadModel",Pr]],["gptj",["GPTJForCausalLM",Nr]],["gpt_bigcode",["GPTBigCodeForCausalLM",Vr]],["gpt_neo",["GPTNeoForCausalLM",zr]],["gpt_neox",["GPTNeoXForCausalLM",Lr]],["codegen",["CodeGenForCausalLM",Ur]],["llama",["LlamaForCausalLM",Kr]],["arcee",["ArceeForCausalLM",Jr]],["lfm2",["Lfm2ForCausalLM",es]],["smollm3",["SmolLM3ForCausalLM",rs]],["exaone",["ExaoneForCausalLM",ps]],["olmo",["OlmoForCausalLM",ws]],["olmo2",["Olmo2ForCausalLM",vs]],["mobilellm",["MobileLLMForCausalLM",fs]],["granite",["GraniteForCausalLM",ks]],["cohere",["CohereForCausalLM",Ss]],["gemma",["GemmaForCausalLM",Ps]],["gemma2",["Gemma2ForCausalLM",zs]],["gemma3_text",["Gemma3ForCausalLM",Ls]],["helium",["HeliumForCausalLM",as]],["glm",["GlmForCausalLM",us]],["openelm",["OpenELMForCausalLM",Ns]],["qwen2",["Qwen2ForCausalLM",Vs]],["qwen3",["Qwen3ForCausalLM",Us]],["phi",["PhiForCausalLM",Xs]],["phi3",["Phi3ForCausalLM",Zs]],["mpt",["MptForCausalLM",ii]],["opt",["OPTForCausalLM",li]],["mbart",["MBartForCausalLM",ln]],["mistral",["MistralForCausalLM",Tl]],["ernie4_5",["Ernie4_5_ForCausalLM",Cl]],["starcoder2",["Starcoder2ForCausalLM",Al]],["falcon",["FalconForCausalLM",Fl]],["trocr",["TrOCRForCausalLM",xl]],["stablelm",["StableLmForCausalLM",Hl]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Se]],["phi3_v",["Phi3VForCausalLM",ir]]]),od=new Map([["multi_modality",["MultiModalityCausalLM",yu]]]),ld=new Map([["bert",["BertForMaskedLM",de]],["neobert",["NeoBertForMaskedLM",_e]],["modernbert",["ModernBertForMaskedLM",xe]],["roformer",["RoFormerForMaskedLM",Ie]],["electra",["ElectraForMaskedLM",qe]],["esm",["EsmForMaskedLM",yt]],["convbert",["ConvBertForMaskedLM",De]],["camembert",["CamembertForMaskedLM",Xe]],["deberta",["DebertaForMaskedLM",nt]],["deberta-v2",["DebertaV2ForMaskedLM",lt]],["mpnet",["MPNetForMaskedLM",Pt]],["albert",["AlbertForMaskedLM",Gt]],["distilbert",["DistilBertForMaskedLM",gt]],["roberta",["RobertaForMaskedLM",gn]],["xlm",["XLMWithLMHeadModel",Mn]],["xlm-roberta",["XLMRobertaForMaskedLM",En]],["mobilebert",["MobileBertForMaskedLM",Tt]],["squeezebert",["SqueezeBertForMaskedLM",Lt]]]),ud=new Map([["bert",["BertForQuestionAnswering",he]],["neobert",["NeoBertForQuestionAnswering",be]],["roformer",["RoFormerForQuestionAnswering",Oe]],["electra",["ElectraForQuestionAnswering",He]],["convbert",["ConvBertForQuestionAnswering",Re]],["camembert",["CamembertForQuestionAnswering",Ze]],["deberta",["DebertaForQuestionAnswering",it]],["deberta-v2",["DebertaV2ForQuestionAnswering",ct]],["mpnet",["MPNetForQuestionAnswering",zt]],["albert",["AlbertForQuestionAnswering",Vt]],["distilbert",["DistilBertForQuestionAnswering",_t]],["roberta",["RobertaForQuestionAnswering",yn]],["xlm",["XLMForQuestionAnswering",$n]],["xlm-roberta",["XLMRobertaForQuestionAnswering",In]],["mobilebert",["MobileBertForQuestionAnswering",St]],["squeezebert",["SqueezeBertForQuestionAnswering",Dt]]]),dd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Gn]],["idefics3",["Idefics3ForConditionalGeneration",nr]],["smolvlm",["SmolVLMForConditionalGeneration",rr]]]),cd=new Map([["llava",["LlavaForConditionalGeneration",Un]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Wn]],["moondream1",["Moondream1ForConditionalGeneration",Hn]],["florence2",["Florence2ForConditionalGeneration",Qn]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Hs]],["idefics3",["Idefics3ForConditionalGeneration",nr]],["smolvlm",["SmolVLMForConditionalGeneration",rr]],["paligemma",["PaliGemmaForConditionalGeneration",Jn]],["llava_qwen2",["LlavaQwen2ForCausalLM",Yn]],["gemma3n",["Gemma3nForConditionalGeneration",er]]]),pd=new Map([["ultravox",["UltravoxModel",Au]],["voxtral",["VoxtralForConditionalGeneration",Iu]]]),hd=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Gn]]]),md=new Map([["vit",["ViTForImageClassification",ci]],["ijepa",["IJepaForImageClassification",mi]],["pvt",["PvtForImageClassification",bi]],["vit_msn",["ViTMSNForImageClassification",ki]],["fastvit",["FastViTForImageClassification",Ei]],["mobilevit",["MobileViTForImageClassification",Fi]],["mobilevitv2",["MobileViTV2ForImageClassification",Bi]],["beit",["BeitForImageClassification",Wi]],["deit",["DeiTForImageClassification",ya]],["hiera",["HieraForImageClassification",Ma]],["convnext",["ConvNextForImageClassification",io]],["convnextv2",["ConvNextV2ForImageClassification",lo]],["dinov2",["Dinov2ForImageClassification",po]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",fo]],["resnet",["ResNetForImageClassification",$a]],["swin",["SwinForImageClassification",Ea]],["segformer",["SegformerForImageClassification",Gl]],["efficientnet",["EfficientNetForImageClassification",Xl]],["mobilenet_v1",["MobileNetV1ForImageClassification",ru]],["mobilenet_v2",["MobileNetV2ForImageClassification",ou]],["mobilenet_v3",["MobileNetV3ForImageClassification",cu]],["mobilenet_v4",["MobileNetV4ForImageClassification",fu]]]),fd=new Map([["detr",["DetrForObjectDetection",Qi]],["rt_detr",["RTDetrForObjectDetection",ta]],["rt_detr_v2",["RTDetrV2ForObjectDetection",ia]],["rf_detr",["RFDetrForObjectDetection",ua]],["d_fine",["DFineForObjectDetection",ha]],["table-transformer",["TableTransformerForObjectDetection",_a]],["yolos",["YolosForObjectDetection",ko]]]),_d=new Map([["owlvit",["OwlViTForObjectDetection",ji]],["owlv2",["Owlv2ForObjectDetection",Gi]],["grounding-dino",["GroundingDinoForObjectDetection",vo]]]),gd=new Map([["detr",["DetrForSegmentation",Xi]],["clipseg",["CLIPSegForImageSegmentation",kr]]]),wd=new Map([["segformer",["SegformerForSemanticSegmentation",ql]],["sapiens",["SapiensForSemanticSegmentation",ja]],["swin",["SwinForSemanticSegmentation",Pa]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",su]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",lu]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",pu]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",_u]]]),bd=new Map([["detr",["DetrForSegmentation",Xi]],["maskformer",["MaskFormerForInstanceSegmentation",Ja]]]),yd=new Map([["sam",["SamModel",So]]]),vd=new Map([["wav2vec2",["Wav2Vec2ForCTC",Bo]],["wav2vec2-bert",["Wav2Vec2BertForCTC",nl]],["unispeech",["UniSpeechForCTC",Ho]],["unispeech-sat",["UniSpeechSatForCTC",Jo]],["wavlm",["WavLMForCTC",dl]],["hubert",["HubertForCTC",al]]]),xd=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Do]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",rl]],["unispeech",["UniSpeechForSequenceClassification",Ko]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Yo]],["wavlm",["WavLMForSequenceClassification",cl]],["hubert",["HubertForSequenceClassification",ol]],["audio-spectrogram-transformer",["ASTForAudioClassification",On]]]),Md=new Map([["wavlm",["WavLMForXVector",pl]]]),kd=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Zo]],["wavlm",["WavLMForAudioFrameClassification",hl]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",No]],["pyannote",["PyAnnoteForAudioFrameClassification",Vo]]]),Td=new Map([["vitmatte",["VitMatteForImageMatting",Ai]]]),$d=new Map([["patchtst",["PatchTSTForPrediction",$u]],["patchtsmixer",["PatchTSMixerForPrediction",Eu]]]),Sd=new Map([["swin2sr",["Swin2SRForImageSuperResolution",za]]]),Cd=new Map([["dpt",["DPTForDepthEstimation",La]],["depth_anything",["DepthAnythingForDepthEstimation",Da]],["glpn",["GLPNForDepthEstimation",eo]],["sapiens",["SapiensForDepthEstimation",Ra]],["depth_pro",["DepthProForDepthEstimation",qa]],["metric3d",["Metric3DForDepthEstimation",Wa]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Ka]]]),Ed=new Map([["sapiens",["SapiensForNormalEstimation",Va]]]),Pd=new Map([["vitpose",["VitPoseForPoseEstimation",_i]]]),Ad=new Map([["clip",["CLIPVisionModelWithProjection",cr]],["siglip",["SiglipVisionModel",fr]],["jina_clip",["JinaCLIPVisionModel",vr]]]),Id=[[Xu,v],[Ju,x],[Zu,T],[Yu,I],[rd,v],[sd,v],[id,M],[ed,M],[ad,T],[od,E],[ld,v],[ud,v],[dd,k],[cd,S],[pd,A],[md,v],[gd,v],[bd,v],[wd,v],[Td,v],[$d,v],[Sd,v],[Cd,v],[Ed,v],[Pd,v],[fd,v],[_d,v],[yd,$],[vd,v],[xd,v],[td,M],[nd,v],[Md,v],[kd,v],[Ad,v]];for(const[t,y]of Id)for(const[e,n]of t.values())F.set(e,y),L.set(n,e),O.set(e,n);const zd=[["MusicgenForConditionalGeneration",eu,C],["Phi3VForCausalLM",ir,P],["CLIPTextModelWithProjection",ur,v],["SiglipTextModel",mr,v],["JinaCLIPTextModel",yr,v],["ClapTextModelWithProjection",Bl,v],["ClapAudioModelWithProjection",Dl,v],["DacEncoderModel",Gu,v],["DacDecoderModel",qu,v],["MimiEncoderModel",Bu,v],["MimiDecoderModel",Du,v],["SnacEncoderModel",Hu,v],["SnacDecoderModel",Ku,v],["Gemma3nForConditionalGeneration",er,z]];for(const[t,y,xc]of zd)F.set(t,xc),L.set(y,t),O.set(t,y);const Fd=new Map([["modnet",gd],["birefnet",gd],["isnet",gd],["ben",gd]]);for(const[t,y]of Fd.entries())y.set(t,["PreTrainedModel",ie]),F.set(t,v),L.set(ie,t),O.set(t,ie);class Od extends Qu{}t(Od,"MODEL_CLASS_MAPPINGS",Id.map(e=>e[0])),t(Od,"BASE_IF_FAIL",!0);class Ld extends Qu{}t(Ld,"MODEL_CLASS_MAPPINGS",[rd]);class Bd extends Qu{}t(Bd,"MODEL_CLASS_MAPPINGS",[sd]);class Dd extends Qu{}t(Dd,"MODEL_CLASS_MAPPINGS",[id]);class Nd extends Qu{}t(Nd,"MODEL_CLASS_MAPPINGS",[ed]);class jd extends Qu{}t(jd,"MODEL_CLASS_MAPPINGS",[td]);class Rd extends Qu{}t(Rd,"MODEL_CLASS_MAPPINGS",[nd]);class Vd extends Qu{}t(Vd,"MODEL_CLASS_MAPPINGS",[ad]);class Gd extends Qu{}t(Gd,"MODEL_CLASS_MAPPINGS",[ld]);class qd extends Qu{}t(qd,"MODEL_CLASS_MAPPINGS",[ud]);class Ud extends Qu{}t(Ud,"MODEL_CLASS_MAPPINGS",[dd]);class Wd extends Qu{}t(Wd,"MODEL_CLASS_MAPPINGS",[md]);class Hd extends Qu{}t(Hd,"MODEL_CLASS_MAPPINGS",[gd]);class Kd extends Qu{}t(Kd,"MODEL_CLASS_MAPPINGS",[wd]);class Qd extends Qu{}t(Qd,"MODEL_CLASS_MAPPINGS",[bd]);class Xd extends Qu{}t(Xd,"MODEL_CLASS_MAPPINGS",[fd]);class Jd extends Qu{}t(Jd,"MODEL_CLASS_MAPPINGS",[_d]);class Yd extends Qu{}t(Yd,"MODEL_CLASS_MAPPINGS",[yd]);class Zd extends Qu{}t(Zd,"MODEL_CLASS_MAPPINGS",[vd]);class ec extends Qu{}t(ec,"MODEL_CLASS_MAPPINGS",[xd]);class tc extends Qu{}t(tc,"MODEL_CLASS_MAPPINGS",[Md]);class nc extends Qu{}t(nc,"MODEL_CLASS_MAPPINGS",[kd]);class rc extends Qu{}t(rc,"MODEL_CLASS_MAPPINGS",[hd]);class sc extends Qu{}t(sc,"MODEL_CLASS_MAPPINGS",[Td]);class ic extends Qu{}t(ic,"MODEL_CLASS_MAPPINGS",[Sd]);class ac extends Qu{}t(ac,"MODEL_CLASS_MAPPINGS",[Cd]);class oc extends Qu{}t(oc,"MODEL_CLASS_MAPPINGS",[Ed]);class lc extends Qu{}t(lc,"MODEL_CLASS_MAPPINGS",[Pd]);class uc extends Qu{}t(uc,"MODEL_CLASS_MAPPINGS",[Ad]);class dc extends Qu{}t(dc,"MODEL_CLASS_MAPPINGS",[cd]);class cc extends Qu{}t(cc,"MODEL_CLASS_MAPPINGS",[pd]);class pc extends ae{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:s=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=s}}class hc extends ae{constructor({logits:e,...t}){super(),this.logits=e;const n=Object.values(t);n.length>0&&(this.attentions=n)}}class mc extends ae{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class fc extends ae{constructor({logits:e}){super(),this.logits=e}}class _c extends ae{constructor({logits:e}){super(),this.logits=e}}class gc extends ae{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class wc extends ae{constructor({logits:e}){super(),this.logits=e}}class bc extends ae{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class yc extends ae{constructor({alphas:e}){super(),this.alphas=e}}class vc extends ae{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":
/*!******************************************************************************************************!*\
      !*** ./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js ***!
      \******************************************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>i});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js");n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");var s=n(
/*! ../../utils/audio.js */
"./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){(0,r.validate_audio_inputs)(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,n=t.data;for(let t=0;t<n.length;++t)n[t]=(n[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":
/*!****************************************************!*\
      !*** ./src/models/auto/feature_extraction_auto.js ***!
      \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{AutoFeatureExtractor:()=>a});var r=n(
/*! ../../utils/constants.js */
"./src/utils/constants.js"),s=n(
/*! ../../utils/hub.js */
"./src/utils/hub.js");n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js");var i=n(
/*! ../feature_extractors.js */
"./src/models/feature_extractors.js");class a{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t),a=n.feature_extractor_type,o=i[a];if(!o)throw new Error(`Unknown feature_extractor_type: '${a}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new o(n)}}},"./src/models/auto/image_processing_auto.js":
/*!**************************************************!*\
      !*** ./src/models/auto/image_processing_auto.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{AutoImageProcessor:()=>o});var r=n(
/*! ../../utils/constants.js */
"./src/utils/constants.js"),s=n(
/*! ../../utils/hub.js */
"./src/utils/hub.js"),i=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),a=n(
/*! ../image_processors.js */
"./src/models/image_processors.js");class o{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),o=n.image_processor_type??n.feature_extractor_type;let l=a[null==o?void 0:o.replace(/Fast$/,"")];return l||(l=i.ImageProcessor),new l(n)}}},"./src/models/auto/processing_auto.js":
/*!********************************************!*\
      !*** ./src/models/auto/processing_auto.js ***!
      \********************************************/(e,t,n)=>{n.r(t),n.d(t,{AutoProcessor:()=>u});var r=n(
/*! ../../utils/constants.js */
"./src/utils/constants.js"),s=n(
/*! ../../utils/hub.js */
"./src/utils/hub.js"),i=n(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),a=n(
/*! ../processors.js */
"./src/models/processors.js"),o=n(
/*! ../image_processors.js */
"./src/models/image_processors.js"),l=n(
/*! ../feature_extractors.js */
"./src/models/feature_extractors.js");class u{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),{image_processor_type:u,feature_extractor_type:d,processor_class:c}=n;if(c&&a[c])return a[c].from_pretrained(e,t);if(!u&&!d)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const p={};if(u){const e=o[u.replace(/Fast$/,"")];if(!e)throw new Error(`Unknown image_processor_type: '${u}'.`);p.image_processor=new e(n)}if(d){const e=o[d];if(e)p.image_processor=new e(n);else{const e=l[d];if(!e)throw new Error(`Unknown feature_extractor_type: '${d}'.`);p.feature_extractor=new e(n)}}return new i.Processor({},p,null)}}},"./src/models/beit/image_processing_beit.js":
/*!**************************************************!*\
      !*** ./src/models/beit/image_processing_beit.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":
/*!************************************************!*\
      !*** ./src/models/bit/image_processing_bit.js ***!
      \************************************************/(e,t,n)=>{n.r(t),n.d(t,{BitImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":
/*!******************************************************************!*\
      !*** ./src/models/chinese_clip/image_processing_chinese_clip.js ***!
      \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{ChineseCLIPFeatureExtractor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":
/*!****************************************************!*\
      !*** ./src/models/clap/feature_extraction_clap.js ***!
      \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{ClapFeatureExtractor:()=>i});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js");n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");var s=n(
/*! ../../utils/audio.js */
"./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(e){super(e),this.mel_filters=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,s.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,n,r){let s;const i=e.length-t;if(i>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{const n=Math.floor(Math.random()*(i+1));e=e.subarray(n,n+t),s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(i<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-i;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return s.unsqueeze_(0)}async _extract_fbank_features(e,t,n=null){return(0,s.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){(0,r.validate_audio_inputs)(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":
/*!**************************************************!*\
      !*** ./src/models/clip/image_processing_clip.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{CLIPFeatureExtractor:()=>i,CLIPImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/convnext/image_processing_convnext.js":
/*!**********************************************************!*\
      !*** ./src/models/convnext/image_processing_convnext.js ***!
      \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{ConvNextFeatureExtractor:()=>i,ConvNextImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){var t;const n=null==(t=this.size)?void 0:t.shortest_edge;if(void 0===n)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(n<384){const t=Math.floor(n/this.crop_pct),[r,s]=this.get_resize_output_image_size(e,{shortest_edge:t});e=await e.resize(r,s,{resample:this.resample}),e=await e.center_crop(n,n)}else e=await e.resize(n,n,{resample:this.resample});return e}}class i extends s{}},"./src/models/dac/feature_extraction_dac.js":
/*!**************************************************!*\
      !*** ./src/models/dac/feature_extraction_dac.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{DacFeatureExtractor:()=>s});var r=n(
/*! ../encodec/feature_extraction_encodec.js */
"./src/models/encodec/feature_extraction_encodec.js");class s extends r.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":
/*!**************************************************!*\
      !*** ./src/models/deit/image_processing_deit.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{DeiTFeatureExtractor:()=>i,DeiTImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/detr/image_processing_detr.js":
/*!**************************************************!*\
      !*** ./src/models/detr/image_processing_detr.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{DetrFeatureExtractor:()=>a,DetrImageProcessor:()=>i});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e){const t=await super._call(e),n=[t.pixel_values.dims[0],64,64],r=(0,s.full)(n,1n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class a extends i{}},"./src/models/dinov3_vit/image_processing_dinov3_vit.js":
/*!**************************************************************!*\
      !*** ./src/models/dinov3_vit/image_processing_dinov3_vit.js ***!
      \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{DINOv3ViTImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/donut/image_processing_donut.js":
/*!****************************************************!*\
      !*** ./src/models/donut/image_processing_donut.js ***!
      \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{DonutFeatureExtractor:()=>i,DonutImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,i,a]=t;let o=this.image_mean;Array.isArray(this.image_mean)||(o=new Array(a).fill(o));let l=this.image_std;Array.isArray(l)||(l=new Array(a).fill(o));const u=o.map((e,t)=>-e/l[t]);return super.pad_image(e,t,n,{center:!0,constant_values:u,...r})}}class i extends s{}},"./src/models/dpt/image_processing_dpt.js":
/*!************************************************!*\
      !*** ./src/models/dpt/image_processing_dpt.js ***!
      \************************************************/(e,t,n)=>{n.r(t),n.d(t,{DPTFeatureExtractor:()=>i,DPTImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/efficientnet/image_processing_efficientnet.js":
/*!******************************************************************!*\
      !*** ./src/models/efficientnet/image_processing_efficientnet.js ***!
      \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{EfficientNetImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(e=>e*e))}}},"./src/models/encodec/feature_extraction_encodec.js":
/*!**********************************************************!*\
      !*** ./src/models/encodec/feature_extraction_encodec.js ***!
      \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{EncodecFeatureExtractor:()=>i});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"EncodecFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=this.config.feature_size;if(e.length%t!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${t}).`);const n=[1,t,e.length/t];return{input_values:new s.Tensor("float32",e,n)}}}},"./src/models/feature_extractors.js":
/*!******************************************!*\
      !*** ./src/models/feature_extractors.js ***!
      \******************************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>i.ClapFeatureExtractor,DacFeatureExtractor:()=>a.DacFeatureExtractor,EncodecFeatureExtractor:()=>s.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>o.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>_.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>u.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>c.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>p.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>h.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>m.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>f.WhisperFeatureExtractor});var r=n(
/*! ./audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js */
"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),s=n(
/*! ./encodec/feature_extraction_encodec.js */
"./src/models/encodec/feature_extraction_encodec.js"),i=n(
/*! ./clap/feature_extraction_clap.js */
"./src/models/clap/feature_extraction_clap.js"),a=n(
/*! ./dac/feature_extraction_dac.js */
"./src/models/dac/feature_extraction_dac.js"),o=n(
/*! ./gemma3n/feature_extraction_gemma3n.js */
"./src/models/gemma3n/feature_extraction_gemma3n.js"),l=n(
/*! ./moonshine/feature_extraction_moonshine.js */
"./src/models/moonshine/feature_extraction_moonshine.js"),u=n(
/*! ./pyannote/feature_extraction_pyannote.js */
"./src/models/pyannote/feature_extraction_pyannote.js"),d=n(
/*! ./seamless_m4t/feature_extraction_seamless_m4t.js */
"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),c=n(
/*! ./snac/feature_extraction_snac.js */
"./src/models/snac/feature_extraction_snac.js"),p=n(
/*! ./speecht5/feature_extraction_speecht5.js */
"./src/models/speecht5/feature_extraction_speecht5.js"),h=n(
/*! ./wav2vec2/feature_extraction_wav2vec2.js */
"./src/models/wav2vec2/feature_extraction_wav2vec2.js"),m=n(
/*! ./wespeaker/feature_extraction_wespeaker.js */
"./src/models/wespeaker/feature_extraction_wespeaker.js"),f=n(
/*! ./whisper/feature_extraction_whisper.js */
"./src/models/whisper/feature_extraction_whisper.js"),_=n(
/*! ../base/image_processors_utils.js */
"./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":
/*!******************************************************!*\
      !*** ./src/models/florence2/processing_florence2.js ***!
      \******************************************************/(e,n,r)=>{r.r(n),r.d(n,{Florence2Processor:()=>o});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");class o extends s.Processor{constructor(e,t,n){super(e,t,n);const{tasks_answer_post_processing_type:r,task_prompts_without_inputs:s,task_prompts_with_input:i}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(r??{})),this.task_prompts_without_inputs=new Map(Object.entries(s??{})),this.task_prompts_with_input=new Map(Object.entries(i??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))t.push(this.task_prompts_without_inputs.get(n));else{for(const[e,r]of this.task_prompts_with_input)if(n.includes(e)){t.push(r.replaceAll("{input}",n).replaceAll(e,""));break}t.length!==e.length&&t.push(n)}return t}post_process_generation(e,t,n){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let s;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":s=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const i="ocr"===r?"quad_boxes":"bboxes",a=e.matchAll(this.regexes[i]),o=[],l=[];for(const[e,t,...r]of a)o.push(t?t.trim():o.at(-1)??""),l.push(r.map((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2]));s={labels:o,[i]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:s}}async _call(e,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...await this.image_processor(e,n),...t?this.tokenizer(this.construct_prompts(t),n):{}}}}t(o,"tokenizer_class",a.AutoTokenizer),t(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/gemma3n/feature_extraction_gemma3n.js":
/*!**********************************************************!*\
      !*** ./src/models/gemma3n/feature_extraction_gemma3n.js ***!
      \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{Gemma3nAudioFeatureExtractor:()=>a});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js"),i=n(
/*! ../../utils/audio.js */
"./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const{fft_length:t,feature_size:n,min_frequency:r,max_frequency:s,sampling_rate:a,frame_length:o}=this.config,l=(0,i.mel_filter_bank)(Math.floor(1+t/2),n,r,s,a,null,"htk",!1);this.mel_filters=l,this.window=(0,i.window_function)(o,"hann")}async _extract_fbank_features(e,t){return(0,i.spectrogram)(e,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(e,{max_length:t=48e4,truncation:n=!0,padding:i=!0,pad_to_multiple_of:a=128}={}){if((0,r.validate_audio_inputs)(e,"Gemma3nAudioFeatureExtractor"),n&&e.length>t&&(e=e.slice(0,t)),i&&e.length%a!==0){const t=a-e.length%a,n=new Float64Array(e.length+t);n.set(e),0!==this.config.padding_value&&n.fill(this.config.padding_value,e.length),e=n}const o=await this._extract_fbank_features(e,this.config.max_length),l=(0,s.full)([1,o.dims[0]],!0);return{input_features:o.unsqueeze_(0),input_features_mask:l}}}},"./src/models/gemma3n/processing_gemma3n.js":
/*!**************************************************!*\
      !*** ./src/models/gemma3n/processing_gemma3n.js ***!
      \**************************************************/(e,n,r)=>{r.r(n),r.d(n,{Gemma3nProcessor:()=>l});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),o=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");r(
/*! ../../utils/image.js */
"./src/utils/image.js"),r(
/*! ../../utils/audio.js */
"./src/utils/audio.js");class l extends s.Processor{constructor(e,t,n){super(e,t,n),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:r,boa_token:s,audio_token:i,eoa_token:a,image_token_id:o,boi_token:l,image_token:u,eoi_token:d}=this.tokenizer.config;this.audio_token_id=r,this.boa_token=s,this.audio_token=i;const c=i.repeat(this.audio_seq_length);this.full_audio_sequence=`\n\n${s}${c}${a}\n\n`,this.image_token_id=o,this.boi_token=l,this.image_token=u;const p=u.repeat(this.image_seq_length);this.full_image_sequence=`\n\n${l}${p}${d}\n\n`}async _call(e,t=null,n=null,r={}){let s,i;return"string"==typeof e&&(e=[e]),n&&(s=await this.feature_extractor(n,r),e=e.map(e=>e.replaceAll(this.audio_token,this.full_audio_sequence))),t&&(i=await this.image_processor(t,r),e=e.map(e=>e.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(e,r),...i,...s}}}t(l,"image_processor_class",i.AutoImageProcessor),t(l,"feature_extractor_class",a.AutoFeatureExtractor),t(l,"tokenizer_class",o.AutoTokenizer),t(l,"uses_processor_config",!0),t(l,"uses_chat_template_file",!0)},"./src/models/glpn/image_processing_glpn.js":
/*!**************************************************!*\
      !*** ./src/models/glpn/image_processing_glpn.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{GLPNFeatureExtractor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":
/*!**********************************************************************!*\
      !*** ./src/models/grounding_dino/image_processing_grounding_dino.js ***!
      \**********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{GroundingDinoImageProcessor:()=>i});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e){const t=await super._call(e),n=t.pixel_values.dims,r=(0,s.ones)([n[0],n[2],n[3]]);return{...t,pixel_mask:r}}}},"./src/models/grounding_dino/processing_grounding_dino.js":
/*!****************************************************************!*\
      !*** ./src/models/grounding_dino/processing_grounding_dino.js ***!
      \****************************************************************/(e,n,r)=>{r.r(n),r.d(n,{GroundingDinoProcessor:()=>u});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),o=r(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");function l(e,t){const n=e.dims.at(-1)-1,r=e.tolist();r.fill(!1,0,1),r.fill(!1,n);const s=t.tolist();return r.map((e,t)=>e?t:null).filter(e=>null!==e).map(e=>s[e])}class u extends s.Processor{async _call(e,t,n={}){const r=e?await this.image_processor(e,n):{};return{...t?this.tokenizer(t,n):{},...r}}post_process_grounded_object_detection(e,t,{box_threshold:n=.25,text_threshold:r=.25,target_sizes:s=null}={}){const{logits:i,pred_boxes:a}=e,u=i.dims[0];if(null!==s&&s.length!==u)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const d=i.dims.at(1),c=i.sigmoid(),p=c.max(-1).tolist(),h=a.tolist().map(e=>e.map(e=>(0,o.center_to_corners_format)(e))),m=[];for(let o=0;o<u;++o){const e=null!==s?s[o]:null;null!==e&&(h[o]=h[o].map(t=>t.map((t,n)=>t*e[(n+1)%2])));const i=p[o],a=[],u=[],f=[];for(let s=0;s<d;++s){const e=i[s];if(e<=n)continue;const d=h[o][s],p=c[o][s];a.push(e),f.push(d);const m=l(p.gt(r),t[o]);u.push(m)}m.push({scores:a,boxes:f,labels:this.batch_decode(u)})}return m}}t(u,"tokenizer_class",a.AutoTokenizer),t(u,"image_processor_class",i.AutoImageProcessor)},"./src/models/idefics3/image_processing_idefics3.js":
/*!**********************************************************!*\
      !*** ./src/models/idefics3/image_processing_idefics3.js ***!
      \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{Idefics3ImageProcessor:()=>i});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.ImageProcessor{constructor(e){super(e),this.do_image_splitting=e.do_image_splitting??!0,this.max_image_size=e.max_image_size}get_resize_for_vision_encoder(e,t){let[n,r]=e.dims.slice(-2);const s=r/n;return r>=n?(r=Math.ceil(r/t)*t,n=Math.floor(r/s),n=Math.ceil(n/t)*t):(n=Math.ceil(n/t)*t,r=Math.floor(n*s),r=Math.ceil(r/t)*t),{height:n,width:r}}async _call(e,{do_image_splitting:t=null,return_row_col_info:n=!1}={}){let r;if(Array.isArray(e)){if(0===e.length||!e[0])throw new Error("No images provided.");r=Array.isArray(e[0])?e:[e]}else r=[[e]];let i=[],a=[],o=[];const l=[],u=[];for(const g of r){let e=await Promise.all(g.map(e=>this.preprocess(e)));l.push(...e.map(e=>e.original_size)),u.push(...e.map(e=>e.reshaped_input_size)),e.forEach(e=>e.pixel_values.unsqueeze_(0));const{longest_edge:n}=this.max_image_size;let r;if(t??this.do_image_splitting){let t=new Array(e.length),i=new Array(e.length);r=await Promise.all(e.map(async(e,r)=>{const a=this.get_resize_for_vision_encoder(e.pixel_values,n),o=await(0,s.interpolate_4d)(e.pixel_values,{size:[a.height,a.width]}),{frames:l,num_splits_h:u,num_splits_w:d}=await this.split_image(o,this.max_image_size);return t[r]=u,i[r]=d,(0,s.cat)(l,0)})),a.push(t),o.push(i)}else{const t=[n,n];r=await Promise.all(e.map(e=>(0,s.interpolate_4d)(e.pixel_values,{size:t}))),a.push(new Array(e.length).fill(0)),o.push(new Array(e.length).fill(0))}i.push((0,s.cat)(r,0))}const d=i.length,[c,p,h,m]=i[0].dims;let f,_;if(1===d)f=i[0].unsqueeze_(0),_=(0,s.full)([d,c,h,m],!0);else{const e=Math.max(...i.map(e=>e.dims.at(0)));_=(0,s.full)([d,e,h,m],!0);const t=_.data,n=e*h*m;for(let r=0;r<d;++r){const a=i[r].dims[0];if(a<e){i[r]=(0,s.cat)([i[r],(0,s.full)([e-a,p,h,m],0)],0);const o=r*n+a*h*m,l=(r+1)*n;t.fill(!1,o,l)}}f=(0,s.stack)(i,0)}return{pixel_values:f,pixel_attention_mask:_,original_sizes:l,reshaped_input_sizes:u,...n?{rows:a,cols:o}:{}}}async split_image(e,{longest_edge:t}){const n=t,r=t,i=[],[a,o]=e.dims.slice(-2);let l=0,u=0;if(a>n||o>r){l=Math.ceil(a/n),u=Math.ceil(o/r);const t=Math.ceil(a/l),d=Math.ceil(o/u);for(let n=0;n<l;++n)for(let r=0;r<u;++r){let c,p,h,m;n===l-1?(p=a-t,m=a):(p=n*t,m=(n+1)*t),r===u-1?(c=o-d,h=o):(c=r*d,h=(r+1)*d);const f=[p,c],_=[m,h],g=await(0,s.slice)(e,f,_,[2,3]);i.push(g)}const c=n,p=r;a===c&&o===p||(e=await(0,s.interpolate_4d)(e,{size:[c,p]}))}return i.push(e),{frames:i,num_splits_h:l,num_splits_w:u}}}},"./src/models/idefics3/processing_idefics3.js":
/*!****************************************************!*\
      !*** ./src/models/idefics3/processing_idefics3.js ***!
      \****************************************************/(e,n,r)=>{r.r(n),r.d(n,{Idefics3Processor:()=>u});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");r(
/*! ../../utils/image.js */
"./src/utils/image.js");var o=r(
/*! ../../utils/core.js */
"./src/utils/core.js");function l(e,t,n,r,s,i){return 0===e&&0===t?function(e,t,n,r){return`${t}${r}`+n.repeat(e)+`${t}`}(n,r,s,i):function(e,t,n,r,s,i){let a="";for(let o=0;o<t;++o){for(let t=0;t<n;++t)a+=r+`<row_${o+1}_col_${t+1}>`+s.repeat(e);a+="\n"}return a+=`\n${r}${i}`+s.repeat(e)+`${r}`,a}(n,e,t,r,s,i)}class u extends s.Processor{constructor(){super(...arguments),t(this,"fake_image_token","<fake_token_around_image>"),t(this,"image_token","<image>"),t(this,"global_img_token","<global-img>")}async _call(e,t=null,n={}){let r;n.return_row_col_info??(n.return_row_col_info=!0),t&&(r=await this.image_processor(t,n)),Array.isArray(e)||(e=[e]);const s=r.rows??[new Array(e.length).fill(0)],i=r.cols??[new Array(e.length).fill(0)],a=this.config.image_seq_len,u=[],d=[];for(let c=0;c<e.length;++c){const t=e[c],n=s[c],r=i[c];u.push((0,o.count)(t,this.image_token));const p=n.map((e,t)=>l(e,r[t],a,this.fake_image_token,this.image_token,this.global_img_token)),h=t.split(this.image_token);if(0===h.length)throw new Error("The image token should be present in the text.");let m=h[0];for(let e=0;e<p.length;++e)m+=p[e]+h[e+1];d.push(m)}return{...this.tokenizer(d),...r}}}t(u,"image_processor_class",i.AutoImageProcessor),t(u,"tokenizer_class",a.AutoTokenizer),t(u,"uses_processor_config",!0)},"./src/models/image_processors.js":
/*!****************************************!*\
      !*** ./src/models/image_processors.js ***!
      \****************************************/(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>s.BitImageProcessor,CLIPFeatureExtractor:()=>a.CLIPFeatureExtractor,CLIPImageProcessor:()=>a.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>i.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>o.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>o.ConvNextImageProcessor,DINOv3ViTImageProcessor:()=>d.DINOv3ViTImageProcessor,DPTFeatureExtractor:()=>p.DPTFeatureExtractor,DPTImageProcessor:()=>p.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>u.DetrFeatureExtractor,DetrImageProcessor:()=>u.DetrImageProcessor,DonutFeatureExtractor:()=>c.DonutFeatureExtractor,DonutImageProcessor:()=>c.DonutImageProcessor,EfficientNetImageProcessor:()=>h.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>m.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>w.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>b.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>y.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>v.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>v.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>x.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>x.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>M.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>M.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>k.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>k.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>T.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>T.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>$.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>$.MobileViTImageProcessor,NougatImageProcessor:()=>S.NougatImageProcessor,OwlViTFeatureExtractor:()=>E.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>E.OwlViTImageProcessor,Owlv2ImageProcessor:()=>C.Owlv2ImageProcessor,Phi3VImageProcessor:()=>P.Phi3VImageProcessor,PvtImageProcessor:()=>A.PvtImageProcessor,Qwen2VLImageProcessor:()=>I.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>z.RTDetrImageProcessor,SamImageProcessor:()=>F.SamImageProcessor,SegformerFeatureExtractor:()=>O.SegformerFeatureExtractor,SegformerImageProcessor:()=>O.SegformerImageProcessor,SiglipImageProcessor:()=>L.SiglipImageProcessor,SmolVLMImageProcessor:()=>B.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>D.Swin2SRImageProcessor,VLMImageProcessor:()=>g.VLMImageProcessor,ViTFeatureExtractor:()=>N.ViTFeatureExtractor,ViTImageProcessor:()=>N.ViTImageProcessor,VitMatteImageProcessor:()=>j.VitMatteImageProcessor,VitPoseImageProcessor:()=>R.VitPoseImageProcessor,YolosFeatureExtractor:()=>V.YolosFeatureExtractor,YolosImageProcessor:()=>V.YolosImageProcessor});var r=n(
/*! ./beit/image_processing_beit.js */
"./src/models/beit/image_processing_beit.js"),s=n(
/*! ./bit/image_processing_bit.js */
"./src/models/bit/image_processing_bit.js"),i=n(
/*! ./chinese_clip/image_processing_chinese_clip.js */
"./src/models/chinese_clip/image_processing_chinese_clip.js"),a=n(
/*! ./clip/image_processing_clip.js */
"./src/models/clip/image_processing_clip.js"),o=n(
/*! ./convnext/image_processing_convnext.js */
"./src/models/convnext/image_processing_convnext.js"),l=n(
/*! ./deit/image_processing_deit.js */
"./src/models/deit/image_processing_deit.js"),u=n(
/*! ./detr/image_processing_detr.js */
"./src/models/detr/image_processing_detr.js"),d=n(
/*! ./dinov3_vit/image_processing_dinov3_vit.js */
"./src/models/dinov3_vit/image_processing_dinov3_vit.js"),c=n(
/*! ./donut/image_processing_donut.js */
"./src/models/donut/image_processing_donut.js"),p=n(
/*! ./dpt/image_processing_dpt.js */
"./src/models/dpt/image_processing_dpt.js"),h=n(
/*! ./efficientnet/image_processing_efficientnet.js */
"./src/models/efficientnet/image_processing_efficientnet.js"),m=n(
/*! ./glpn/image_processing_glpn.js */
"./src/models/glpn/image_processing_glpn.js"),f=n(
/*! ./grounding_dino/image_processing_grounding_dino.js */
"./src/models/grounding_dino/image_processing_grounding_dino.js"),_=n(
/*! ./idefics3/image_processing_idefics3.js */
"./src/models/idefics3/image_processing_idefics3.js"),g=n(
/*! ./janus/image_processing_janus.js */
"./src/models/janus/image_processing_janus.js"),w=n(
/*! ./jina_clip/image_processing_jina_clip.js */
"./src/models/jina_clip/image_processing_jina_clip.js"),b=n(
/*! ./llava_onevision/image_processing_llava_onevision.js */
"./src/models/llava_onevision/image_processing_llava_onevision.js"),y=n(
/*! ./mask2former/image_processing_mask2former.js */
"./src/models/mask2former/image_processing_mask2former.js"),v=n(
/*! ./maskformer/image_processing_maskformer.js */
"./src/models/maskformer/image_processing_maskformer.js"),x=n(
/*! ./mobilenet_v1/image_processing_mobilenet_v1.js */
"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),M=n(
/*! ./mobilenet_v2/image_processing_mobilenet_v2.js */
"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),k=n(
/*! ./mobilenet_v3/image_processing_mobilenet_v3.js */
"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),T=n(
/*! ./mobilenet_v4/image_processing_mobilenet_v4.js */
"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),$=n(
/*! ./mobilevit/image_processing_mobilevit.js */
"./src/models/mobilevit/image_processing_mobilevit.js"),S=n(
/*! ./nougat/image_processing_nougat.js */
"./src/models/nougat/image_processing_nougat.js"),C=n(
/*! ./owlv2/image_processing_owlv2.js */
"./src/models/owlv2/image_processing_owlv2.js"),E=n(
/*! ./owlvit/image_processing_owlvit.js */
"./src/models/owlvit/image_processing_owlvit.js"),P=n(
/*! ./phi3_v/image_processing_phi3_v.js */
"./src/models/phi3_v/image_processing_phi3_v.js"),A=n(
/*! ./pvt/image_processing_pvt.js */
"./src/models/pvt/image_processing_pvt.js"),I=n(
/*! ./qwen2_vl/image_processing_qwen2_vl.js */
"./src/models/qwen2_vl/image_processing_qwen2_vl.js"),z=n(
/*! ./rt_detr/image_processing_rt_detr.js */
"./src/models/rt_detr/image_processing_rt_detr.js"),F=n(
/*! ./sam/image_processing_sam.js */
"./src/models/sam/image_processing_sam.js"),O=n(
/*! ./segformer/image_processing_segformer.js */
"./src/models/segformer/image_processing_segformer.js"),L=n(
/*! ./siglip/image_processing_siglip.js */
"./src/models/siglip/image_processing_siglip.js"),B=n(
/*! ./smolvlm/image_processing_smolvlm.js */
"./src/models/smolvlm/image_processing_smolvlm.js"),D=n(
/*! ./swin2sr/image_processing_swin2sr.js */
"./src/models/swin2sr/image_processing_swin2sr.js"),N=n(
/*! ./vit/image_processing_vit.js */
"./src/models/vit/image_processing_vit.js"),j=n(
/*! ./vitmatte/image_processing_vitmatte.js */
"./src/models/vitmatte/image_processing_vitmatte.js"),R=n(
/*! ./vitpose/image_processing_vitpose.js */
"./src/models/vitpose/image_processing_vitpose.js"),V=n(
/*! ./yolos/image_processing_yolos.js */
"./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":
/*!****************************************************!*\
      !*** ./src/models/janus/image_processing_janus.js ***!
      \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{VLMImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super({do_pad:!0,pad_size:{width:e.image_size,height:e.image_size},...e}),this.constant_values=this.config.background_color.map(e=>e*this.rescale_factor)}pad_image(e,t,n,r){return super.pad_image(e,t,n,{constant_values:this.constant_values,center:!0,...r})}}},"./src/models/janus/processing_janus.js":
/*!**********************************************!*\
      !*** ./src/models/janus/processing_janus.js ***!
      \**********************************************/(e,n,r)=>{r.r(n),r.d(n,{VLChatProcessor:()=>d});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),o=r(
/*! ../../utils/core.js */
"./src/utils/core.js"),l=r(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js"),u=r(
/*! ../../utils/image.js */
"./src/utils/image.js");class d extends s.Processor{constructor(e,t,n){super(e,t,n),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(e,{images:t=null,chat_template:n="default"}={}){t?Array.isArray(t)||(t=[t]):t=await Promise.all(e.filter(e=>e.images).flatMap(e=>e.images).map(e=>u.RawImage.read(e)));const r=this.tokenizer,s=e=>r.encode(e,{add_special_tokens:!1}),i=r.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0,chat_template:n}).split(this.image_tag),a=i.length-1;if(t.length!==a)throw new Error(`Number of images provided (${t.length}) does not match number of "${this.image_tag}" image tags (${a})`);const[d,c,p]=r.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let h=s(i[0]),m=new Array(h.length).fill(!1);for(let l=1;l<i.length;++l){const e=new Array(this.num_image_tokens).fill(d),t=s(i[l]);h=(0,o.mergeArrays)(h,[c],e,[p],t);const n=new Array(this.num_image_tokens).fill(!0);m=(0,o.mergeArrays)(m,[!1],n,[!1],new Array(t.length).fill(!1))}const f=[1,h.length],_={input_ids:new l.Tensor("int64",h,f),attention_mask:new l.Tensor("int64",new Array(h.length).fill(1),f),images_seq_mask:new l.Tensor("bool",m,f),images_emb_mask:new l.Tensor("bool",new Array(a*this.num_image_tokens).fill(!0),[1,a,this.num_image_tokens])};if(t&&t.length>0){const e=await this.image_processor(t);return e.pixel_values.unsqueeze_(0),{..._,...e}}return _}}t(d,"image_processor_class",i.AutoImageProcessor),t(d,"tokenizer_class",a.AutoTokenizer),t(d,"uses_processor_config",!0)},"./src/models/jina_clip/image_processing_jina_clip.js":
/*!************************************************************!*\
      !*** ./src/models/jina_clip/image_processing_jina_clip.js ***!
      \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{JinaCLIPImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){const{resize_mode:t,fill_color:n,interpolation:r,size:s,...i}=e;super({...i,size:"squash"===t?{width:s,height:s}:"shortest"===t?{shortest_edge:s}:{longest_edge:s},resample:"bicubic"===r?3:2,do_center_crop:!0,crop_size:s,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":
/*!******************************************************!*\
      !*** ./src/models/jina_clip/processing_jina_clip.js ***!
      \******************************************************/(e,n,r)=>{r.r(n),r.d(n,{JinaCLIPProcessor:()=>o});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");class o extends s.Processor{async _call(e=null,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...e?this.tokenizer(e,n):{},...t?await this.image_processor(t,n):{}}}}t(o,"tokenizer_class",a.AutoTokenizer),t(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/llava/processing_llava.js":
/*!**********************************************!*\
      !*** ./src/models/llava/processing_llava.js ***!
      \**********************************************/(e,n,r)=>{r.r(n),r.d(n,{LlavaProcessor:()=>o});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");class o extends s.Processor{async _call(e,t=null,n={}){const r=await this.image_processor(e,n);if(t){const[e,n]=r.pixel_values.dims.slice(-2),{image_token:s,patch_size:i,num_additional_image_tokens:a}=this.config,o=Math.floor(e/i)*Math.floor(n/i)+a;t=structuredClone(t),Array.isArray(t)||(t=[t]);for(let r=0;r<t.length;++r)t[r]=t[r].replace(s,s.repeat(o))}const s=t?this.tokenizer(t,n):{};return{...r,...s}}}t(o,"tokenizer_class",a.AutoTokenizer),t(o,"image_processor_class",i.AutoImageProcessor),t(o,"uses_processor_config",!0)},"./src/models/llava_onevision/image_processing_llava_onevision.js":
/*!************************************************************************!*\
      !*** ./src/models/llava_onevision/image_processing_llava_onevision.js ***!
      \************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{LlavaOnevisionImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":
/*!****************************************************************!*\
      !*** ./src/models/mask2former/image_processing_mask2former.js ***!
      \****************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Mask2FormerImageProcessor:()=>s});var r=n(
/*! ../maskformer/image_processing_maskformer.js */
"./src/models/maskformer/image_processing_maskformer.js");class s extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":
/*!**************************************************************!*\
      !*** ./src/models/maskformer/image_processing_maskformer.js ***!
      \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MaskFormerFeatureExtractor:()=>i,MaskFormerImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class i extends s{}},"./src/models/mgp_str/processing_mgp_str.js":
/*!**************************************************!*\
      !*** ./src/models/mgp_str/processing_mgp_str.js ***!
      \**************************************************/(e,n,r)=>{r.r(n),r.d(n,{MgpstrProcessor:()=>u});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),o=r(
/*! ../../utils/maths.js */
"./src/utils/maths.js");const l={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class u extends s.Processor{get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(e,t){if(!l.hasOwnProperty(t))throw new Error(`Format ${t} is not supported.`);const[n,r]=l[t],s=this[n].bind(this),[i,a]=e.dims,u=[],d=[],c=e.tolist();for(let l=0;l<i;++l){const e=c[l],t=[],n=[];for(let i=1;i<a;++i){const[s,a]=(0,o.max)((0,o.softmax)(e[i]));if(n.push(s),a==r)break;t.push(a)}const s=n.length>0?n.reduce((e,t)=>e*t,1):0;d.push(t),u.push(s)}return[s(d),u]}char_decode(e){return this.char_tokenizer.batch_decode(e).map(e=>e.replaceAll(" ",""))}bpe_decode(e){return this.bpe_tokenizer.batch_decode(e)}wp_decode(e){return this.wp_tokenizer.batch_decode(e).map(e=>e.replaceAll(" ",""))}batch_decode([e,t,n]){const[r,s]=this._decode_helper(e,"char"),[i,a]=this._decode_helper(t,"bpe"),[l,u]=this._decode_helper(n,"wp"),d=[],c=[];for(let p=0;p<r.length;++p){const[e,t]=(0,o.max)([s[p],a[p],u[p]]);d.push([r[p],i[p],l[p]][t]),c.push(e)}return{generated_text:d,scores:c,char_preds:r,bpe_preds:i,wp_preds:l}}static async from_pretrained(...e){const t=await super.from_pretrained(...e),n=await a.AutoTokenizer.from_pretrained("Xenova/gpt2"),r=await a.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return t.components={image_processor:t.image_processor,char_tokenizer:t.tokenizer,bpe_tokenizer:n,wp_tokenizer:r},t}async _call(e,t=null){const n=await this.image_processor(e);return t&&(n.labels=this.tokenizer(t).input_ids),n}}t(u,"tokenizer_class",a.AutoTokenizer),t(u,"image_processor_class",i.AutoImageProcessor)},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":
/*!******************************************************************!*\
      !*** ./src/models/mobilenet_v1/image_processing_mobilenet_v1.js ***!
      \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV1FeatureExtractor:()=>i,MobileNetV1ImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":
/*!******************************************************************!*\
      !*** ./src/models/mobilenet_v2/image_processing_mobilenet_v2.js ***!
      \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV2FeatureExtractor:()=>i,MobileNetV2ImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":
/*!******************************************************************!*\
      !*** ./src/models/mobilenet_v3/image_processing_mobilenet_v3.js ***!
      \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV3FeatureExtractor:()=>i,MobileNetV3ImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":
/*!******************************************************************!*\
      !*** ./src/models/mobilenet_v4/image_processing_mobilenet_v4.js ***!
      \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV4FeatureExtractor:()=>i,MobileNetV4ImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/mobilevit/image_processing_mobilevit.js":
/*!************************************************************!*\
      !*** ./src/models/mobilevit/image_processing_mobilevit.js ***!
      \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileViTFeatureExtractor:()=>i,MobileViTImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/moonshine/feature_extraction_moonshine.js":
/*!**************************************************************!*\
      !*** ./src/models/moonshine/feature_extraction_moonshine.js ***!
      \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MoonshineFeatureExtractor:()=>i});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"MoonshineFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,e.length];return{input_values:new s.Tensor("float32",e,t)}}}},"./src/models/moonshine/processing_moonshine.js":
/*!******************************************************!*\
      !*** ./src/models/moonshine/processing_moonshine.js ***!
      \******************************************************/(e,n,r)=>{r.r(n),r.d(n,{MoonshineProcessor:()=>o});var s=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),i=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),a=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js");class o extends a.Processor{async _call(e){return await this.feature_extractor(e)}}t(o,"tokenizer_class",i.AutoTokenizer),t(o,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/nougat/image_processing_nougat.js":
/*!******************************************************!*\
      !*** ./src/models/nougat/image_processing_nougat.js ***!
      \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{NougatImageProcessor:()=>s});var r=n(
/*! ../donut/image_processing_donut.js */
"./src/models/donut/image_processing_donut.js");class s extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":
/*!****************************************************!*\
      !*** ./src/models/owlv2/image_processing_owlv2.js ***!
      \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{Owlv2ImageProcessor:()=>s});var r=n(
/*! ../owlvit/image_processing_owlvit.js */
"./src/models/owlvit/image_processing_owlvit.js");class s extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":
/*!******************************************************!*\
      !*** ./src/models/owlvit/image_processing_owlvit.js ***!
      \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{OwlViTFeatureExtractor:()=>i,OwlViTImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class i extends s{}},"./src/models/owlvit/processing_owlvit.js":
/*!************************************************!*\
      !*** ./src/models/owlvit/processing_owlvit.js ***!
      \************************************************/(e,n,r)=>{r.r(n),r.d(n,{OwlViTProcessor:()=>o});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");class o extends s.Processor{}t(o,"tokenizer_class",a.AutoTokenizer),t(o,"image_processor_class",i.AutoImageProcessor)},"./src/models/paligemma/processing_paligemma.js":
/*!******************************************************!*\
      !*** ./src/models/paligemma/processing_paligemma.js ***!
      \******************************************************/(e,n,r)=>{r.r(n),r.d(n,{PaliGemmaProcessor:()=>l});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");const o="<image>";class l extends s.Processor{async _call(e,t=null,n={}){t||(t=""),Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const r=this.tokenizer.bos_token,s=this.image_processor.config.image_seq_length;let i;i=t.some(e=>e.includes(o))?t.map(e=>{const t=e.replaceAll(o,o.repeat(s)),n=t.lastIndexOf(o),i=-1===n?0:n+7;return t.slice(0,i)+r+t.slice(i)+"\n"}):t.map(t=>function(e,t,n,r,s){return`${r.repeat(n*s)}${t}${e}\n`}(t,r,s,o,e.length));const a=this.tokenizer(i,n);return{...await this.image_processor(e,n),...a}}}t(l,"tokenizer_class",a.AutoTokenizer),t(l,"image_processor_class",i.AutoImageProcessor),t(l,"uses_processor_config",!1)},"./src/models/phi3_v/image_processing_phi3_v.js":
/*!******************************************************!*\
      !*** ./src/models/phi3_v/image_processing_phi3_v.js ***!
      \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{Phi3VImageProcessor:()=>d});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");const i=336,a=[2,3],{ceil:o,floor:l,sqrt:u}=Math;class d extends r.ImageProcessor{constructor(e){super({...e,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=e.num_crops}calc_num_image_tokens_from_image_size(e,t){const{num_img_tokens:n}=this.config;return l((l(t/i)*l(e/i)+1)*n+1+(l(t/i)+1)*u(n))}get_resize_output_image_size(e,t){const n=this._num_crops,[r,s]=e.size;let i=r/s,a=1;for(;a*Math.ceil(a/i)<=n;)a+=1;a-=1;const o=Math.floor(336*a);return[o,Math.floor(o/i)]}pad_image(e,t,n,r={}){const[s,a]=t,l=i*o(s/i),u=i*o(a/i),d=[1,1,1].map((e,t)=>(e-this.image_mean[t])/this.image_std[t]);return super.pad_image(e,t,{width:u,height:l},{center:!0,constant_values:d,...r})}async _call(e,{num_crops:t=null}={}){if(this._num_crops=t??(t=this.config.num_crops),t<4||u(t)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(e)||(e=[e]);const n=e.length,r=await Promise.all(e.map(e=>this.preprocess(e))),d=r.map(e=>e.original_size),c=r.map(e=>e.reshaped_input_size),p=[];for(const{pixel_values:o}of r){o.unsqueeze_(0);const[e,n]=o.dims.slice(-2),r=await(0,s.interpolate_4d)(o,{size:[i,i],mode:"bicubic"});if(t>0){const d=[],c=u(t),h=l(n/c),m=l(e/c);for(let t=0;t<c;++t)for(let r=0;r<c;++r){let i,l,u,p;t===c-1?(l=e-m,p=e):(l=t*m,p=(t+1)*m),r===c-1?(i=n-h,u=n):(i=r*h,u=(r+1)*h);const f=[l,i],_=[p,u],g=await(0,s.slice)(o,f,_,a);d.push(g)}const f=await(0,s.interpolate_4d)((0,s.cat)(d,0),{size:[i,i],mode:"bicubic"});p.push((0,s.cat)([r,f],0))}else p.push(r)}const h=(0,s.stack)(p,0),m=c.map(e=>e.map(e=>i*o(e/i)));return{pixel_values:h,original_sizes:d,reshaped_input_sizes:c,image_sizes:new s.Tensor("int64",m.flat(),[n,2]),num_img_tokens:m.map(([e,t])=>this.calc_num_image_tokens_from_image_size(t,e))}}}},"./src/models/phi3_v/processing_phi3_v.js":
/*!************************************************!*\
      !*** ./src/models/phi3_v/processing_phi3_v.js ***!
      \************************************************/(e,n,r)=>{r.r(n),r.d(n,{Phi3VProcessor:()=>u});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");r(
/*! ../../utils/image.js */
"./src/utils/image.js");const o="<|image|>",l=/<\|image_\d+\|>/g;class u extends s.Processor{async _call(e,t=null,{padding:n=!0,truncation:r=!0,num_crops:s=null}={}){let i,a;if(Array.isArray(e)||(e=[e]),t){a=await this.image_processor(t,{num_crops:s});const{num_img_tokens:u}=a,d=e.map((e,t)=>e.split(l).join(o.repeat(u[t])));i=this.tokenizer(d,{padding:n,truncation:r});const c=this.tokenizer.model.convert_tokens_to_ids([o])[0];i.input_ids.map_(e=>e==c?-e:e)}else i=this.tokenizer(e);return{...i,...a}}}t(u,"image_processor_class",i.AutoImageProcessor),t(u,"tokenizer_class",a.AutoTokenizer)},"./src/models/processors.js":
/*!**********************************!*\
      !*** ./src/models/processors.js ***!
      \**********************************/(e,t,n)=>{n.r(t),n.d(t,{Florence2Processor:()=>r.Florence2Processor,Gemma3nProcessor:()=>s.Gemma3nProcessor,GroundingDinoProcessor:()=>i.GroundingDinoProcessor,Idefics3Processor:()=>a.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>u.LlavaProcessor,MgpstrProcessor:()=>d.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>m.PaliGemmaProcessor,Phi3VProcessor:()=>h.Phi3VProcessor,PyAnnoteProcessor:()=>f.PyAnnoteProcessor,Qwen2VLProcessor:()=>_.Qwen2VLProcessor,SamProcessor:()=>g.SamProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SpeechT5Processor:()=>b.SpeechT5Processor,UltravoxProcessor:()=>y.UltravoxProcessor,VLChatProcessor:()=>o.VLChatProcessor,VoxtralProcessor:()=>v.VoxtralProcessor,Wav2Vec2Processor:()=>x.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>M.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>k.WhisperProcessor});var r=n(
/*! ./florence2/processing_florence2.js */
"./src/models/florence2/processing_florence2.js"),s=n(
/*! ./gemma3n/processing_gemma3n.js */
"./src/models/gemma3n/processing_gemma3n.js"),i=n(
/*! ./grounding_dino/processing_grounding_dino.js */
"./src/models/grounding_dino/processing_grounding_dino.js"),a=n(
/*! ./idefics3/processing_idefics3.js */
"./src/models/idefics3/processing_idefics3.js"),o=n(
/*! ./janus/processing_janus.js */
"./src/models/janus/processing_janus.js"),l=n(
/*! ./jina_clip/processing_jina_clip.js */
"./src/models/jina_clip/processing_jina_clip.js"),u=n(
/*! ./llava/processing_llava.js */
"./src/models/llava/processing_llava.js"),d=n(
/*! ./mgp_str/processing_mgp_str.js */
"./src/models/mgp_str/processing_mgp_str.js"),c=n(
/*! ./moonshine/processing_moonshine.js */
"./src/models/moonshine/processing_moonshine.js"),p=n(
/*! ./owlvit/processing_owlvit.js */
"./src/models/owlvit/processing_owlvit.js"),h=n(
/*! ./phi3_v/processing_phi3_v.js */
"./src/models/phi3_v/processing_phi3_v.js"),m=n(
/*! ./paligemma/processing_paligemma.js */
"./src/models/paligemma/processing_paligemma.js"),f=n(
/*! ./pyannote/processing_pyannote.js */
"./src/models/pyannote/processing_pyannote.js"),_=n(
/*! ./qwen2_vl/processing_qwen2_vl.js */
"./src/models/qwen2_vl/processing_qwen2_vl.js"),g=n(
/*! ./sam/processing_sam.js */
"./src/models/sam/processing_sam.js"),w=n(
/*! ./smolvlm/processing_smolvlm.js */
"./src/models/smolvlm/processing_smolvlm.js"),b=n(
/*! ./speecht5/processing_speecht5.js */
"./src/models/speecht5/processing_speecht5.js"),y=n(
/*! ./ultravox/processing_ultravox.js */
"./src/models/ultravox/processing_ultravox.js"),v=n(
/*! ./voxtral/processing_voxtral.js */
"./src/models/voxtral/processing_voxtral.js"),x=n(
/*! ./wav2vec2/processing_wav2vec2.js */
"./src/models/wav2vec2/processing_wav2vec2.js"),M=n(
/*! ./wav2vec2_with_lm/processing_wav2vec2_with_lm.js */
"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),k=n(
/*! ./whisper/processing_whisper.js */
"./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":
/*!************************************************!*\
      !*** ./src/models/pvt/image_processing_pvt.js ***!
      \************************************************/(e,t,n)=>{n.r(t),n.d(t,{PvtImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":
/*!************************************************************!*\
      !*** ./src/models/pyannote/feature_extraction_pyannote.js ***!
      \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{PyAnnoteFeatureExtractor:()=>a});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js"),i=n(
/*! ../../utils/maths.js */
"./src/utils/maths.js");class a extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new s.Tensor("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const n=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const s of e.tolist()){const e=[];let t=-1;for(let n=0;n<s.length;++n){const r=(0,i.softmax)(s[n]),[a,o]=(0,i.max)(r),[l,u]=[n,n+1];o!==t?(t=o,e.push({id:o,start:l,end:u,score:a})):(e.at(-1).end=u,e.at(-1).score+=a)}r.push(e.map(({id:e,start:t,end:r,score:s})=>({id:e,start:t*n,end:r*n,confidence:s/(r-t)})))}return r}}},"./src/models/pyannote/processing_pyannote.js":
/*!****************************************************!*\
      !*** ./src/models/pyannote/processing_pyannote.js ***!
      \****************************************************/(e,n,r)=>{r.r(n),r.d(n,{PyAnnoteProcessor:()=>a});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ./feature_extraction_pyannote.js */
"./src/models/pyannote/feature_extraction_pyannote.js");class a extends s.Processor{async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}t(a,"feature_extractor_class",i.PyAnnoteFeatureExtractor)},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":
/*!**********************************************************!*\
      !*** ./src/models/qwen2_vl/image_processing_qwen2_vl.js ***!
      \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{Qwen2VLImageProcessor:()=>i});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e,...t){const{pixel_values:n,original_sizes:r,reshaped_input_sizes:i}=await super._call(e,...t);let a=n;const{temporal_patch_size:o,merge_size:l,patch_size:u}=this.config;1===a.dims[0]&&(a=(0,s.cat)(Array.from({length:o},()=>a),0));const d=a.dims[0]/o,c=a.dims[1],p=Math.floor(a.dims[2]/u),h=Math.floor(a.dims[3]/u);return{pixel_values:a.view(d,o,c,Math.floor(p/l),l,u,Math.floor(h/l),l,u).permute(0,3,6,4,7,2,1,5,8).view(d*p*h,c*o*u*u),image_grid_thw:new s.Tensor("int64",[d,p,h],[1,3]),original_sizes:r,reshaped_input_sizes:i}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":
/*!****************************************************!*\
      !*** ./src/models/qwen2_vl/processing_qwen2_vl.js ***!
      \****************************************************/(e,n,r)=>{r.r(n),r.d(n,{Qwen2VLProcessor:()=>o});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),a=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js");r(
/*! ../../utils/image.js */
"./src/utils/image.js");class o extends s.Processor{async _call(e,t=null,...n){let r,s;if(Array.isArray(e)||(e=[e]),t&&(r=await this.image_processor(t),s=r.image_grid_thw),s){let t=this.image_processor.config.merge_size**2,n=0;const r=s.tolist();e=e.map(e=>{for(;e.includes("<|image_pad|>");){const s=Number(r[n++].reduce((e,t)=>e*t,1n));e=e.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(s/t)))}return e.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(e),...r}}}t(o,"image_processor_class",i.AutoImageProcessor),t(o,"tokenizer_class",a.AutoTokenizer)},"./src/models/rt_detr/image_processing_rt_detr.js":
/*!********************************************************!*\
      !*** ./src/models/rt_detr/image_processing_rt_detr.js ***!
      \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{RTDetrImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}},"./src/models/sam/image_processing_sam.js":
/*!************************************************!*\
      !*** ./src/models/sam/image_processing_sam.js ***!
      \************************************************/(e,t,n)=>{n.r(t),n.d(t,{SamImageProcessor:()=>a});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),s=n(
/*! ../../utils/core.js */
"./src/utils/core.js"),i=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class a extends r.ImageProcessor{reshape_input_points(e,t,n,r=!1){e=structuredClone(e);let a=(0,s.calculateDimensions)(e);if(3===a.length)r||(a=[1,...a]),e=[e];else if(4!==a.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let s=0;s<e.length;++s){let r=t[s],i=n[s],a=[i[0]/r[0],i[1]/r[1]];for(let t=0;t<e[s].length;++t)for(let n=0;n<e[s][t].length;++n)for(let r=0;r<e[s][t][n].length;++r)e[s][t][n][r]*=a[r%2]}return new i.Tensor("float32",Float32Array.from(e.flat(1/0)),a)}add_input_labels(e,t){let n=(0,s.calculateDimensions)(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some((e,n)=>e!==t.dims[n]))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new i.Tensor("int64",e.flat(1/0).map(BigInt),n)}async _call(e,{input_points:t=null,input_labels:n=null,input_boxes:r=null}={}){const s=await super._call(e);if(t&&(s.input_points=this.reshape_input_points(t,s.original_sizes,s.reshaped_input_sizes)),n){if(!s.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");s.input_labels=this.add_input_labels(n,s.input_points)}return r&&(s.input_boxes=this.reshape_input_points(r,s.original_sizes,s.reshaped_input_sizes,!0)),s}async post_process_masks(e,t,n,{mask_threshold:r=0,binarize:s=!0,pad_size:a=null}={}){const o=[],l=[(a=a??this.pad_size).height,a.width];for(let u=0;u<t.length;++u){const a=t[u],d=n[u];let c=await(0,i.interpolate_4d)(e[u],{mode:"bilinear",size:l});if(c=c.slice(null,null,[0,d[0]],[0,d[1]]),c=await(0,i.interpolate_4d)(c,{mode:"bilinear",size:a}),s){const e=c.data,t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)e[n]>r&&(t[n]=1);c=new i.Tensor("bool",t,c.dims)}o.push(c)}return o}generate_crop_boxes(e,t,{crop_n_layers:n=0,overlap_ratio:r=512/1500,points_per_crop:s=32,crop_n_points_downscale_factor:i=1}={}){}}},"./src/models/sam/processing_sam.js":
/*!******************************************!*\
      !*** ./src/models/sam/processing_sam.js ***!
      \******************************************/(e,n,r)=>{r.r(n),r.d(n,{SamProcessor:()=>a});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js");class a extends s.Processor{async _call(...e){return await this.image_processor(...e)}post_process_masks(...e){return this.image_processor.post_process_masks(...e)}reshape_input_points(...e){return this.image_processor.reshape_input_points(...e)}}t(a,"image_processor_class",i.AutoImageProcessor)},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":
/*!********************************************************************!*\
      !*** ./src/models/seamless_m4t/feature_extraction_seamless_m4t.js ***!
      \********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{SeamlessM4TFeatureExtractor:()=>a});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js"),i=n(
/*! ../../utils/audio.js */
"./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,i.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return e=e.map(e=>32768*e),(0,i.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:i=!0,return_attention_mask:a=!0}={}){(0,r.validate_audio_inputs)(e,"SeamlessM4TFeatureExtractor");let o,l=await this._extract_fbank_features(e,this.config.max_length);if(i){const[e,t]=l.dims,n=l.data;for(let r=0;r<t;++r){let s=0;for(let l=0;l<e;++l)s+=n[l*t+r];const i=s/e;let a=0;for(let l=0;l<e;++l)a+=(n[l*t+r]-i)**2;a/=e-1;const o=Math.sqrt(a+1e-7);for(let l=0;l<e;++l){const e=l*t+r;n[e]=(n[e]-i)/o}}}if(t){const[e,t]=l.dims,r=l.data,i=e%n;if(i>0){const n=new Float32Array(t*(e+i));n.set(r),n.fill(this.config.padding_value,r.length);const u=e+i;l=new s.Tensor(l.type,n,[u,t]),a&&(o=new s.Tensor("int64",new BigInt64Array(u),[1,u]),o.data.fill(1n,0,e))}}const[u,d]=l.dims,c=this.config.stride;if(0!==u%c)throw new Error(`The number of frames (${u}) must be a multiple of the stride (${c}).`);const p=l.view(1,Math.floor(u/c),d*c),h={input_features:p};if(a){const e=p.dims[1],t=new BigInt64Array(e);if(o){const e=o.data;for(let n=1,r=0;n<u;n+=c,++r)t[r]=e[n]}else t.fill(1n);h.attention_mask=new s.Tensor("int64",t,[1,e])}return h}}},"./src/models/segformer/image_processing_segformer.js":
/*!************************************************************!*\
      !*** ./src/models/segformer/image_processing_segformer.js ***!
      \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{SegformerFeatureExtractor:()=>i,SegformerImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_semantic_segmentation(...e){return(0,r.post_process_semantic_segmentation)(...e)}}class i extends s{}},"./src/models/siglip/image_processing_siglip.js":
/*!******************************************************!*\
      !*** ./src/models/siglip/image_processing_siglip.js ***!
      \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{SiglipImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":
/*!********************************************************!*\
      !*** ./src/models/smolvlm/image_processing_smolvlm.js ***!
      \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{SmolVLMImageProcessor:()=>r.Idefics3ImageProcessor});var r=n(
/*! ../idefics3/image_processing_idefics3.js */
"./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":
/*!**************************************************!*\
      !*** ./src/models/smolvlm/processing_smolvlm.js ***!
      \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{SmolVLMProcessor:()=>r.Idefics3Processor});var r=n(
/*! ../idefics3/processing_idefics3.js */
"./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":
/*!****************************************************!*\
      !*** ./src/models/snac/feature_extraction_snac.js ***!
      \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{SnacFeatureExtractor:()=>s});var r=n(
/*! ../dac/feature_extraction_dac.js */
"./src/models/dac/feature_extraction_dac.js");class s extends r.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":
/*!************************************************************!*\
      !*** ./src/models/speecht5/feature_extraction_speecht5.js ***!
      \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{SpeechT5FeatureExtractor:()=>s});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js");class s extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":
/*!****************************************************!*\
      !*** ./src/models/speecht5/processing_speecht5.js ***!
      \****************************************************/(e,n,r)=>{r.r(n),r.d(n,{SpeechT5Processor:()=>o});var s=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),i=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),a=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js");class o extends s.Processor{async _call(e){return await this.feature_extractor(e)}}t(o,"tokenizer_class",i.AutoTokenizer),t(o,"feature_extractor_class",a.AutoFeatureExtractor)},"./src/models/swin2sr/image_processing_swin2sr.js":
/*!********************************************************!*\
      !*** ./src/models/swin2sr/image_processing_swin2sr.js ***!
      \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{Swin2SRImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,i,a]=t;return super.pad_image(e,t,{width:i+(n-i%n)%n,height:s+(n-s%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}},"./src/models/ultravox/processing_ultravox.js":
/*!****************************************************!*\
      !*** ./src/models/ultravox/processing_ultravox.js ***!
      \****************************************************/(e,n,r)=>{r.r(n),r.d(n,{UltravoxProcessor:()=>o});var s=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),i=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),a=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js");class o extends a.Processor{async _call(e,t=null,n={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");let r={};if(t){const s=t.length,{input_features:i}=await this.feature_extractor(t,{...n,max_length:s}),a=Math.round(s/this.config.encoder_ds_factor+1e-4),o=1+Math.ceil(a/this.config.stack_factor);r.audio_token_len=[o],r.audio_values=i;const l=this.config.audio_placeholder;if(!e.includes(l))throw new Error(`The input text does not contain the image token ${l}.`);e=e.replaceAll(l,l.repeat(o))}return{...this.tokenizer(e,{add_special_tokens:!1,...n}),...r}}}t(o,"tokenizer_class",i.AutoTokenizer),t(o,"feature_extractor_class",s.AutoFeatureExtractor),t(o,"uses_processor_config",!0)},"./src/models/vit/image_processing_vit.js":
/*!************************************************!*\
      !*** ./src/models/vit/image_processing_vit.js ***!
      \************************************************/(e,t,n)=>{n.r(t),n.d(t,{ViTFeatureExtractor:()=>i,ViTImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class i extends s{}},"./src/models/vitmatte/image_processing_vitmatte.js":
/*!**********************************************************!*\
      !*** ./src/models/vitmatte/image_processing_vitmatte.js ***!
      \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{VitMatteImageProcessor:()=>i});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.ImageProcessor{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await Promise.all(e.map(e=>this.preprocess(e))),r=await Promise.all(t.map(e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,s.stack)(n.map((e,t)=>(0,s.cat)([e.pixel_values,r[t].pixel_values],0)),0),original_sizes:n.map(e=>e.original_size),reshaped_input_sizes:n.map(e=>e.reshaped_input_size)}}}},"./src/models/vitpose/image_processing_vitpose.js":
/*!********************************************************!*\
      !*** ./src/models/vitpose/image_processing_vitpose.js ***!
      \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{VitPoseImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_pose_estimation(e,t,{threshold:n=null}={}){const r=e.tolist(),[s,i,a,o]=e.dims,l=[];for(let u=0;u<s;++u){const e=r[u],s=t[u],i=[];for(let t=0;t<s.length;++t){const r=s[t],l=[],u=[],d=[],c=r.at(-2)/o,p=r.at(-1)/a;for(let t=0;t<e.length;++t){let[r,s]=[0,0],i=0,a=-1/0;const o=e[t];for(let e=0;e<o.length;++e){const t=o[e];for(let n=0;n<t.length;++n){const o=t[n];i+=o,a=Math.max(a,o),r+=(n+.5)*o,s+=e*o}}if(null!=n&&a<n)continue;const h=[c*r/i,p*s/i];l.push(h),d.push(t),u.push(a)}i.push({bbox:r,scores:u,labels:d,keypoints:l})}l.push(i)}return l}}},"./src/models/voxtral/processing_voxtral.js":
/*!**************************************************!*\
      !*** ./src/models/voxtral/processing_voxtral.js ***!
      \**************************************************/(e,n,r)=>{r.r(n),r.d(n,{VoxtralProcessor:()=>u});var s=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),i=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),a=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js"),o=r(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");const l="[AUDIO]";class u extends a.Processor{async _call(e,t=null,n={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");const r={};if(t){if(!e.includes(l))throw new Error(`The input text does not contain the audio token ${l}.`);Array.isArray(t)||(t=[t]);const s=e.split(l),i=s.length-1;if(i!==t.length)throw new Error(`The number of audio inputs (${t.length}) does not match the number of audio tokens in the text (${i}).`);const a=this.feature_extractor.config.n_samples,u=t.map(e=>function(e,t){const n=[];for(let r=0;r<e.length;r+=t)n.push(e.subarray(r,Math.min(r+t,e.length)));return n}(e,a)),d=u.map(e=>e.length),c=u.flat(),p=(await Promise.all(c.map(e=>this.feature_extractor(e,n)))).map(e=>e.input_features);r.audio_values=p.length>1?(0,o.cat)(p,0):p[0];let h=s[0];for(let e=0;e<d.length;++e){h+="[BEGIN_AUDIO]";for(let t=0;t<d[e];++t)h+=l.repeat(375);h+=s[e+1]}e=h}return{...this.tokenizer(e,{add_special_tokens:!1,...n}),...r}}}t(u,"tokenizer_class",i.AutoTokenizer),t(u,"feature_extractor_class",s.AutoFeatureExtractor),t(u,"uses_processor_config",!1)},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":
/*!************************************************************!*\
      !*** ./src/models/wav2vec2/feature_extraction_wav2vec2.js ***!
      \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2FeatureExtractor:()=>i});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js"),s=n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");class i extends r.FeatureExtractor{_zero_mean_unit_var_norm(e){const t=e.reduce((e,t)=>e+t,0)/e.length,n=e.reduce((e,n)=>e+(n-t)**2,0)/e.length;return e.map(e=>(e-t)/Math.sqrt(n+1e-7))}async _call(e){(0,r.validate_audio_inputs)(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new s.Tensor("float32",t,n),attention_mask:new s.Tensor("int64",new BigInt64Array(t.length).fill(1n),n)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":
/*!****************************************************!*\
      !*** ./src/models/wav2vec2/processing_wav2vec2.js ***!
      \****************************************************/(e,n,r)=>{r.r(n),r.d(n,{Wav2Vec2Processor:()=>o});var s=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),i=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),a=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js");class o extends a.Processor{async _call(e){return await this.feature_extractor(e)}}t(o,"tokenizer_class",s.AutoTokenizer),t(o,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":
/*!********************************************************************!*\
      !*** ./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js ***!
      \********************************************************************/(e,n,r)=>{r.r(n),r.d(n,{Wav2Vec2ProcessorWithLM:()=>o});var s=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),i=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),a=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js");class o extends a.Processor{async _call(e){return await this.feature_extractor(e)}}t(o,"tokenizer_class",s.AutoTokenizer),t(o,"feature_extractor_class",i.AutoFeatureExtractor)},"./src/models/wespeaker/feature_extraction_wespeaker.js":
/*!**************************************************************!*\
      !*** ./src/models/wespeaker/feature_extraction_wespeaker.js ***!
      \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{WeSpeakerFeatureExtractor:()=>i});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js");n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");var s=n(
/*! ../../utils/audio.js */
"./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map(e=>32768*e),(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){(0,r.validate_audio_inputs)(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,n=t.data,[r,s,i]=t.dims;for(let t=0;t<r;++t){const r=t*s*i,a=t*i;for(let t=0;t<s;++t){const s=r+t*i;for(let t=0;t<i;++t)n[s+t]-=e[a+t]}}}return{input_features:t}}}},"./src/models/whisper/common_whisper.js":
/*!**********************************************!*\
      !*** ./src/models/whisper/common_whisper.js ***!
      \**********************************************/(e,t,n)=>{n.r(t),n.d(t,{WHISPER_LANGUAGE_MAPPING:()=>s,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>i,whisper_language_to_code:()=>a});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],s=new Map(r),i=new Map([...r.map(([e,t])=>[t,e]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(e){e=e.toLowerCase();let t=i.get(e);if(void 0===t){const n=e.match(/^<\|([a-z]{2})\|>$/);if(n&&(e=n[1]),!s.has(e)){const t=2===e.length?s.keys():s.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(Array.from(t))}`)}t=e}return t}},"./src/models/whisper/feature_extraction_whisper.js":
/*!**********************************************************!*\
      !*** ./src/models/whisper/feature_extraction_whisper.js ***!
      \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{WhisperFeatureExtractor:()=>a});var r=n(
/*! ../../base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js");n(
/*! ../../utils/tensor.js */
"./src/utils/tensor.js");var s=n(
/*! ../../utils/audio.js */
"./src/utils/audio.js"),i=n(
/*! ../../utils/maths.js */
"./src/utils/maths.js");class a extends r.FeatureExtractor{constructor(e){var t;super(e),(t=this.config).mel_filters??(t.mel_filters=(0,s.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney")),this.window=(0,s.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await(0,s.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(e.length/this.config.hop_length),this.config.nb_max_frames)}),n=t.data,r=(0,i.max)(n)[0];for(let s=0;s<n.length;++s)n[s]=(Math.max(n[s],r-8)+4)/4;return t}async _call(e,{max_length:t=null}={}){let n;(0,r.validate_audio_inputs)(e,"WhisperFeatureExtractor");const s=t??this.config.n_samples;e.length>s?(e.length,this.config.n_samples,n=e.slice(0,s)):(n=new Float32Array(s),n.set(e));return{input_features:(await this._extract_fbank_features(n)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":
/*!**************************************************!*\
      !*** ./src/models/whisper/generation_whisper.js ***!
      \**************************************************/(e,n,r)=>{r.r(n),r.d(n,{WhisperGenerationConfig:()=>i});var s=r(
/*! ../../generation/configuration_utils.js */
"./src/generation/configuration_utils.js");class i extends s.GenerationConfig{constructor(){super(...arguments),t(this,"return_timestamps",null),t(this,"return_token_timestamps",null),t(this,"num_frames",null),t(this,"alignment_heads",null),t(this,"task",null),t(this,"language",null),t(this,"no_timestamps_token_id",null),t(this,"prompt_ids",null),t(this,"is_multilingual",null),t(this,"lang_to_id",null),t(this,"task_to_id",null),t(this,"max_initial_timestamp_index",1)}}},"./src/models/whisper/processing_whisper.js":
/*!**************************************************!*\
      !*** ./src/models/whisper/processing_whisper.js ***!
      \**************************************************/(e,n,r)=>{r.r(n),r.d(n,{WhisperProcessor:()=>o});var s=r(
/*! ../auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),i=r(
/*! ../../tokenizers.js */
"./src/tokenizers.js"),a=r(
/*! ../../base/processing_utils.js */
"./src/base/processing_utils.js");class o extends a.Processor{async _call(e){return await this.feature_extractor(e)}}t(o,"tokenizer_class",i.AutoTokenizer),t(o,"feature_extractor_class",s.AutoFeatureExtractor)},"./src/models/yolos/image_processing_yolos.js":
/*!****************************************************!*\
      !*** ./src/models/yolos/image_processing_yolos.js ***!
      \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{YolosFeatureExtractor:()=>i,YolosImageProcessor:()=>s});var r=n(
/*! ../../base/image_processors_utils.js */
"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class i extends s{}},"./src/ops/registry.js":
/*!*****************************!*\
      !*** ./src/ops/registry.js ***!
      \*****************************/(e,n,r)=>{r.r(n),r.d(n,{TensorOpRegistry:()=>u});var s=r(
/*! ../backends/onnx.js */
"./src/backends/onnx.js"),i=r(
/*! ../utils/tensor.js */
"./src/utils/tensor.js"),a=r(
/*! ../env.js */
"./src/env.js");const o=a.apis.IS_BROWSER_ENV||a.apis.IS_WEBWORKER_ENV,l=async(e,t,n)=>{const r=await(0,s.createInferenceSession)(new Uint8Array(e),t);let a=Promise.resolve();return async e=>{const t=(0,s.isONNXProxy)(),l=Object.fromEntries(Object.entries(e).map(([e,n])=>[e,(t?n.clone():n).ort_tensor])),u=await(a=o?a.then(()=>r.run(l)):r.run(l));return Array.isArray(n)?n.map(e=>new i.Tensor(u[e])):new i.Tensor(u[n])}};class u{static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=l([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=l([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=l([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=l([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=l([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=l([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=l([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=l([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}t(u,"session_options",{})},"./src/pipelines.js":
/*!**************************!*\
      !*** ./src/pipelines.js ***!
      \**************************/(e,n,r)=>{r.r(n),r.d(n,{AudioClassificationPipeline:()=>E,AutomaticSpeechRecognitionPipeline:()=>A,BackgroundRemovalPipeline:()=>O,DepthEstimationPipeline:()=>V,DocumentQuestionAnsweringPipeline:()=>N,FeatureExtractionPipeline:()=>S,FillMaskPipeline:()=>y,ImageClassificationPipeline:()=>z,ImageFeatureExtractionPipeline:()=>C,ImageSegmentationPipeline:()=>F,ImageToImagePipeline:()=>R,ImageToTextPipeline:()=>I,ObjectDetectionPipeline:()=>B,Pipeline:()=>_,QuestionAnsweringPipeline:()=>b,SummarizationPipeline:()=>x,Text2TextGenerationPipeline:()=>v,TextClassificationPipeline:()=>g,TextGenerationPipeline:()=>T,TextToAudioPipeline:()=>j,TokenClassificationPipeline:()=>w,TranslationPipeline:()=>M,ZeroShotAudioClassificationPipeline:()=>P,ZeroShotClassificationPipeline:()=>$,ZeroShotImageClassificationPipeline:()=>L,ZeroShotObjectDetectionPipeline:()=>D,pipeline:()=>U});var s=r(
/*! ./tokenizers.js */
"./src/tokenizers.js"),i=r(
/*! ./models.js */
"./src/models.js"),a=r(
/*! ./models/auto/processing_auto.js */
"./src/models/auto/processing_auto.js");r(
/*! ./base/processing_utils.js */
"./src/base/processing_utils.js");var o=r(
/*! ./utils/generic.js */
"./src/utils/generic.js"),l=r(
/*! ./utils/core.js */
"./src/utils/core.js"),u=r(
/*! ./utils/maths.js */
"./src/utils/maths.js"),d=r(
/*! ./utils/audio.js */
"./src/utils/audio.js"),c=r(
/*! ./utils/tensor.js */
"./src/utils/tensor.js"),p=r(
/*! ./utils/image.js */
"./src/utils/image.js");async function h(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map(e=>p.RawImage.read(e)))}async function m(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map(e=>"string"==typeof e||e instanceof URL?(0,d.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e))}function f(e,t){t&&(e=e.map(e=>0|e));const[n,r,s,i]=e;return{xmin:n,ymin:r,xmax:s,ymax:i}}class _ extends o.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class g extends _{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),s="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new c.Tensor("float32",(0,u.softmax)(e.data),e.dims),i=this.model.config.id2label,a=[];for(const o of r.logits){const e=s(o),n=await(0,c.topk)(e,t),r=n[0].tolist(),l=n[1].tolist().map((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:r[t]}));1===t?a.push(...l):a.push(l)}return Array.isArray(e)||1===t?a:a[0]}}class w extends _{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),s=(await this.model(r)).logits,i=this.model.config.id2label,a=[];for(let o=0;o<s.dims[0];++o){const e=r.input_ids[o],n=s[o],l=[];for(let r=0;r<n.dims[0];++r){const s=n[r],a=(0,u.max)(s.data)[1],o=i?i[a]:`LABEL_${a}`;if(t.includes(o))continue;const d=this.tokenizer.decode([e[r].item()],{skip_special_tokens:!0});if(""===d)continue;const c=(0,u.softmax)(s.data);l.push({entity:o,score:c[a],index:r,word:d})}a.push(l)}return n?a:a[0]}}class b extends _{constructor(e){super(e)}async _call(e,t,{top_k:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:s,end_logits:i}=await this.model(r),a=r.input_ids.tolist(),o=r.attention_mask.tolist(),d=this.tokenizer.all_special_ids,c=[];for(let p=0;p<s.dims[0];++p){const e=a[p],t=e.findIndex(e=>e==this.tokenizer.sep_token_id);o[p].map((n,r)=>1==n&&(0===r||r>t&&-1===d.findIndex(t=>t==e[r])));const r=s[p].tolist(),h=i[p].tolist();for(let n=1;n<r.length;++n)(0==o[p]||n<=t||-1!==d.findIndex(t=>t==e[n]))&&(r[n]=-1/0,h[n]=-1/0);const m=(0,u.softmax)(r).map((e,t)=>[e,t]),f=(0,u.softmax)(h).map((e,t)=>[e,t]);m[0][0]=0,f[0][0]=0;const _=(0,l.product)(m,f).filter(e=>e[0][1]<=e[1][1]).map(e=>[e[0][1],e[1][1],e[0][0]*e[1][0]]).sort((e,t)=>t[2]-e[2]);for(let s=0;s<Math.min(_.length,n);++s){const[t,n,r]=_[s],i=e.slice(t,n+1),a=this.tokenizer.decode(i,{skip_special_tokens:!0});c.push({answer:a,score:r})}}return 1===n?c[0]:c}}class y extends _{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),s=[],i=n.input_ids.tolist();for(let a=0;a<i.length;++a){const e=i[a],n=e.findIndex(e=>e==this.tokenizer.mask_token_id);if(-1===n)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const o=r[a][n],l=await(0,c.topk)(new c.Tensor("float32",(0,u.softmax)(o.data),o.dims),t),d=l[0].tolist(),p=l[1].tolist();s.push(p.map((t,r)=>{const s=e.slice();return s[n]=t,{score:d[r],token:Number(t),token_str:this.tokenizer.decode([t]),sequence:this.tokenizer.decode(s,{skip_special_tokens:!0})}}))}return Array.isArray(e)?s:s[0]}}class v extends _{constructor(e){super(e),t(this,"_key","generated_text")}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map(e=>this.model.config.prefix+e));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map(e=>n[this.task].prefix+e));const r=this.tokenizer,s={padding:!0,truncation:!0};let i;i=this instanceof M&&"_build_translation_inputs"in r?r._build_translation_inputs(e,s,t):r(e,s);const a=await this.model.generate({...i,...t});return r.batch_decode(a,{skip_special_tokens:!0}).map(e=>({[this._key]:e}))}}class x extends v{constructor(e){super(e),t(this,"_key","summary_text")}}class M extends v{constructor(e){super(e),t(this,"_key","translation_text")}}function k(e){return Array.isArray(e)&&e.every(e=>"role"in e&&"content"in e)}class T extends _{constructor(e){super(e)}async _call(e,t={}){let n,r=!1,s=!1,i=t.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1;if("string"==typeof e)n=e=[e];else if(Array.isArray(e)&&e.every(e=>"string"==typeof e))r=!0,n=e;else{if(k(e))e=[e];else{if(!Array.isArray(e)||!e.every(k))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}s=!0,n=e.map(e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})),i=!1}const a=!s&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const o=this.tokenizer(n,{add_special_tokens:i,padding:!0,truncation:!0}),l=await this.model.generate({...o,...t}),u=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!a&&o.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(o.input_ids,{skip_special_tokens:!0}).map(e=>e.length));const c=Array.from({length:e.length},e=>[]);for(let p=0;p<u.length;++p){const t=Math.floor(p/l.dims[0]*e.length);d&&(u[p]=u[p].slice(d[t])),c[t].push({generated_text:s?[...e[t],{role:"assistant",content:u[p]}]:u[p]})}return r||1!==c.length?c:c[0]}}class $ extends _{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([e,t])=>[e.toLowerCase(),t])),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){const s=Array.isArray(e);s||(e=[e]),Array.isArray(t)||(t=[t]);const i=t.map(e=>n.replace("{}",e)),a=r||1===t.length,o=[];for(const l of e){const e=[];for(const t of i){const n=this.tokenizer(l,{text_pair:t,padding:!0,truncation:!0}),r=await this.model(n);a?e.push([r.logits.data[this.contradiction_id],r.logits.data[this.entailment_id]]):e.push(r.logits.data[this.entailment_id])}const n=(a?e.map(e=>(0,u.softmax)(e)[1]):(0,u.softmax)(e)).map((e,t)=>[e,t]).sort((e,t)=>t[0]-e[0]);o.push({sequence:l,labels:n.map(e=>t[e[1]]),scores:n.map(e=>e[0])})}return s?o:o[0]}}class S extends _{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:n=!1,quantize:r=!1,precision:s="binary"}={}){const i=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(i);let o=a.last_hidden_state??a.logits??a.token_embeddings;switch(t){case"none":break;case"mean":o=(0,c.mean_pooling)(o,i.attention_mask);break;case"first_token":case"cls":o=o.slice(null,0);break;case"last_token":case"eos":o=o.slice(null,-1);break;default:throw Error(`Pooling method '${t}' not supported.`)}return n&&(o=o.normalize(2,-1)),r&&(o=(0,c.quantize_embeddings)(o,s)),o}}class C extends _{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const n=await h(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r});let i;if(t){if(!("pooler_output"in s))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");i=s.pooler_output}else i=s.last_hidden_state??s.logits??s.image_embeds;return i}}class E extends _{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,r=await m(e,n),s=this.model.config.id2label,i=[];for(const a of r){const e=await this.processor(a),n=(await this.model(e)).logits[0],r=await(0,c.topk)(new c.Tensor("float32",(0,u.softmax)(n.data),n.dims),t),o=r[0].tolist(),l=r[1].tolist().map((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:o[t]}));i.push(l)}return Array.isArray(e)?i:i[0]}}class P extends _{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const s=t.map(e=>n.replace("{}",e)),i=this.tokenizer(s,{padding:!0,truncation:!0}),a=this.processor.feature_extractor.config.sampling_rate,o=await m(e,a),l=[];for(const d of o){const e=await this.processor(d),n=await this.model({...i,...e}),r=(0,u.softmax)(n.logits_per_audio.data);l.push([...r].map((e,n)=>({score:e,label:t[n]})))}return r?l[0]:l}}class A extends _{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);case"moonshine":return this._call_moonshine(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language,t.task;const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await m(e,r),i=[];for(const a of s){const e=await this.processor(a),t=(await this.model(e)).logits[0],n=[];for(const s of t)n.push((0,u.max)(s.data)[1]);const r=this.tokenizer.decode(n);i.push({text:r})}return n?i[0]:i}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,s=t.force_full_sequences??!1;let i=t.stride_length_s??null;const a={...t};"word"===n&&(a.return_token_timestamps=!0,a.return_timestamps=!1);const o=!Array.isArray(e);o&&(e=[e]);const l=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,d=this.processor.feature_extractor.config.hop_length,c=this.processor.feature_extractor.config.sampling_rate,p=await m(e,c),h=[];for(const m of p){let e=[];if(r>0){if(null===i)i=r/6;else if(r<=i)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const t=c*r,n=c*i,s=t-2*n;let a=0;for(;;){const r=a+t,i=m.subarray(a,r),o=await this.processor(i),l=0===a,u=r>=m.length;if(e.push({stride:[i.length,l?0:n,u?0:n],input_features:o.input_features,is_last:u}),u)break;a+=s}}else e=[{stride:[m.length,0,0],input_features:(await this.processor(m)).input_features,is_last:!0}];for(const r of e){a.num_frames=Math.floor(r.stride[0]/d);const e=await this.model.generate({inputs:r.input_features,...a});"word"===n?(r.tokens=e.sequences.tolist()[0],r.token_timestamps=e.token_timestamps.tolist()[0].map(e=>(0,u.round)(e,2))):r.tokens=e[0].tolist(),r.stride=r.stride.map(e=>e/c)}const[t,o]=this.tokenizer._decode_asr(e,{time_precision:l,return_timestamps:n,force_full_sequences:s});h.push({text:t,...o})}return o?h[0]:h}async _call_moonshine(e,t){const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await m(e,r),i=[];for(const a of s){const e=await this.processor(a),n=6*Math.floor(a.length/r),s=await this.model.generate({max_new_tokens:n,...t,...e}),o=this.processor.batch_decode(s,{skip_special_tokens:!0})[0];i.push({text:o})}return n?i[0]:i}}class I extends _{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await h(e),{pixel_values:s}=await this.processor(r),i=[];for(const a of s){a.dims=[1,...a.dims];const e=await this.model.generate({inputs:a,...t}),n=this.tokenizer.batch_decode(e,{skip_special_tokens:!0}).map(e=>({generated_text:e.trim()}));i.push(n)}return n?i:i[0]}}class z extends _{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=await h(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r}),i=this.model.config.id2label,a=[];for(const o of s.logits){const e=await(0,c.topk)(new c.Tensor("float32",(0,u.softmax)(o.data),o.dims),t),n=e[0].tolist(),r=e[1].tolist().map((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:n[t]}));a.push(r)}return Array.isArray(e)?a:a[0]}}class F extends _{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:s=null,target_sizes:i=null,subtask:a=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const o=await h(e),l=o.map(e=>[e.height,e.width]),u=await this.processor(o),{inputNames:d,outputNames:c}=this.model.sessions.model;if(!d.includes("pixel_values")){if(1!==d.length)throw Error(`Expected a single input name, but got ${d.length} inputs: ${d}.`);const e=d[0];if(e in u)throw Error(`Input name ${e} already exists in the inputs.`);u[e]=u.pixel_values}const m=await this.model(u);let f=null;if(null!==a)f=this.subtasks_mapping[a];else if(this.processor.image_processor)for(const[p,h]of Object.entries(this.subtasks_mapping))if(h in this.processor.image_processor){f=this.processor.image_processor[h].bind(this.processor.image_processor),a=p;break}const _=this.model.config.id2label,g=[];if(a)if("panoptic"===a||"instance"===a){const e=f(m,t,n,r,s,i??l)[0],a=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(a.data.length);for(let r=0;r<a.data.length;++r)a.data[r]===t.id&&(e[r]=255);const n=new p.RawImage(e,a.dims[1],a.dims[0],1);g.push({score:t.score,label:_[t.label_id],mask:n})}}else{if("semantic"!==a)throw Error(`Subtask ${a} not supported.`);{const{segmentation:e,labels:t}=f(m,i??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let s=0;s<e.data.length;++s)e.data[s]===n&&(t[s]=255);const r=new p.RawImage(t,e.dims[1],e.dims[0],1);g.push({score:null,label:_[n],mask:r})}}}else{const e=1e-5,t=m[c[0]];for(let n=0;n<l.length;++n){const r=l[n],s=t[n];s.data.some(t=>t<-e||t>1+e)&&s.sigmoid_();const i=await p.RawImage.fromTensor(s.mul_(255).to("uint8")).resize(r[1],r[0]);g.push({label:null,score:null,mask:i})}}return g}}class O extends F{constructor(e){super(e)}async _call(e,t={}){if(Array.isArray(e)&&1!==e.length)throw Error("Background removal pipeline currently only supports a batch size of 1.");const n=await h(e),r=await super._call(e,t);return n.map((e,t)=>{const n=e.clone();return n.putAlpha(r[t].mask),n})}}class L extends _{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){const r=Array.isArray(e),s=await h(e),i=t.map(e=>n.replace("{}",e)),a=this.tokenizer(i,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:o}=await this.processor(s),l=await this.model({...a,pixel_values:o}),d="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,u.softmax)(e.data),c=[];for(const u of l.logits_per_image){const e=[...d(u)].map((e,n)=>({score:e,label:t[n]}));e.sort((e,t)=>t.score-e.score),c.push(e)}return r?c:c[0]}}class B extends _{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const s=await h(e),i=n?null:s.map(e=>[e.height,e.width]),{pixel_values:a,pixel_mask:o}=await this.processor(s),l=await this.model({pixel_values:a,pixel_mask:o}),u=this.processor.image_processor.post_process_object_detection(l,t,i),d=this.model.config.id2label,c=u.map(e=>e.boxes.map((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:f(t,!n)})));return r?c:c[0]}}class D extends _{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,top_k:r=null,percentage:s=!1}={}){const i=Array.isArray(e),a=await h(e),o=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(a),u=[];for(let d=0;d<a.length;++d){const e=a[d],i=s?null:[[e.height,e.width]],c=l.pixel_values[d].unsqueeze_(0),p=await this.model({...o,pixel_values:c});let h;if("post_process_grounded_object_detection"in this.processor){const e=this.processor.post_process_grounded_object_detection(p,o.input_ids,{box_threshold:n,text_threshold:n,target_sizes:i})[0];h=e.boxes.map((t,n)=>({score:e.scores[n],label:e.labels[n],box:f(t,!s)}))}else{const e=this.processor.image_processor.post_process_object_detection(p,n,i,!0)[0];h=e.boxes.map((n,r)=>({score:e.scores[r],label:t[e.classes[r]],box:f(n,!s)}))}h.sort((e,t)=>t.score-e.score),null!==r&&(h=h.slice(0,r)),u.push(h)}return i?u:u[0]}}class N extends _{constructor(e){super(e)}async _call(e,t,n={}){const r=(await h(e))[0],{pixel_values:s}=await this.processor(r),i=`<s_docvqa><s_question>${t}</s_question><s_answer>`,a=this.tokenizer(i,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,o=await this.model.generate({inputs:s,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:a,...n}),l=this.tokenizer.batch_decode(o)[0].match(/<s_answer>(.*?)<\/s_answer>/);let u=null;return l&&l.length>=2&&(u=l[1].trim()),[{answer:u}]}}class j extends _{constructor(e){super(e),t(this,"DEFAULT_VOCODER_ID","Xenova/speecht5_hifigan"),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return new d.RawAudio(n.data,r)}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(this.vocoder=await i.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new c.Tensor("float32",t,[1,t.length]);else if(!(t instanceof c.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),s=this.processor.feature_extractor.config.sampling_rate;return new d.RawAudio(r.data,s)}}class R extends _{constructor(e){super(e)}async _call(e){const t=await h(e),n=await this.processor(t),r=await this.model(n),s=[];for(const i of r.reconstruction){const e=i.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");s.push(p.RawImage.fromTensor(e))}return s.length>1?s:s[0]}}class V extends _{constructor(e){super(e)}async _call(e){const t=await h(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),s=[];for(let i=0;i<t.length;++i){const e=r[i],[n,a]=e.dims.slice(-2),[o,l]=t[i].size,u=(await(0,c.interpolate_4d)(e.view(1,1,n,a),{size:[l,o],mode:"bilinear"})).view(l,o),d=u.min().item(),h=u.max().item(),m=u.sub(d).div_(h-d).mul_(255).to("uint8").unsqueeze(0),f=p.RawImage.fromTensor(m);s.push({predicted_depth:u,depth:f})}return s.length>1?s:s[0]}}const G=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:g,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:w,model:i.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:b,model:i.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:y,model:i.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:x,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:M,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:v,model:i.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:T,model:i.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:$,model:i.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:E,model:i.AutoModelForAudioClassification,processor:a.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:P,model:i.AutoModel,processor:a.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:A,model:[i.AutoModelForSpeechSeq2Seq,i.AutoModelForCTC],processor:a.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:j,model:[i.AutoModelForTextToWaveform,i.AutoModelForTextToSpectrogram],processor:[a.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:I,model:i.AutoModelForVision2Seq,processor:a.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:z,model:i.AutoModelForImageClassification,processor:a.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:F,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:a.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:O,model:[i.AutoModelForImageSegmentation,i.AutoModelForSemanticSegmentation,i.AutoModelForUniversalSegmentation],processor:a.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:L,model:i.AutoModel,processor:a.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:B,model:i.AutoModelForObjectDetection,processor:a.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:D,model:i.AutoModelForZeroShotObjectDetection,processor:a.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:N,model:i.AutoModelForDocumentQuestionAnswering,processor:a.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:R,model:i.AutoModelForImageToImage,processor:a.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:V,model:i.AutoModelForDepthEstimation,processor:a.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:S,model:i.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:a.AutoProcessor,pipeline:C,model:[i.AutoModelForImageFeatureExtraction,i.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),q=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function U(e,t=null,{progress_callback:n=null,config:r=null,cache_dir:s=null,local_files_only:i=!1,revision:a="main",device:o=null,dtype:u=null,subfolder:d="onnx",use_external_data_format:c=null,model_file_name:p=null,session_options:h={}}={}){e=q[e]??e;const m=G[e.split("_",1)[0]];if(!m)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(G)}]`);t||(t=m.default.model);const f={progress_callback:n,config:r,cache_dir:s,local_files_only:i,revision:a,device:o,dtype:u,subfolder:d,use_external_data_format:c,model_file_name:p,session_options:h},_=new Map([["tokenizer",m.tokenizer],["model",m.model],["processor",m.processor]]),g=await async function(e,t,n){const r=Object.create(null),s=[];for(const[i,a]of e.entries()){if(!a)continue;let e;e=Array.isArray(a)?new Promise(async(e,r)=>{var s,i;let o;for(const u of a){if(null===u)return void e(null);try{return void e(await u.from_pretrained(t,n))}catch(l){if(null==(s=l.message)?void 0:s.includes("Unsupported model type"))o=l;else{if(!(null==(i=l.message)?void 0:i.includes("Could not locate file")))return void r(l);o=l}}}r(o)}):a.from_pretrained(t,n),r[i]=e,s.push(e)}await Promise.all(s);for(const[i,a]of Object.entries(r))r[i]=await a;return r}(_,t,f);g.task=e,(0,l.dispatchCallback)(n,{status:"ready",task:e,model:t});return new(0,m.pipeline)(g)}},"./src/tokenizers.js":
/*!***************************!*\
      !*** ./src/tokenizers.js ***!
      \***************************/(e,n,r)=>{r.r(n),r.d(n,{AlbertTokenizer:()=>Te,AutoTokenizer:()=>wt,BartTokenizer:()=>Ne,BertTokenizer:()=>ke,BlenderbotSmallTokenizer:()=>ct,BlenderbotTokenizer:()=>dt,BloomTokenizer:()=>Ge,CLIPTokenizer:()=>at,CamembertTokenizer:()=>Fe,CodeGenTokenizer:()=>it,CodeLlamaTokenizer:()=>We,CohereTokenizer:()=>ft,ConvBertTokenizer:()=>Ae,DebertaTokenizer:()=>Ce,DebertaV2Tokenizer:()=>Ee,DistilBertTokenizer:()=>ze,ElectraTokenizer:()=>Le,Ernie4_5_Tokenizer:()=>gt,EsmTokenizer:()=>Je,FalconTokenizer:()=>Qe,GPT2Tokenizer:()=>De,GPTNeoXTokenizer:()=>Xe,GemmaTokenizer:()=>Ze,Grok1Tokenizer:()=>et,HerbertTokenizer:()=>Pe,LlamaTokenizer:()=>Ue,M2M100Tokenizer:()=>rt,MBart50Tokenizer:()=>Re,MBartTokenizer:()=>je,MPNetTokenizer:()=>Ke,MarianTokenizer:()=>lt,MgpstrTokenizer:()=>_t,MobileBertTokenizer:()=>$e,NllbTokenizer:()=>nt,NougatTokenizer:()=>ht,PreTrainedTokenizer:()=>Me,Qwen2Tokenizer:()=>Ye,RoFormerTokenizer:()=>Ie,RobertaTokenizer:()=>Ve,SiglipTokenizer:()=>ot,SpeechT5Tokenizer:()=>pt,SqueezeBertTokenizer:()=>Se,T5Tokenizer:()=>Be,TokenizerModel:()=>k,VitsTokenizer:()=>mt,Wav2Vec2CTCTokenizer:()=>ut,WhisperTokenizer:()=>st,XLMRobertaTokenizer:()=>He,XLMTokenizer:()=>Oe,is_chinese_char:()=>w});var s=r(
/*! ./utils/generic.js */
"./src/utils/generic.js"),i=r(
/*! ./utils/core.js */
"./src/utils/core.js"),a=r(
/*! ./utils/hub.js */
"./src/utils/hub.js"),o=r(
/*! ./utils/maths.js */
"./src/utils/maths.js"),l=r(
/*! ./utils/tensor.js */
"./src/utils/tensor.js"),u=r(
/*! ./utils/data-structures.js */
"./src/utils/data-structures.js"),d=r(
/*! @huggingface/jinja */
"./node_modules/@huggingface/jinja/dist/index.js"),c=r(
/*! ./models/whisper/common_whisper.js */
"./src/models/whisper/common_whisper.js");async function p(e,t){const n=await Promise.all([(0,a.getModelJSON)(e,"tokenizer.json",!0,t),(0,a.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function h(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of x)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=(0,i.escapeRegExp)(e.String);return new RegExp(t?n:`(${n})`,"gu")}return null}function m(e){return new Map(Object.entries(e))}function f(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function _(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(e){return e.replace(new RegExp("\\p{M}","gu"),"")}function w(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const b="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",y=new RegExp(`^[${b}]+$`,"gu"),v=".,!?…。，、।۔،",x=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${v}])]+`,` ?[^\\s${v}]+`]]);class M{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class k extends s.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new T(e);case"Unigram":return new $(e,...t);case"BPE":return new E(e);default:if(e.vocab)return Array.isArray(e.vocab)?new $(e,...t):Object.hasOwn(e,"continuing_subword_prefix")&&Object.hasOwn(e,"unk_token")?Object.hasOwn(e,"merges")?new E(e):new T(e):new P(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,n){const r=[];let s=0;for(;s<e.length;)if(r.push(e[s]),(t.get(e[s])??n)===n)for(;++s<e.length&&(t.get(e[s])??n)===n;)t.get(r.at(-1))!==n&&(r[r.length-1]+=e[s]);else++s;return r}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map(e=>this.tokens_to_ids.get(e)??this.unk_token_id)}convert_ids_to_tokens(e){return e.map(e=>this.vocab[e]??this.unk_token)}}class T extends k{constructor(e){super(e),this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[t,n]of this.tokens_to_ids)this.vocab[n]=t}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,s=0;const i=[];for(;s<e.length;){let t=e.length,n=null;for(;s<t;){let r=e.slice(s,t).join("");if(s>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}i.push(n),s=t}r?t.push(this.unk_token):t.push(...i)}return t}}class $ extends k{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let r=0;r<n;++r)[this.vocab[r],this.scores[r]]=e.vocab[r];this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map((e,t)=>[e,t])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,o.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new u.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let n=0;for(;n<t.length;){let r=!1;const s=t.slice(n).join(""),a=this.trie.commonPrefixSearch(s);for(const t of a){const s=this.tokens_to_ids.get(t),a=this.scores[s],o=(0,i.len)(t);e.insert(n,o,a,s),r||1!==o||(r=!0)}r||e.insert(n,1,this.unk_score,this.unk_token_id),n+=1}}tokenize(e){const t=new u.TokenLattice(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const S=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},(e,t)=>t+"!".charCodeAt(0)),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},(e,t)=>t+"¡".charCodeAt(0)),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},(e,t)=>t+"®".charCodeAt(0))],t=e.slice();let n=0;for(let s=0;s<256;++s)e.includes(s)||(e.push(s),t.push(256+n),n+=1);const r=t.map(e=>String.fromCharCode(e));return Object.fromEntries(e.map((e,t)=>[e,r[t]]))})(),C=(0,i.reverseDictionary)(S);class E extends k{constructor(e){super(e),this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[n,r]of this.tokens_to_ids)this.vocab[r]=n;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map(e=>e.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((e,t)=>[JSON.stringify(e),t])),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new u.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new u.PriorityQueue((e,t)=>e.score<t.score);let t={token:n[0],bias:0,prev:null,next:null},s=t;for(let r=1;r<n.length;++r){const t={bias:r/n.length,token:n[r],prev:s,next:null};s.next=t,this._add_node(e,s),s=t}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let n=t;null!==n;n=n.next)r.push(n.token)}else r=n;if(this.continuing_subword_suffix)for(let s=0;s<r.length-1;++s)r[s]+=this.continuing_subword_suffix;return e.length<this.max_length_to_cache&&this.cache.put(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){t.push(n);continue}const e=this.bpe(n);for(const n of e)if(this.tokens_to_ids.has(n))t.push(n);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(n)).map(e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`);e.every(e=>this.tokens_to_ids.has(e))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class P extends k{constructor(e,t){super(e),this.tokens_to_ids=m(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[n,r]of this.tokens_to_ids)this.vocab[r]=n}encode(e){return e}}class A extends s.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new G(e);case"Precompiled":return new fe(e);case"Sequence":return new V(e);case"Replace":return new I(e);case"NFC":return new F(e);case"NFD":return new O(e);case"NFKC":return new L(e);case"NFKD":return new B(e);case"Strip":return new D(e);case"StripAccents":return new N(e);case"Lowercase":return new j(e);case"Prepend":return new R(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class I extends A{normalize(e){const t=h(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class z extends A{constructor(){super(...arguments),t(this,"form")}normalize(e){return e=e.normalize(this.form)}}class F extends z{constructor(){super(...arguments),t(this,"form","NFC")}}class O extends z{constructor(){super(...arguments),t(this,"form","NFD")}}class L extends z{constructor(){super(...arguments),t(this,"form","NFKC")}}class B extends z{constructor(){super(...arguments),t(this,"form","NFKD")}}class D extends A{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class N extends A{normalize(e){return e=g(e)}}class j extends A{normalize(e){return e=e.toLowerCase()}}class R extends A{normalize(e){return e=this.config.prepend+e}}class V extends A{constructor(e){super(e),this.normalizers=e.normalizers.map(e=>A.fromConfig(e))}normalize(e){return this.normalizers.reduce((e,t)=>t.normalize(e),e)}}class G extends A{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n];w(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class q extends s.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new U(e);case"Sequence":return new _e(e);case"Whitespace":return new ge(e);case"WhitespaceSplit":return new we(e);case"Metaspace":return new he(e);case"ByteLevel":return new W(e);case"Split":return new H(e);case"Punctuation":return new K(e);case"Digits":return new Q(e);case"Replace":return new be(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map(e=>this.pre_tokenize_text(e,t)):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class U extends q{constructor(e){super(),this.pattern=new RegExp(`[^\\s${b}]+|[${b}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class W extends q{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=S,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map(e=>Array.from(this.text_encoder.encode(e),e=>this.byte_encoder[e]).join(""))}}class H extends q{constructor(e){super(),this.config=e,this.pattern=h(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){var n;return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:"removed"===(null==(n=this.config.behavior)?void 0:n.toLowerCase())?e.split(this.pattern).filter(e=>e):function(e,t){const n=[];let r=0;for(const s of e.matchAll(t)){const t=s[0];r<s.index&&n.push(e.slice(r,s.index)),t.length>0&&n.push(t),r=s.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class K extends q{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${b}]+|[${b}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class Q extends q{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class X extends s.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new Z(e);case"ByteLevel":return new ee(e);case"RobertaProcessing":return new Y(e);case"BertProcessing":return new J(e);case"Sequence":return new te(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class J extends X{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:n=!0}={}){n&&(e=(0,i.mergeArrays)([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const s=n&&this instanceof Y?[this.sep]:[],a=n?[this.sep]:[];e=(0,i.mergeArrays)(e,s,t,a),r=(0,i.mergeArrays)(r,new Array(t.length+s.length+a.length).fill(1))}return{tokens:e,token_type_ids:r}}}class Y extends J{}class Z extends X{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:n=!0}={}){const r=null===t?this.single:this.pair;let s=[],a=[];for(const o of r)"SpecialToken"in o?n&&(s.push(o.SpecialToken.id),a.push(o.SpecialToken.type_id)):"Sequence"in o&&("A"===o.Sequence.id?(s=(0,i.mergeArrays)(s,e),a=(0,i.mergeArrays)(a,new Array(e.length).fill(o.Sequence.type_id))):"B"===o.Sequence.id&&(s=(0,i.mergeArrays)(s,t),a=(0,i.mergeArrays)(a,new Array(t.length).fill(o.Sequence.type_id))));return{tokens:s,token_type_ids:a}}}class ee extends X{post_process(e,t=null){return t&&(e=(0,i.mergeArrays)(e,t)),{tokens:e}}}class te extends X{constructor(e){super(e),this.processors=e.processors.map(e=>X.fromConfig(e))}post_process(e,t=null,n={}){let r;for(const s of this.processors)if(s instanceof ee){if(e=s.post_process(e).tokens,t){t=s.post_process(t).tokens}}else{const i=s.post_process(e,t,n);e=i.tokens,r=i.token_type_ids}return{tokens:e,token_type_ids:r}}}class ne extends s.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new oe(e);case"Metaspace":return new me(e);case"ByteLevel":return new le(e);case"Replace":return new re(e);case"ByteFallback":return new se(e);case"Fuse":return new ie(e);case"Strip":return new ae(e);case"Sequence":return new de(e);case"CTC":return new ue(e);case"BPEDecoder":return new ce(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class re extends ne{decode_chain(e){const t=h(this.config.pattern);return null===t?e:e.map(e=>e.replaceAll(t,this.config.content))}}class se extends ne{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class ie extends ne{decode_chain(e){return[e.join("")]}}class ae extends ne{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map(e=>{let t=0;for(let r=0;r<this.start&&e[r]===this.content;++r)t=r+1;let n=e.length;for(let r=0;r<this.stop;++r){const t=e.length-r-1;if(e[t]!==this.content)break;n=t}return e.slice(t,n)})}}class oe extends ne{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=_(e)),e))}}class le extends ne{constructor(e){super(e),this.byte_decoder=C,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map(e=>this.byte_decoder[e]));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find(e=>e.content===r)?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class ue extends ne{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let r=1;r<e.length;++r)e[r]!==t.at(-1)&&t.push(e[r]);let n=t.filter(e=>e!==this.pad_token).join("");return this.cleanup&&(n=_(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class de extends ne{constructor(e){super(e),this.decoders=e.decoders.map(e=>ne.fromConfig(e))}decode_chain(e){return this.decoders.reduce((e,t)=>t.decode_chain(e),e)}}class ce extends ne{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" "))}}class pe extends ne{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class he extends q{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class me extends ne{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class fe extends A{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map(e=>e.normalize("NFKC")).join("～")}else e=e.normalize("NFKC");return e}}class _e extends q{constructor(e){super(),this.tokenizers=e.pretokenizers.map(e=>q.fromConfig(e))}pre_tokenize_text(e,t){return this.tokenizers.reduce((e,n)=>n.pre_tokenize(e,t),[e])}}class ge extends q{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class we extends q{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class be extends q{constructor(e){super(),this.config=e,this.pattern=h(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const ye=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function ve(e,t,n,r){for(const s of Object.keys(e)){const a=t-e[s].length,o=n(s),l=new Array(a).fill(o);e[s]="right"===r?(0,i.mergeArrays)(e[s],l):(0,i.mergeArrays)(l,e[s])}}function xe(e,t){for(const n of Object.keys(e))e[n].length=t}class Me extends s.Callable{constructor(e,n){super(),t(this,"return_token_type_ids",!1),t(this,"padding_side","right"),this.config=n,this.normalizer=A.fromConfig(e.normalizer),this.pre_tokenizer=q.fromConfig(e.pre_tokenizer),this.model=k.fromConfig(e.model,n),this.post_processor=X.fromConfig(e.post_processor),this.decoder=ne.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new M(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=n.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new u.DictionarySplitter(this.added_tokens.map(e=>e.content)),this.added_tokens_map=new Map(this.added_tokens.map(e=>[e.content,e])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=n.model_max_length,this.remove_space=n.remove_space,this.clean_up_tokenization_spaces=n.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=n.do_lowercase_and_remove_accent??!1,n.padding_side&&(this.padding_side=n.padding_side),this.add_bos_token=n.add_bos_token,this.add_eos_token=n.add_eos_token,this.legacy=!1,this.chat_template=n.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:n}of this.chat_template){if("string"!=typeof t||"string"!=typeof n)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=n}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this.config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",legacy:a=null}={}){return new this(...await p(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,legacy:a}))}_call(e,{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:s=null,max_length:i=null,return_tensor:a=!0,return_token_type_ids:u=null}={}){const d=Array.isArray(e);let c;if(d){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");c=e.map((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:n,return_token_type_ids:u}))}else c=e.map(e=>this._encode_plus(e,{add_special_tokens:n,return_token_type_ids:u}))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");c=[this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:u})]}if(null===i?i=this.model_max_length:null===s&&(!0===r?i=this.model_max_length:!1===r&&(s=!0)),!0===r&&(i=Math.min((0,o.max)(c.map(e=>e.input_ids.length))[0],i??1/0)),i=Math.min(i,this.model_max_length??1/0),r||s)for(let o=0;o<c.length;++o)c[o].input_ids.length!==i&&(c[o].input_ids.length>i?s&&xe(c[o],i):r&&ve(c[o],i,e=>"input_ids"===e?this.pad_token_id:0,this.padding_side));const p={};if(a){if((!r||!s)&&c.some(e=>{var t;for(const n of Object.keys(e))if(e[n].length!==(null==(t=c[0][n])?void 0:t.length))return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[c.length,c[0].input_ids.length];for(const t of Object.keys(c[0]))p[t]=new l.Tensor("int64",BigInt64Array.from(c.flatMap(e=>e[t]).map(BigInt)),e)}else{for(const e of Object.keys(c[0]))p[e]=c.map(t=>t[e]);if(!d)for(const e of Object.keys(p))p[e]=p[e][0]}return p}_encode_text(e){if(null===e)return null;const t=this.added_tokens_splitter.split(e);for(let r=0;r<t.length;++r){const e=this.added_tokens_map.get(t[r]);e&&(e.lstrip&&r>0&&(t[r-1]=t[r-1].trimEnd()),e.rstrip&&r<t.length-1&&(t[r+1]=t[r+1].trimStart()))}const n=t.flatMap((e,t)=>{if(0===e.length)return[];if(this.added_tokens_map.has(e))return[e];if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return g(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)});return n}_encode_plus(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){const{tokens:s,token_type_ids:i}=this._tokenize_helper(e,{pair:t,add_special_tokens:n}),a=this.model.convert_tokens_to_ids(s),o={input_ids:a,attention_mask:new Array(a.length).fill(1)};return(r??this.return_token_type_ids)&&i&&(o.token_type_ids=i),o}_tokenize_helper(e,{pair:t=null,add_special_tokens:n=!1}={}){const r=this._encode_text(e),s=this._encode_text(t);return this.post_processor?this.post_processor(r,s,{add_special_tokens:n}):{tokens:(0,i.mergeArrays)(r??[],s??[])}}tokenize(e,{pair:t=null,add_special_tokens:n=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:n}).tokens}encode(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof l.Tensor&&(e=e.tolist()),e.map(e=>this.decode(e,t))}decode(e,t={}){if(e instanceof l.Tensor&&(e=f(e)),!Array.isArray(e)||0===e.length||!(0,i.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter(e=>!this.special_tokens.includes(e)));let s=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(s=s.replaceAll(this.decoder.end_of_word_suffix," "),t&&(s=s.trim())),(n??this.clean_up_tokenization_spaces)&&(s=_(s)),s}get_chat_template({chat_template:e=null,tools:t=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){const n=this.chat_template;if(null!==e&&Object.hasOwn(n,e))e=n[e];else if(null===e)if(null!==t&&"tool_use"in n)e=n.tool_use;else{if(!("default"in n))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(n).sort()}.`);e=n.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e,{tools:t=null,documents:n=null,chat_template:r=null,add_generation_prompt:s=!1,tokenize:i=!0,padding:a=!1,truncation:o=!1,max_length:l=null,return_tensor:u=!0,return_dict:c=!1,tokenizer_kwargs:p={},...h}={}){if("string"!=typeof(r=this.get_chat_template({chat_template:r,tools:t})))throw Error("chat_template must be a string, but got "+typeof r);let m=this._compiled_template_cache.get(r);void 0===m&&(m=new d.Template(r),this._compiled_template_cache.set(r,m));const f=Object.create(null);for(const d of ye){const e=this.getToken(d);e&&(f[d]=e)}const _=m.render({messages:e,add_generation_prompt:s,tools:t,documents:n,...f,...h});if(i){const e=this._call(_,{add_special_tokens:!1,padding:a,truncation:o,max_length:l,return_tensor:u,...p});return c?e:e.input_ids}return _}}class ke extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Te extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class $e extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Se extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Ce extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Ee extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Pe extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Ae extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Ie extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class ze extends Me{}class Fe extends Me{}class Oe extends Me{constructor(e,n){super(e,n),t(this,"return_token_type_ids",!0)}}class Le extends Me{constructor(){super(...arguments),t(this,"return_token_type_ids",!0)}}class Be extends Me{}class De extends Me{}class Ne extends Me{}class je extends Me{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(e=>this.languageRegex.test(e)),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return tt(this,e,t,n)}}class Re extends je{}class Ve extends Me{}class Ge extends Me{}const qe="▁";class Ue extends Me{constructor(e,n){super(e,n),t(this,"padding_side","left"),this.legacy=n.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new he({replacement:qe,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(qe+e.replaceAll(qe," "));return t.length>1&&t[0]===qe&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class We extends Me{}class He extends Me{}class Ke extends Me{}class Qe extends Me{}class Xe extends Me{}class Je extends Me{}class Ye extends Me{}class Ze extends Me{}class et extends Me{}function tt(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const s=r.src_lang,i=r.tgt_lang;if(!e.language_codes.includes(i))throw new Error(`Target language code "${i}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==s){if(!e.language_codes.includes(s))throw new Error(`Source language code "${s}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(s);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(i)])[0],e._call(t,n)}class nt extends Me{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(e=>this.languageRegex.test(e)),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return tt(this,e,t,n)}}class rt extends Me{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(e=>this.languageRegex.test(e)).map(e=>e.slice(2,-2)),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return tt(this,e,t,n)}}class st extends Me{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:s=!0}={}){if(null===r)throw Error("Must specify time_precision");let i=null;const a="word"===t;function l(){return{language:i,timestamp:[null,null],text:""}}const u=[];let d=l(),p=0;const h=this.timestamp_begin,m=h+1500;let f=[],_=[],g=!1,w=null;const b=new Set(this.all_special_ids);for(const M of e){const e=M.tokens,n=a?M.token_timestamps:null;let s=null,v=h;if("stride"in M){const[t,n,i]=M.stride;if(p-=n,w=t-i,n&&(v=n/r+h),i)for(let a=e.length-1;a>=0;--a){const t=Number(e[a]);if(t>=h){if(null!==s&&(t-h)*r<w)break;s=t}}}let x=[],k=[];for(let w=0;w<e.length;++w){const M=Number(e[w]);if(b.has(M)){const e=this.decode([M]),n=c.WHISPER_LANGUAGE_MAPPING.get(e.slice(2,-2));if(void 0!==n){if(null!==i&&n!==i&&!t){f.push(x);const e=this.findLongestCommonSequence(f)[0],t=this.decode(e);d.text=t,u.push(d),f=[],x=[],d=l()}i=d.language=n}}else if(M>=h&&M<=m){const e=(M-h)*r+p,t=(0,o.round)(e,2);if(null!==s&&M>=s)g=!0;else if(g||f.length>0&&M<v)g=!1;else if(null===d.timestamp[0])d.timestamp[0]=t;else if(t===d.timestamp[0]);else{d.timestamp[1]=t,f.push(x),a&&_.push(k);const[e,n]=this.findLongestCommonSequence(f,_),r=this.decode(e);d.text=r,a&&(d.words=this.collateWordTimestamps(e,n,i)),u.push(d),f=[],x=[],_=[],k=[],d=l()}}else if(x.push(M),a){let e,t=(0,o.round)(n[w]+p,2);if(w+1<n.length){e=(0,o.round)(n[w+1]+p,2);const s=this.decode([M]);y.test(s)&&(e=(0,o.round)(Math.min(t+r,e),2))}else e=null;k.push([t,e])}}if("stride"in M){const[e,t,n]=M.stride;p+=e-n}x.length>0?(f.push(x),a&&_.push(k)):f.every(e=>0===e.length)&&(d=l(),f=[],x=[],_=[],k=[])}if(f.length>0){if(s&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(f,_),r=this.decode(e);d.text=r,a&&(d.words=this.collateWordTimestamps(e,n,i)),u.push(d)}let v=Object.create(null);const x=u.map(e=>e.text).join("");if(t||n){for(let e=0;e<u.length;++e){const r=u[e];t||delete r.timestamp,n||delete r.language}if(a){const e=[];for(const t of u)for(const n of t.words)e.push(n);v={chunks:e}}else v={chunks:u}}return[x,v]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,s=[];const i=Array.isArray(t)&&t.length>0;let a=i?[]:null,o=i?t[0]:null;for(let l=1;l<e.length;++l){const u=e[l];let d=0,c=[r,r,0,0];const p=u.length;for(let e=1;e<r+p;++e){const s=Math.max(0,r-e),a=Math.min(r,r+p-e),h=n.slice(s,a),m=Math.max(0,e-r),f=Math.min(p,e),_=u.slice(m,f);if(h.length!==_.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let g;g=i?h.filter((e,n)=>e===_[n]&&o[s+n]<=t[l][m+n]).length:h.filter((e,t)=>e===_[t]).length;const w=g/e+e/1e4;g>1&&w>d&&(d=w,c=[s,a,m,f])}const[h,m,f,_]=c,g=Math.floor((m+h)/2),w=Math.floor((_+f)/2);s.push(...n.slice(0,g)),n=u.slice(w),r=n.length,i&&(a.push(...o.slice(0,g)),o=t[l].slice(w))}return s.push(...n),i?(a.push(...o),[s,a]):[s,[]]}collateWordTimestamps(e,t,n){const[r,s,i]=this.combineTokensIntoWords(e,n),a=[];for(let o=0;o<r.length;++o){const e=i[o];a.push({text:r[o],timestamp:[t[e.at(0)][0],t[e.at(-1)][1]]})}return a}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let s,i,a;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[s,i,a]=this.splitTokensOnUnicode(e):[s,i,a]=this.splitTokensOnSpaces(e),this.mergePunctuations(s,i,a,n,r)}decode(e,t){let n;return(null==t?void 0:t.decode_with_timestamps)?(e instanceof l.Tensor&&(e=f(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=(null==t?void 0:t.time_precision)??.02,r=Array.from(this.all_special_ids).at(-1)+1;let s=[[]];for(let i of e)if(i=Number(i),i>=r){const e=((i-r)*n).toFixed(2);s.push(`<|${e}|>`),s.push([])}else s[s.length-1].push(i);return s=s.map(e=>"string"==typeof e?e:super.decode(e,t)),s.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],s=[];let i=[],a=[],o=0;for(let l=0;l<e.length;++l){const u=e[l];i.push(u),a.push(l);const d=this.decode(i,{decode_with_timestamps:!0});d.includes("�")&&"�"!==t[o+d.indexOf("�")]||(n.push(d),r.push(i),s.push(a),i=[],a=[],o+=d.length)}return[n,r,s]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),s=[],i=[],a=[],o=new RegExp(`^[${b}]$`,"gu");for(let l=0;l<t.length;++l){const e=t[l],u=n[l],d=r[l],c=u[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),p=e.startsWith(" "),h=e.trim(),m=o.test(h);if(c||p||m||0===s.length)s.push(e),i.push(u),a.push(d);else{const t=s.length-1;s[t]+=e,i[t].push(...u),a[t].push(...d)}}return[s,i,a]}mergePunctuations(e,t,n,r,s){const a=structuredClone(e),o=structuredClone(t),l=structuredClone(n);let u=a.length-2,d=a.length-1;for(;u>=0;)a[u].startsWith(" ")&&r.includes(a[u].trim())?(a[d]=a[u]+a[d],o[d]=(0,i.mergeArrays)(o[u],o[d]),l[d]=(0,i.mergeArrays)(l[u],l[d]),a[u]="",o[u]=[],l[u]=[]):d=u,--u;for(u=0,d=1;d<a.length;)!a[u].endsWith(" ")&&s.includes(a[d])?(a[u]+=a[d],o[u]=(0,i.mergeArrays)(o[u],o[d]),l[u]=(0,i.mergeArrays)(l[u],l[d]),a[d]="",o[d]=[],l[d]=[]):u=d,++d;return[a.filter(e=>e),o.filter(e=>e.length>0),l.filter(e=>e.length>0)]}}class it extends Me{}class at extends Me{}class ot extends Me{}class lt extends Me{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(e=>this.languageRegex.test(e))}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e),(0,i.mergeArrays)([e],super._encode_text(t))}}}class ut extends Me{}class dt extends Me{}class ct extends Me{}class pt extends Me{}class ht extends Me{}class mt extends Me{constructor(e,t){super(e,t),this.decoder=new pe({})}}class ft extends Me{}class _t extends Me{}class gt extends Me{}class wt{static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:i="main",legacy:a=null}={}){var o;const[l,u]=await p(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:i,legacy:a}),d=(null==(o=u.tokenizer_class)?void 0:o.replace(/Fast$/,""))??"PreTrainedTokenizer";let c=this.TOKENIZER_CLASS_MAPPING[d];return c||(c=Me),new c(l,u)}}t(wt,"TOKENIZER_CLASS_MAPPING",{T5Tokenizer:Be,DistilBertTokenizer:ze,CamembertTokenizer:Fe,DebertaTokenizer:Ce,DebertaV2Tokenizer:Ee,BertTokenizer:ke,HerbertTokenizer:Pe,ConvBertTokenizer:Ae,RoFormerTokenizer:Ie,XLMTokenizer:Oe,ElectraTokenizer:Le,MobileBertTokenizer:$e,SqueezeBertTokenizer:Se,AlbertTokenizer:Te,GPT2Tokenizer:De,BartTokenizer:Ne,MBartTokenizer:je,MBart50Tokenizer:Re,RobertaTokenizer:Ve,WhisperTokenizer:st,CodeGenTokenizer:it,CLIPTokenizer:at,SiglipTokenizer:ot,MarianTokenizer:lt,BloomTokenizer:Ge,NllbTokenizer:nt,M2M100Tokenizer:rt,LlamaTokenizer:Ue,CodeLlamaTokenizer:We,XLMRobertaTokenizer:He,MPNetTokenizer:Ke,FalconTokenizer:Qe,GPTNeoXTokenizer:Xe,EsmTokenizer:Je,Wav2Vec2CTCTokenizer:ut,BlenderbotTokenizer:dt,BlenderbotSmallTokenizer:ct,SpeechT5Tokenizer:pt,NougatTokenizer:ht,VitsTokenizer:mt,Qwen2Tokenizer:Ye,GemmaTokenizer:Ze,Grok1Tokenizer:et,CohereTokenizer:ft,MgpstrTokenizer:_t,Ernie4_5_Tokenizer:gt,PreTrainedTokenizer:Me})},"./src/utils/audio.js":
/*!****************************!*\
      !*** ./src/utils/audio.js ***!
      \****************************/(e,t,n)=>{n.r(t),n.d(t,{RawAudio:()=>x,hamming:()=>p,hanning:()=>c,mel_filter_bank:()=>g,read_audio:()=>u,spectrogram:()=>b,window_function:()=>y});var r=n(
/*! ./hub.js */
"./src/utils/hub.js"),s=n(
/*! ./maths.js */
"./src/utils/maths.js"),i=n(
/*! ./core.js */
"./src/utils/core.js"),a=n(
/*! ../env.js */
"./src/env.js"),o=n(
/*! ./tensor.js */
"./src/utils/tensor.js"),l=n(
/*! node:fs */
"?7992");async function u(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await(0,r.getFile)(e)).arrayBuffer(),s=new AudioContext({sampleRate:t}),i=await s.decodeAudioData(n);let a;if(2===i.numberOfChannels){const e=Math.sqrt(2),t=i.getChannelData(0),n=i.getChannelData(1);a=new Float32Array(t.length);for(let r=0;r<i.length;++r)a[r]=e*(t[r]+n[r])/2}else a=i.getChannelData(0);return a}function d(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const n=1-t,r=2*Math.PI/(e-1),s=new Float64Array(e);for(let i=0;i<e;++i)s[i]=t-n*Math.cos(i*r);return s}function c(e){return d(e,.5)}function p(e){return d(e,.54)}const h={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,n=15,r=27/Math.log(6.4))=>e>=t?n+Math.log(e/t)*r:3*e/200};function m(e,t="htk"){const n=h[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map(e=>n(e))}const f={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,n=15,r=Math.log(6.4)/27)=>e>=n?t*Math.exp(r*(e-n)):200*e/3};function _(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},(t,n)=>e+r*n)}function g(e,t,n,r,s,i=null,a="htk",o=!1){if(null!==i&&"slaney"!==i)throw new Error('norm must be one of null or "slaney"');if(e<2)throw new Error(`Require num_frequency_bins: ${e} >= 2`);if(n>r)throw new Error(`Require min_frequency: ${n} <= max_frequency: ${r}`);const l=_(m(n,a),m(r,a),t+2);let u,d=function(e,t="htk"){const n=f[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map(e=>n(e))}(l,a);if(o){const t=s/(2*(e-1));u=m(Float64Array.from({length:e},(e,n)=>n*t),a),d=l}else u=_(0,Math.floor(s/2),e);const c=function(e,t){const n=Float64Array.from({length:t.length-1},(e,n)=>t[n+1]-t[n]),r=Array.from({length:e.length},()=>new Array(t.length));for(let a=0;a<e.length;++a){const n=r[a];for(let r=0;r<t.length;++r)n[r]=t[r]-e[a]}const s=t.length-2,i=Array.from({length:s},()=>new Array(e.length));for(let a=0;a<e.length;++a){const e=r[a];for(let t=0;t<s;++t){const r=-e[t]/n[t],s=e[t+2]/n[t+1];i[t][a]=Math.max(0,Math.min(r,s))}}return i}(u,d);if(null!==i&&"slaney"===i)for(let p=0;p<t;++p){const t=c[p],n=2/(d[p+2]-d[p]);for(let r=0;r<e;++r)t[r]*=n}return c}function w(e,t,n,r,i){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const a=Math.log10(n);for(let s=0;s<e.length;++s)e[s]=t*Math.log10(Math.max(r,e[s])-a);if(null!==i){if(i<=0)throw new Error("db_range must be greater than zero");const t=(0,s.max)(e)[0]-i;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}async function b(e,t,n,r,{fft_length:a=null,power:l=1,center:u=!0,pad_mode:d="reflect",onesided:c=!0,preemphasis:p=null,preemphasis_htk_flavor:h=!0,mel_filters:m=null,mel_floor:f=1e-10,log_mel:_=null,reference:g=1,min_value:b=1e-10,db_range:y=null,remove_dc_offset:v=null,min_num_frames:x=null,max_num_frames:M=null,do_pad:k=!0,transpose:T=!1}={}){const $=t.length;if(null===a&&(a=n),n>a)throw Error(`frame_length (${n}) may not be larger than fft_length (${a})`);if($!==n)throw new Error(`Length of the window (${$}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===l&&null!==m)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!h)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(u){if("reflect"!==d)throw new Error(`pad_mode="${d}" not implemented yet.`);const t=Math.floor((a-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),s=e.length-1;for(let i=0;i<e.length;++i)r[t+i]=e[i];for(let a=1;a<=t;++a)r[t-a]=e[(0,i.calculateReflectOffset)(a,s)];for(let a=1;a<=n;++a)r[s+t+a]=e[(0,i.calculateReflectOffset)(s-a,s)];return r}(e,t,t)}let S=Math.floor(1+Math.floor((e.length-n)/r));null!==x&&S<x&&(S=x);const C=c?Math.floor(a/2)+1:a;let E=S,P=S;null!==M&&(M>S?k&&(P=M):P=E=M);const A=new s.FFT(a),I=new Float64Array(a),z=new Float64Array(A.outputBufferSize),F=new Float32Array(C*P);for(let s=0;s<E;++s){const i=s*r,a=Math.min(e.length-i,n);a!==n&&I.fill(0,0,n);for(let t=0;t<a;++t)I[t]=e[i+t];if(v){let e=0;for(let n=0;n<a;++n)e+=I[n];const t=e/a;for(let n=0;n<a;++n)I[n]-=t}if(null!==p){for(let e=a-1;e>=1;--e)I[e]-=p*I[e-1];I[0]*=1-p}for(let e=0;e<t.length;++e)I[e]*=t[e];A.realTransform(z,I);for(let e=0;e<C;++e){const t=e<<1;F[e*P+s]=z[t]**2+z[t+1]**2}}if(null!==l&&2!==l){const e=l/2;for(let t=0;t<F.length;++t)F[t]**=e}const O=m.length;let L=await(0,o.matmul)(new o.Tensor("float32",m.flat(),[O,C]),new o.Tensor("float32",F,[C,P]));T&&(L=L.transpose(1,0));const B=L.data;for(let s=0;s<B.length;++s)B[s]=Math.max(f,B[s]);if(null!==l&&null!==_){const e=Math.min(B.length,E*O);switch(_){case"log":for(let t=0;t<e;++t)B[t]=Math.log(B[t]);break;case"log10":for(let t=0;t<e;++t)B[t]=Math.log10(B[t]);break;case"dB":if(1===l)!function(e,t=1,n=1e-5,r=null){w(e,20,t,n,r)}(B,g,b,y);else{if(2!==l)throw new Error(`Cannot use log_mel option '${_}' with power ${l}`);!function(e,t=1,n=1e-10,r=null){w(e,10,t,n,r)}(B,g,b,y)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_}'`)}}return L}function y(e,t,{periodic:n=!0,frame_length:r=null,center:s=!0}={}){const i=n?e+1:e;let a;switch(t){case"boxcar":a=new Float64Array(i).fill(1);break;case"hann":case"hann_window":a=c(i);break;case"hamming":a=p(i);break;case"povey":a=c(i).map(e=>Math.pow(e,.85));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(a=a.subarray(0,e)),null===r)return a;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return a}function v(e,t,n){for(let r=0;r<n.length;++r)e.setUint8(t+r,n.charCodeAt(r))}class x{constructor(e,t){this.audio=e,this.sampling_rate=t}toWav(){return function(e,t){let n=44;const r=new ArrayBuffer(n+4*e.length),s=new DataView(r);v(s,0,"RIFF"),s.setUint32(4,36+4*e.length,!0),v(s,8,"WAVE"),v(s,12,"fmt "),s.setUint32(16,16,!0),s.setUint16(20,3,!0),s.setUint16(22,1,!0),s.setUint32(24,t,!0),s.setUint32(28,4*t,!0),s.setUint16(32,4,!0),s.setUint16(34,32,!0),v(s,36,"data"),s.setUint32(40,4*e.length,!0);for(let i=0;i<e.length;++i,n+=4)s.setFloat32(n,e[i],!0);return r}(this.audio,this.sampling_rate)}toBlob(){const e=this.toWav();return new Blob([e],{type:"audio/wav"})}async save(e){let t;if(a.apis.IS_BROWSER_ENV){if(a.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");t=i.saveBlob}else{if(!a.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");t=async(e,t)=>{let n=await t.arrayBuffer();l.writeFileSync(e,Buffer.from(n))}}await t(e,this.toBlob())}}},"./src/utils/constants.js":
/*!********************************!*\
      !*** ./src/utils/constants.js ***!
      \********************************/(e,t,n)=>{n.r(t),n.d(t,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>s,FEATURE_EXTRACTOR_NAME:()=>i,GENERATION_CONFIG_NAME:()=>u,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>a,PROCESSOR_NAME:()=>o});const r="https://github.com/huggingface/transformers.js/issues/new/choose",s="config.json",i="preprocessor_config.json",a=i,o="processor_config.json",l="chat_template.jinja",u="generation_config.json"},"./src/utils/core.js":
/*!***************************!*\
      !*** ./src/utils/core.js ***!
      \***************************/(e,t,n)=>{function r(e,t){e&&e(t)}function s(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[t,e]))}function i(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(e){var t,n,r;return"TypedArray"===(null==(r=null==(n=null==(t=null==e?void 0:e.prototype)?void 0:t.__proto__)?void 0:n.constructor)?void 0:r.name)}function o(e){return Number.isInteger(e)||"bigint"==typeof e}function l(e){return null==e||-1===e}function u(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function d(e,t,n=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===n)throw Error(`Key ${t} does not exist in object.`);return n}function c(...e){return Array.prototype.concat.apply([],e)}function p(...e){return e.reduce((e,t)=>e.flatMap(e=>t.map(t=>[e,t])))}function h(e,t){return Math.abs((e+t)%(2*t)-t)}function m(e,t){const n=URL.createObjectURL(t),r=document.createElement("a");r.href=n,r.download=e,r.click(),r.remove(),URL.revokeObjectURL(n)}function f(e,t){return Object.assign({},...t.map(t=>{if(void 0!==e[t])return{[t]:e[t]}}))}function _(e){let t=0;for(const n of e)++t;return t}function g(e,t){let n=0;for(const r of e)r===t&&++n;return n}n.r(t),n.d(t,{calculateDimensions:()=>u,calculateReflectOffset:()=>h,count:()=>g,dispatchCallback:()=>r,escapeRegExp:()=>i,isIntegralNumber:()=>o,isNullishDimension:()=>l,isTypedArray:()=>a,len:()=>_,mergeArrays:()=>c,pick:()=>f,pop:()=>d,product:()=>p,reverseDictionary:()=>s,saveBlob:()=>m})},"./src/utils/data-structures.js":
/*!**************************************!*\
      !*** ./src/utils/data-structures.js ***!
      \**************************************/(e,t,n)=>{n.r(t),n.d(t,{CharTrie:()=>s,DictionarySplitter:()=>l,LRUCache:()=>u,PriorityQueue:()=>r,TokenLattice:()=>a});class r{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class s{constructor(){this.root=i.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const n of e){let e=t.children.get(n);void 0===e&&(e=i.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let n="";for(const r of e){if(n+=r,t=t.children.get(r),void 0===t)return;t.isLeaf&&(yield n)}}}class i{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new i(!1,new Map)}}class a{constructor(e,t,n){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const r=new o(this.bosTokenId,0,0,0,0),s=new o(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(s.clone()),this.beginNodes[this.len].push(s),this.endNodes[0].push(r)}insert(e,t,n,r){const s=this.nodes.length,i=new o(r,s,e,t,n);this.beginNodes[e].push(i),this.endNodes[e+t].push(i),this.nodes.push(i)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let s of this.endNodes[t]){const t=s.backtraceScore+e.score;(null===r||t>n)&&(r=s.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let s=r.clone();for(;null!==s.prev;){n.push(s.clone());const e=s.clone();s=e.prev.clone()}return n.reverse(),n}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map(e=>this.piece(e))}tokenIds(){return this.viterbi().map(e=>e.tokenId)}}class o{constructor(e,t,n,r,s){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=s,this.prev=null,this.backtraceScore=0}clone(){const e=new o(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}class l{constructor(e){this.trie=this._buildTrie(e)}_buildTrie(e){var t;const n=Object.create(null);for(const r of e){let e=n;for(let n=0;n<r.length;++n)e=e[t=r[n]]??(e[t]=Object.create(null));e.end=r}return n}split(e){const t=[],n=e.length;let r=0,s=0;for(;s<n;){let i=this.trie,a=null,o=s;for(;o<n&&(i=i[e[o]]);)i.end&&(a=i.end),++o;a?(s>r&&t.push(e.slice(r,s)),t.push(a),s+=a.length,r=s):++s}return r<n&&t.push(e.slice(r)),t}}class u{constructor(e){this.capacity=e,this.cache=new Map}get(e){if(!this.cache.has(e))return;const t=this.cache.get(e);return this.cache.delete(e),this.cache.set(e,t),t}put(e,t){this.cache.has(e)&&this.cache.delete(e),this.cache.set(e,t),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":
/*!******************************!*\
      !*** ./src/utils/devices.js ***!
      \******************************/(e,t,n)=>{n.r(t),n.d(t,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":
/*!*****************************!*\
      !*** ./src/utils/dtypes.js ***!
      \*****************************/(e,t,n)=>{n.r(t),n.d(t,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>o,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>i});var r=n(
/*! ../env.js */
"./src/env.js"),s=n(
/*! ./devices.js */
"./src/utils/devices.js");const i=function(){let e;return async function(){if(void 0===e)if(r.apis.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(y){e=!1}else e=!1;return e}}(),a=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),o=Object.freeze({[s.DEVICE_TYPES.wasm]:a.q8}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":
/*!******************************!*\
      !*** ./src/utils/generic.js ***!
      \******************************/(e,t,n)=>{n.r(t),n.d(t,{Callable:()=>r});const r=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":
/*!**************************!*\
      !*** ./src/utils/hub.js ***!
      \**************************/(e,t,n)=>{n.r(t),n.d(t,{MAX_EXTERNAL_DATA_CHUNKS:()=>o,getFile:()=>p,getModelFile:()=>f,getModelJSON:()=>g,getModelText:()=>_});var r=n(
/*! node:fs */
"?7992"),s=n(
/*! node:path */
"?5af5"),i=n(
/*! ../env.js */
"./src/env.js"),a=n(
/*! ./core.js */
"./src/utils/core.js");const o=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class u{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();const n=r.createReadStream(e);this.body=new ReadableStream({start(e){n.on("data",t=>e.enqueue(t)),n.on("end",()=>e.close()),n.on("error",t=>e.error(t))},cancel(){n.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[e]??"application/octet-stream")}clone(){let e=new u(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function d(e,t=null,n=null){let r;try{r=new URL(e)}catch(s){return!1}return!(t&&!t.includes(r.protocol))&&!(n&&!n.includes(r.hostname))}const c=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;async function p(e){var t;if(i.env.useFS&&!d(e,["http:","https:","blob:"]))return new u(e instanceof URL?"file:"===e.protocol?e.pathname:e.toString():e);if("undefined"!=typeof process&&"node"===(null==(t=null==process?void 0:process.release)?void 0:t.name)){const t=!!(null==Bc?void 0:Bc.TESTING_REMOTELY),n=i.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`);if(d(e,["http:","https:"],["huggingface.co","hf.co"])){const e=(null==Bc?void 0:Bc.HF_TOKEN)??(null==Bc?void 0:Bc.HF_ACCESS_TOKEN);e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const h={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class m{constructor(e){this.path=e}async match(e){let t=s.join(this.path,e),n=new u(t);return n.exists?n:void 0}async put(e,t,n=void 0){let i=s.join(this.path,e);try{const e=t.headers.get("Content-Length"),a=parseInt(e??"0");let o=0;await r.promises.mkdir(s.dirname(i),{recursive:!0});const l=r.createWriteStream(i),u=t.body.getReader();for(;;){const{done:e,value:t}=await u.read();if(e)break;await new Promise((e,n)=>{l.write(t,t=>{t?n(t):e()})}),o+=t.length;null==n||n({progress:a?o/a*100:0,loaded:o,total:a})}l.close()}catch(a){try{await r.promises.unlink(i)}catch{}throw a}}}async function f(e,t,n=!0,r={},s=!1){if(!i.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!i.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let o;if((0,a.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!o&&i.env.useCustomCache){if(!i.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!i.env.customCache.match||!i.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");o=i.env.customCache}if(!o&&i.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{o=await caches.open("transformers-cache")}catch(y){}}if(!o&&i.env.useFSCache){if(!i.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");o=new m(r.cache_dir??i.env.cacheDir)}const l=r.revision??"main",f=w(e,t),_=(g=e,!(!c.test(g)||g.includes("..")||g.includes("--")||g.endsWith(".git")||g.endsWith(".ipynb")));var g;const b=_?w(i.env.localModelPath,f):f,v=w(i.env.remoteHost,i.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(l)),t);let x;const M=o instanceof m?"main"===l?f:w(e,l,t):v;let k,T=!1;o&&(k=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(y){continue}}(o,b,M));const $=void 0!==k;if(void 0===k){if(i.env.allowLocalModels){if(d(f,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${f}.`);if(!i.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${f}.`)}else try{k=await p(b),x=b}catch(y){}}if(void 0===k||404===k.status){if(r.local_files_only||!i.env.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${b}".`);return null}if(!_)throw Error(`Local file missing at "${b}" and download aborted due to invalid model ID "${e}".`);if(k=await p(v),200!==k.status)return function(e,t,n){if(!n)return null;const r=h[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(k.status,v,n);x=M}T=o&&"undefined"!=typeof Response&&k instanceof Response&&200===k.status}let S;if((0,a.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t}),!i.apis.IS_NODE_ENV||!s){let n;r.progress_callback?$&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(n=new Uint8Array(await k.arrayBuffer()),(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,progress:100,loaded:n.length,total:n.length})):n=await async function(e,t){const n=e.headers.get("Content-Length");let r=parseInt(n??"0"),s=new Uint8Array(r),i=0;const a=e.body.getReader();async function o(){const{done:e,value:n}=await a.read();if(e)return;const l=i+n.length;if(l>r){r=l;const e=new Uint8Array(r);e.set(s),s=e}s.set(n,i),i=l;return t({progress:i/r*100,loaded:i,total:r}),o()}return await o(),s}(k,n=>{(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,...n})}):n=new Uint8Array(await k.arrayBuffer()),S=n}if(T&&x&&void 0===await o.match(x)&&(S?await o.put(x,new Response(S,{headers:k.headers})).catch(e=>{}):await o.put(x,k,r.progress_callback)),(0,a.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),S){if(!i.apis.IS_NODE_ENV&&s)throw new Error("Cannot return path in a browser environment.");return S}if(k instanceof u)return k.filePath;const C=await(null==o?void 0:o.match(x));if(C instanceof u)return C.filePath;if(C instanceof Response)return new Uint8Array(await C.arrayBuffer());if("string"==typeof C)return C;throw new Error("Unable to get model file path or buffer.")}async function _(e,t,n=!0,r={}){const s=await f(e,t,n,r,!1);if(null===s)return null;return new TextDecoder("utf-8").decode(s)}async function g(e,t,n=!0,r={}){const s=await _(e,t,n,r);return null===s?{}:JSON.parse(s)}function w(...e){return(e=e.map((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t))).join("/")}},"./src/utils/image.js":
/*!****************************!*\
      !*** ./src/utils/image.js ***!
      \****************************/(e,t,n)=>{n.r(t),n.d(t,{RawImage:()=>m,load_image:()=>f});var r=n(
/*! ./core.js */
"./src/utils/core.js"),s=n(
/*! ./hub.js */
"./src/utils/hub.js"),i=n(
/*! ../env.js */
"./src/env.js"),a=n(
/*! ./tensor.js */
"./src/utils/tensor.js"),o=n(
/*! sharp */
"?2b25");let l,u,d;const c=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV;if(c)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},d=self.createImageBitmap,u=self.ImageData;else{if(!o)throw new Error("Unable to load image processing library.");d=async e=>{const t=(await e.metadata()).channels,{data:n,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),s=new m(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&s.convert(t),s}}const p={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},h=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class m{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof m)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);if(e instanceof Blob)return await this.fromBlob(e);if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas)return this.fromCanvas(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!c)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new m(t,e.width,e.height,4)}static async fromURL(e){const t=await(0,s.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(c){const t=await d(e),n=l(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=o(await e.arrayBuffer());return await d(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new m(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],s=this.data[t+1],i=this.data[t+2];e[n++]=Math.round(.2989*r+.587*s+.114*i)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}putAlpha(e){if(e.width!==this.width||e.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${e.width}x${e.height}`);if(1!==e.channels)throw new Error(`Expected mask to have 1 channel, but got ${e.channels}`);const t=this.data,n=e.data,r=this.width*this.height;if(3===this.channels){const e=new Uint8ClampedArray(4*r);for(let s=0,i=0,a=0;s<r;++s)e[a++]=t[i++],e[a++]=t[i++],e[a++]=t[i++],e[a++]=n[s];return this._update(e,this.width,this.height,4)}if(4===this.channels){for(let e=0;e<r;++e)t[4*e+3]=n[e];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(e,t,{resample:n=2}={}){if(this.width===e&&this.height===t)return this;let s=p[n]??n;const i=(0,r.isNullishDimension)(e),a=(0,r.isNullishDimension)(t);if(i&&a)return this;if(i?e=t/this.height*this.width:a&&(t=e/this.width*this.height),c){const n=this.channels,r=this.toCanvas(),s=l(e,t).getContext("2d");s.drawImage(r,0,0,e,t);return new m(s.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(s){case"box":case"hamming":"box"!==s&&"hamming"!==s||(s="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:s});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${s} is not supported.`)}return await d(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(c){const s=this.channels,i=this.toCanvas(),a=this.width+e+t,o=this.height+n+r,u=l(a,o).getContext("2d");u.drawImage(i,0,0,this.width,this.height,e,n,this.width,this.height);return new m(u.getImageData(0,0,a,o).data,a,o,4).convert(s)}{const s=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await d(s)}}async crop([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.min(n,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&n===this.width-1&&r===this.height-1)return this;const s=n-e+1,i=r-t+1;if(c){const n=this.channels,r=this.toCanvas(),a=l(s,i).getContext("2d");a.drawImage(r,e,t,s,i,0,0,s,i);return new m(a.getImageData(0,0,s,i).data,s,i,4).convert(n)}{const n=this.toSharp().extract({left:e,top:t,width:s,height:i});return await d(n)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const n=(this.width-e)/2,r=(this.height-t)/2;if(c){const s=this.channels,i=this.toCanvas(),a=l(e,t).getContext("2d");let o=0,u=0,d=0,c=0;n>=0?o=n:d=-n,r>=0?u=r:c=-r,a.drawImage(i,o,u,e,t,d,c,e,t);return new m(a.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();if(n>=0&&r>=0)s=s.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){const i=Math.floor(-r),a=Math.floor(-n);s=s.extend({top:i,left:a,right:e-this.width-a,bottom:t-this.height-i})}else{let i=[0,0],a=0;r<0?(i[0]=Math.floor(-r),i[1]=t-this.height-i[0]):a=Math.floor(r);let o=[0,0],l=0;n<0?(o[0]=Math.floor(-n),o[1]=e-this.width-o[0]):l=Math.floor(n),s=s.extend({top:i[0],bottom:i[1],left:o[0],right:o[1]}).extract({left:l,top:a,width:e,height:t})}return await d(s)}}async toBlob(e="image/png",t=1){if(!c)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new a.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!c)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=l(e.width,e.height),n=new u(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}split(){const{data:e,width:t,height:n,channels:r}=this,s=e.constructor,i=e.length/r,a=Array.from({length:r},()=>new s(i));for(let o=0;o<i;++o){const t=r*o;for(let n=0;n<r;++n)a[n][o]=e[t+n]}return a.map(e=>new m(e,t,n,1))}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new m(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!c){if(i.apis.IS_FS_AVAILABLE){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=h.get(t)??"image/png",s=await this.toBlob(n);(0,r.saveBlob)(e,s)}}toSharp(){if(c)throw new Error("toSharp() is only supported in server-side environments.");return o(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const f=m.read.bind(m)},"./src/utils/maths.js":
/*!****************************!*\
      !*** ./src/utils/maths.js ***!
      \****************************/(e,t,n)=>{function r(e,[t,n,r],[s,i],a="bilinear",o=!1){const l=i/r,u=s/n,d=new e.constructor(s*i*t),c=n*r,p=s*i;for(let h=0;h<s;++h)for(let s=0;s<i;++s){const a=h*i+s,o=(s+.5)/l-.5,m=(h+.5)/u-.5;let f=Math.floor(o),_=Math.floor(m);const g=Math.min(f+1,r-1),w=Math.min(_+1,n-1);f=Math.max(f,0),_=Math.max(_,0);const b=o-f,y=m-_,v=(1-b)*(1-y),x=b*(1-y),M=(1-b)*y,k=b*y,T=_*r,$=w*r,S=T+f,C=T+g,E=$+f,P=$+g;for(let n=0;n<t;++n){const t=n*c;d[n*p+a]=v*e[t+S]+x*e[t+C]+M*e[t+E]+k*e[t+P]}}return d}function s(e,t,n){const r=new Array(n.length),s=new Array(n.length);for(let o=n.length-1,l=1;o>=0;--o)s[o]=l,r[o]=t[n[o]],l*=r[o];const i=n.map((e,t)=>s[n.indexOf(t)]),a=new e.constructor(e.length);for(let o=0;o<e.length;++o){let n=0;for(let e=t.length-1,r=o;e>=0;--e)n+=r%t[e]*i[e],r=Math.floor(r/t[e]);a[n]=e[o]}return[a,r]}function i(e){const t=c(e)[0],n=e.map(e=>Math.exp(e-t)),r=n.reduce((e,t)=>e+t,0);return n.map(e=>e/r)}function a(e){const t=c(e)[0];let n=0;for(let s=0;s<e.length;++s)n+=Math.exp(e[s]-t);const r=Math.log(n);return e.map(e=>e-t-r)}function o(e,t){let n=0;for(let r=0;r<e.length;++r)n+=e[r]*t[r];return n}function l(e,t){return o(e,t)/(u(e)*u(t))}function u(e){return Math.sqrt(e.reduce((e,t)=>e+t*t,0))}function d(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function c(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[t,n]}function p(e){return e>0&&!(e&e-1)}n.r(t),n.d(t,{FFT:()=>f,bankers_round:()=>w,cos_sim:()=>l,dot:()=>o,dynamic_time_warping:()=>b,interpolate_data:()=>r,log_softmax:()=>a,magnitude:()=>u,max:()=>c,medianFilter:()=>_,min:()=>d,permute_data:()=>s,round:()=>g,softmax:()=>i});class h{constructor(e){if(this.size=0|e,this.size<=1||!p(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let n=0;n<this.table.length;n+=2){const e=Math.PI*n/this.size;this.table[n]=Math.cos(e),this.table[n+1]=-Math.sin(e)}let t=0;for(let n=1;this.size>n;n<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let n=0;n<this._bitrev.length;++n){this._bitrev[n]=0;for(let e=0;e<this._width;e+=2){const t=this._width-e-2;this._bitrev[n]|=(n>>>e&3)<<t}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let r=0;r<e.length;r+=2)n[r>>>1]=e[r];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let r=0;r<n.length;r+=2)n[r]=e[r>>>1],n[r+1]=0;return n}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let n=0;n<e.length;++n)e[n]/=this.size}_transform4(e,t,n){const r=this._csize;let s,i,a=1<<this._width,o=r/a<<1;const l=this._bitrev;if(4===o)for(s=0,i=0;s<r;s+=o,++i){const n=l[i];this._singleTransform2(t,e,s,n,a)}else for(s=0,i=0;s<r;s+=o,++i){const r=l[i];this._singleTransform4(t,e,s,r,a,n)}const u=this.table;for(a>>=2;a>=2;a>>=2){o=r/a<<1;const t=o>>>2;for(s=0;s<r;s+=o){const r=s+t-1;for(let i=s,o=0;i<r;i+=2,o+=a){const r=i,s=r+t,a=s+t,l=a+t,d=e[r],c=e[r+1],p=e[s],h=e[s+1],m=e[a],f=e[a+1],_=e[l],g=e[l+1],w=u[o],b=n*u[o+1],y=p*w-h*b,v=p*b+h*w,x=u[2*o],M=n*u[2*o+1],k=m*x-f*M,T=m*M+f*x,$=u[3*o],S=n*u[3*o+1],C=_*$-g*S,E=_*S+g*$,P=d+k,A=c+T,I=d-k,z=c-T,F=y+C,O=v+E,L=n*(y-C),B=n*(v-E);e[r]=P+F,e[r+1]=A+O,e[s]=I+B,e[s+1]=z-L,e[a]=P-F,e[a+1]=A-O,e[l]=I-B,e[l+1]=z+L}}}}_singleTransform2(e,t,n,r,s){const i=e[r],a=e[r+1],o=e[r+s],l=e[r+s+1];t[n]=i+o,t[n+1]=a+l,t[n+2]=i-o,t[n+3]=a-l}_singleTransform4(e,t,n,r,s,i){const a=2*s,o=3*s,l=e[r],u=e[r+1],d=e[r+s],c=e[r+s+1],p=e[r+a],h=e[r+a+1],m=e[r+o],f=e[r+o+1],_=l+p,g=u+h,w=l-p,b=u-h,y=d+m,v=c+f,x=i*(d-m),M=i*(c-f);t[n]=_+y,t[n+1]=g+v,t[n+2]=w+M,t[n+3]=b-x,t[n+4]=_-y,t[n+5]=g-v,t[n+6]=w-M,t[n+7]=b+x}_realTransform4(e,t,n){const r=this._csize;let s,i,a=1<<this._width,o=r/a<<1;const l=this._bitrev;if(4===o)for(s=0,i=0;s<r;s+=o,++i){const n=l[i];this._singleRealTransform2(t,e,s,n>>>1,a>>>1)}else for(s=0,i=0;s<r;s+=o,++i){const r=l[i];this._singleRealTransform4(t,e,s,r>>>1,a>>>1,n)}const u=this.table;for(a>>=2;a>=2;a>>=2){o=r/a<<1;const t=o>>>1,i=t>>>1,l=i>>>1;for(s=0;s<r;s+=o)for(let r=0,o=0;r<=l;r+=2,o+=a){const a=s+r,d=a+i,c=d+i,p=c+i,h=e[a],m=e[a+1],f=e[d],_=e[d+1],g=e[c],w=e[c+1],b=e[p],y=e[p+1],v=h,x=m,M=u[o],k=n*u[o+1],T=f*M-_*k,$=f*k+_*M,S=u[2*o],C=n*u[2*o+1],E=g*S-w*C,P=g*C+w*S,A=u[3*o],I=n*u[3*o+1],z=b*A-y*I,F=b*I+y*A,O=v+E,L=x+P,B=v-E,D=x-P,N=T+z,j=$+F,R=n*(T-z),V=n*($-F);if(e[a]=O+N,e[a+1]=L+j,e[d]=B+V,e[d+1]=D-R,0===r){e[c]=O-N,e[c+1]=L-j;continue}if(r===l)continue;const G=s+i-r,q=s+t-r;e[G]=B-n*V,e[G+1]=-D-n*R,e[q]=O-n*N,e[q+1]=n*j-L}}const d=r>>>1;for(let c=2;c<d;c+=2)e[r-c]=e[c],e[r-c+1]=-e[c+1]}_singleRealTransform2(e,t,n,r,s){const i=e[r],a=e[r+s];t[n]=i+a,t[n+1]=0,t[n+2]=i-a,t[n+3]=0}_singleRealTransform4(e,t,n,r,s,i){const a=2*s,o=3*s,l=e[r],u=e[r+s],d=e[r+a],c=e[r+o],p=l+d,h=l-d,m=u+c,f=i*(u-c);t[n]=p+m,t[n+1]=0,t[n+2]=h,t[n+3]=-f,t[n+4]=p-m,t[n+5]=0,t[n+6]=h,t[n+7]=f}}class m{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const s=new Float64Array(n),i=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const a=-2*Math.PI/e,o=Math.cos(a),l=Math.sin(a);for(let u=0;u<n>>1;++u){const t=(u+1-e)**2/2,n=Math.sqrt(o**2+l**2)**t,r=t*Math.atan2(l,o),a=2*u;s[a]=n*Math.cos(r),s[a+1]=n*Math.sin(r),i[a]=s[a],i[a+1]=-s[a+1]}this._slicedChirpBuffer=s.subarray(t,n),this._f=new h(r>>1),this._f.transform(this._chirpBuffer,i)}_transform(e,t,n){const r=this._buffer1,s=this._buffer2,i=this._outBuffer1,a=this._outBuffer2,o=this._chirpBuffer,l=this._slicedChirpBuffer,u=this._a;if(n)for(let d=0;d<l.length;d+=2){const e=d+1,n=t[d>>1];r[d]=n*l[d],r[e]=n*l[e]}else for(let d=0;d<l.length;d+=2){const e=d+1;r[d]=t[d]*l[d]-t[e]*l[e],r[e]=t[d]*l[e]+t[e]*l[d]}this._f.transform(i,r);for(let d=0;d<o.length;d+=2){const e=d+1;s[d]=i[d]*o[d]-i[e]*o[e],s[e]=i[d]*o[e]+i[e]*o[d]}this._f.inverseTransform(a,s);for(let d=0;d<a.length;d+=2){const t=a[d+u],n=a[d+u+1],r=l[d],s=l[d+1];e[d]=t*r-n*s,e[d+1]=t*s+n*r}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class f{constructor(e){this.fft_length=e,this.isPowerOfTwo=p(e),this.isPowerOfTwo?(this.fft=new h(e),this.outputBufferSize=2*e):(this.fft=new m(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function _(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),s=Math.floor(t/2);for(let i=0;i<e.length;++i){let t=0;for(let n=-s;n<=s;++n){let s=i+n;s<0?s=Math.abs(s):s>=e.length&&(s=2*(e.length-1)-s),r[t++]=e[s]}r.sort(),n[i]=r[s]}return n}function g(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}function w(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function b(e){const t=e.length,n=e[0].length,r=[t+1,n+1],s=Array.from({length:r[0]},()=>Array(r[1]).fill(1/0));s[0][0]=0;const i=Array.from({length:r[0]},()=>Array(r[1]).fill(-1));for(let d=1;d<r[1];++d)for(let t=1;t<r[0];++t){const n=s[t-1][d-1],r=s[t-1][d],a=s[t][d-1];let o,l;n<r&&n<a?(o=n,l=0):r<n&&r<a?(o=r,l=1):(o=a,l=2),s[t][d]=e[t-1][d-1]+o,i[t][d]=l}for(let d=0;d<r[1];++d)i[0][d]=2;for(let d=0;d<r[0];++d)i[d][0]=1;let a=t,o=n,l=[],u=[];for(;a>0||o>0;)switch(l.push(a-1),u.push(o-1),i[a][o]){case 0:--a,--o;break;case 1:--a;break;case 2:--o;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${o}]. Please file a bug report.`)}return l.reverse(),u.reverse(),[l,u]}},"./src/utils/tensor.js":
/*!*****************************!*\
      !*** ./src/utils/tensor.js ***!
      \*****************************/(e,n,r)=>{r.r(n),r.d(n,{DataTypeMap:()=>o,Tensor:()=>l,cat:()=>x,full:()=>C,full_like:()=>E,interpolate:()=>d,interpolate_4d:()=>c,layer_norm:()=>w,matmul:()=>p,mean:()=>$,mean_pooling:()=>g,ones:()=>P,ones_like:()=>A,permute:()=>u,quantize_embeddings:()=>O,rand:()=>F,rfft:()=>h,slice:()=>_,stack:()=>M,std_mean:()=>T,topk:()=>m,zeros:()=>I,zeros_like:()=>z});var s=r(
/*! ./maths.js */
"./src/utils/maths.js"),i=r(
/*! ../backends/onnx.js */
"./src/backends/onnx.js"),a=r(
/*! ../ops/registry.js */
"./src/ops/registry.js");const o=Object.freeze({float32:Float32Array,float16:"undefined"!=typeof Float16Array?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class l{constructor(...e){return t(this,"ort_tensor"),(0,i.isONNXTensor)(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new i.Tensor(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce((e,t)=>e*t);for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=v(e,t),n.length>0){const t=n.reduce((e,t)=>e*t);return this._subarray(e,t,n)}return new l(this.type,[this.data[e]],n)}indexOf(e){const t=this.data;for(let n=0;n<t.length;++n)if(t[n]==e)return n;return-1}_subarray(e,t,n){const r=e*t,s=(e+1)*t,i="subarray"in this.data?this.data.subarray(r,s):this.data.slice(r,s);return new l(this.type,i,n)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const n=e.length,r=t.reduce((e,t)=>e*t);if(n!==r)throw Error(`cannot reshape array of size ${n} into shape (${t})`);let s=e;for(let i=t.length-1;i>=0;i--)s=s.reduce((e,n)=>{let r=e[e.length-1];return r.length<t[i]?r.push(n):e.push([n]),e},[[]]);return s[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]=e(t[n],n,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]-=e;return this}clone(){return new l(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],n=[];for(let l=0;l<this.dims.length;++l){let r=e[l];if(null==r)n.push([0,this.dims[l]]),t.push(this.dims[l]);else if("number"==typeof r)r=v(r,this.dims[l],l),n.push([r,r+1]);else{if(!Array.isArray(r)||2!==r.length)throw new Error(`Invalid slice: ${r}`);{let[e,s]=r;if(e=null===e?0:v(e,this.dims[l],l,!1),s=null===s?this.dims[l]:v(s,this.dims[l],l,!1),e>s)throw new Error(`Invalid slice: ${r}`);const i=[Math.max(e,0),Math.min(s,this.dims[l])];n.push(i),t.push(i[1]-i[0])}}}const r=n.map(([e,t])=>t-e),s=r.reduce((e,t)=>e*t),i=this.data,a=new i.constructor(s),o=this.stride();let u=!0;for(let l=1;l<r.length;++l)if(0!==n[l][0]||n[l][1]!==this.dims[l]){u=!1;break}if(u){const e=n[0][0]*o[0],t=n[0][1]*o[0];if(ArrayBuffer.isView(i))a.set(i.subarray(e,t));else{if(!Array.isArray(i))throw new Error("Unsupported data type for slicing");{const n=i.slice(e,t);for(let e=0;e<n.length;++e)a[e]=n[e]}}}else for(let l=0;l<s;++l){let e=0;for(let t=r.length-1,s=l;t>=0;--t){const i=r[t];e+=(s%i+n[t][0])*o[t],s=Math.floor(s/i)}a[l]=i[e]}return new l(this.type,a,t)}permute(...e){return u(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data,s=(t,n)=>t+n**e;if(null===t){const t=r.reduce(s,0)**(1/e);return new l(this.type,[t],[])}const[i,a,o]=k(s,this,t,n);if(1!==e)for(let l=0;l<a.length;++l)a[l]=a[l]**(1/e);return new l(i,a,o)}normalize_(e=2,t=1){t=v(t,this.dims.length);const n=this.norm(e,t,!0),r=this.data,s=n.data;for(let i=0;i<r.length;++i){let e=0;for(let n=this.dims.length-1,r=i,s=1;n>=0;--n){const i=this.dims[n];if(n!==t){e+=r%i*s,s*=this.dims[n]}r=Math.floor(r/i)}r[i]/=s[e]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new l(this.type,this.data,b(this.dims,e))}squeeze_(e=null){return this.dims=b(this.dims,e),this}unsqueeze(e=null){return new l(this.type,this.data,y(this.dims,e))}unsqueeze_(e=null){return this.dims=y(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),s=this.dims.slice(t+1);return this.dims=[...n,r.reduce((e,t)=>e*t,1),...s],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let r=0;r<e.length;++r)if(-1===e[r]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=r}const n=this.data;if(-1!==t){const r=e.reduce((e,n,r)=>r!==t?e*n:e,1);e[t]=n.length/r}return new l(this.type,n,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}gt(e){const t=new Uint8Array(this.data.length),n=this.data;for(let r=0;r<n.length;++r)t[r]=n[r]>e?1:0;return new l("bool",t,this.dims)}lt(e){const t=new Uint8Array(this.data.length),n=this.data;for(let r=0;r<n.length;++r)t[r]=n[r]<e?1:0;return new l("bool",t,this.dims)}clamp_(e,t){const n=this.data;for(let r=0;r<n.length;++r)n[r]=Math.min(Math.max(n[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return $(this,e,t)}min(e=null,t=!1){if(null===e){const e=(0,s.min)(this.data)[0];return new l(this.type,[e],[])}const[n,r,i]=k((e,t)=>Math.min(e,t),this,e,t,1/0);return new l(n,r,i)}max(e=null,t=!1){if(null===e){const e=(0,s.max)(this.data)[0];return new l(this.type,[e],[])}const[n,r,i]=k((e,t)=>Math.max(e,t),this,e,t,-1/0);return new l(n,r,i)}argmin(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const n=(0,s.min)(this.data)[1];return new l("int64",[BigInt(n)],[])}argmax(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const n=(0,s.max)(this.data)[1];return new l("int64",[BigInt(n)],[])}to(e){if(this.type===e)return this;if(!o.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);let t;const n=["int64","uint64"].includes(this.type),r=["int64","uint64"].includes(e);return n&&!r?t=Number:!n&&r&&(t=BigInt),new l(e,o[e].from(this.data,t),this.dims)}}function u(e,t){const[n,r]=(0,s.permute_data)(e.data,e.dims,t);return new l(e.type,n,r)}function d(e,[t,n],r="bilinear",i=!1){const a=e.dims.at(-3)??1,o=e.dims.at(-2),u=e.dims.at(-1);let d=(0,s.interpolate_data)(e.data,[a,o,u],[t,n],r,i);return new l(e.type,d,[a,t,n])}async function c(e,{size:t=null,mode:n="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,s;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("nearest"===n)s=await a.TensorOpRegistry.nearest_interpolate_4d;else if("bilinear"===n)s=await a.TensorOpRegistry.bilinear_interpolate_4d;else{if("bicubic"!==n)throw new Error(`Unsupported mode: ${n}`);s=await a.TensorOpRegistry.bicubic_interpolate_4d}const i=new l("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await s({x:e,s:i})}async function p(e,t){const n=await a.TensorOpRegistry.matmul;return await n({a:e,b:t})}async function h(e,t){const n=await a.TensorOpRegistry.rfft;return await n({x:e,a:t})}async function m(e,t){const n=await a.TensorOpRegistry.top_k;return t=null==t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await n({x:e,k:new l("int64",[BigInt(t)],[1])})}const f=e=>new l("int64",e,[e.length]);async function _(e,t,n,r,s){const i=await a.TensorOpRegistry.slice;return await i({x:e,s:f(t),e:f(n),a:f(r),t:f(s??new Array(r.length).fill(1))})}function g(e,t){const n=e.data,r=t.data,s=[e.dims[0],e.dims[2]],i=new n.constructor(s[0]*s[1]),[a,o,u]=e.dims;let d=0;for(let l=0;l<a;++l){const e=l*u*o;for(let t=0;t<u;++t){let s=0,a=0;const c=l*o,p=e+t;for(let e=0;e<o;++e){const t=Number(r[c+e]);a+=t,s+=n[p+e*u]*t}const h=s/a;i[d++]=h}}return new l(e.type,i,s)}function w(e,t,{eps:n=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[r,s]=e.dims;if(1!==t.length&&t[0]!==s)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[i,a]=T(e,1,0,!0),o=i.data,u=a.data,d=e.data,c=new d.constructor(d.length);for(let l=0;l<r;++l){const e=l*s;for(let t=0;t<s;++t){const r=e+t;c[r]=(d[r]-u[l])/(o[l]+n)}}return new l(e.type,c,e.dims)}function b(e,t){return e=e.slice(),null===t?e=e.filter(e=>1!==e):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter((e,n)=>1!==e||!t.includes(n))),e}function y(e,t){return t=v(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function v(e,t,n=null,r=!0){if(e<-t||e>=t){if(r)throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<-t?0:t}return e<0&&(e=(e%t+t)%t),e}function x(e,t=0){t=v(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce((e,n)=>e+n.dims[t],0);const r=n.reduce((e,t)=>e*t,1),s=new e[0].data.constructor(r),i=e[0].type;if(0===t){let t=0;for(const n of e){const e=n.data;s.set(e,t),t+=e.length}}else{let r=0;for(let i=0;i<e.length;++i){const{data:a,dims:o}=e[i];for(let e=0;e<a.length;++e){let i=0;for(let s=o.length-1,a=e,l=1;s>=0;--s){const e=o[s];let u=a%e;s===t&&(u+=r),i+=u*l,l*=n[s],a=Math.floor(a/e)}s[i]=a[e]}r+=o[t]}}return new l(i,s,n)}function M(e,t=0){return x(e.map(e=>e.unsqueeze(t)),t)}function k(e,t,n=null,r=!1,s=null){const i=t.data,a=t.dims;n=v(n,a.length);const o=a.slice();o[n]=1;const l=new i.constructor(i.length/a[n]);null!==s&&l.fill(s);for(let u=0;u<i.length;++u){let t=0;for(let e=a.length-1,r=u,s=1;e>=0;--e){const i=a[e];if(e!==n){t+=r%i*s,s*=o[e]}r=Math.floor(r/i)}l[t]=e(l[t],i[u],u,t)}return r||o.splice(n,1),[t.type,l,o]}function T(e,t=null,n=1,r=!1){const s=e.data,i=e.dims;if(null===t){const t=s.reduce((e,t)=>e+t,0)/s.length,r=Math.sqrt(s.reduce((e,n)=>e+(n-t)**2,0)/(s.length-n)),i=new l(e.type,[t],[]);return[new l(e.type,[r],[]),i]}const a=$(e,t=v(t,i.length),r),o=a.data,[u,d,c]=k((e,t,n,r)=>e+(t-o[r])**2,e,t,r);for(let l=0;l<d.length;++l)d[l]=Math.sqrt(d[l]/(i[t]-n));return[new l(u,d,c),a]}function $(e,t=null,n=!1){const r=e.dims,s=e.data;if(null===t){const t=s.reduce((e,t)=>e+t,0);return new l(e.type,[t/s.length],[])}t=v(t,r.length);const[i,a,o]=k((e,t)=>e+t,e,t,n);if(1!==r[t])for(let l=0;l<a.length;++l)a[l]/=r[t];return new l(i,a,o)}function S(e,t,n,r){const s=e.reduce((e,t)=>e*t,1);return new l(n,new r(s).fill(t),e)}function C(e,t){let n,r;if("number"==typeof t)n="float32",r=Float32Array;else if("bigint"==typeof t)n="int64",r=BigInt64Array;else{if("boolean"!=typeof t)throw new Error("Unsupported data type: "+typeof t);n="bool",r=Uint8Array}return S(e,t,n,r)}function E(e,t){return C(e.dims,t)}function P(e){return S(e,1n,"int64",BigInt64Array)}function A(e){return P(e.dims)}function I(e){return S(e,0n,"int64",BigInt64Array)}function z(e){return I(e.dims)}function F(e){const t=e.reduce((e,t)=>e*t,1);return new l("float32",Float32Array.from({length:t},()=>Math.random()),e)}function O(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const n="binary"===t,r=n?"int8":"uint8",s=n?Int8Array:Uint8Array,i=e.data,a=new s(i.length/8);for(let o=0;o<i.length;++o){const e=i[o]>0?1:0,t=Math.floor(o/8),r=o%8;a[t]|=e<<7-r,n&&0===r&&(a[t]-=128)}return new l(r,a,[e.dims[0],e.dims[1]/8])}},"./src/utils/video.js":
/*!****************************!*\
      !*** ./src/utils/video.js ***!
      \****************************/(e,t,n)=>{n.r(t),n.d(t,{RawVideo:()=>a,RawVideoFrame:()=>i,load_video:()=>o});var r=n(
/*! ./image.js */
"./src/utils/image.js"),s=n(
/*! ../env.js */
"./src/env.js");class i{constructor(e,t){this.image=e,this.timestamp=t}}class a{constructor(e,t){e.length>0&&e[0]instanceof r.RawImage&&(e=e.map((n,r)=>new i(n,(r+1)/(e.length+1)*t))),this.frames=e,this.duration=t}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function o(e,{num_frames:t=null,fps:n=null}={}){if(!s.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(null==t&&null==n)throw new Error("Either num_frames or fps must be provided.");const o=[],l=document.createElement("video");if(l.crossOrigin="anonymous",l.muted=!0,"string"==typeof e)l.src=e;else if(e instanceof Blob)l.src=URL.createObjectURL(e);else{if(!(e instanceof HTMLVideoElement))throw new Error("Invalid URL or video element provided.");l.src=e.src}if(await new Promise(e=>l.onloadedmetadata=e),l.seekable.start(0)===l.seekable.end(0)){const e=await fetch(l.src),t=await e.blob();l.src=URL.createObjectURL(t),await new Promise(e=>l.onloadedmetadata=e)}const u=l.duration;let d,c;null!=t?(d=t,c=1===t?0:u/(t-1)):(c=1/n,d=Math.floor(u/c));let p=[];for(let r=0;r<d;++r)p.push(1===t?u/2:r*c);const h=document.createElement("canvas");h.width=l.videoWidth,h.height=l.videoHeight;const m=h.getContext("2d",{willReadFrequently:!0});for(const s of p){l.currentTime=s,await new Promise(e=>{l.onseeked=e}),m.drawImage(l,0,0,h.width,h.height);const e=m.getImageData(0,0,h.width,h.height),t=new r.RawImage(e.data,h.width,h.height,4),n=new i(t,s);o.push(n)}return l.remove(),new a(o,u)}}},Nc={};function jc(e){var t=Nc[e];if(void 0!==t)return t.exports;var n=Nc[e]={exports:{}};return Dc[e](n,n.exports,jc),n.exports}Lc=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,jc.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);jc.r(n);var r={};Oc=Oc||[null,Lc({}),Lc([]),Lc(Lc)];for(var s=2&t&&e;"object"==typeof s&&!~Oc.indexOf(s);s=Lc(s))Object.getOwnPropertyNames(s).forEach(t=>r[t]=()=>e[t]);return r.default=()=>e,jc.d(n,r),n},jc.d=(e,t)=>{for(var n in t)jc.o(t,n)&&!jc.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},jc.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),jc.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var Rc={};(()=>{
/*!*****************************!*\
    !*** ./src/transformers.js ***!
    \*****************************/
jc.r(Rc),jc.d(Rc,{ASTFeatureExtractor:()=>c.ASTFeatureExtractor,ASTForAudioClassification:()=>n.ASTForAudioClassification,ASTModel:()=>n.ASTModel,ASTPreTrainedModel:()=>n.ASTPreTrainedModel,AlbertForMaskedLM:()=>n.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>n.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>n.AlbertForSequenceClassification,AlbertModel:()=>n.AlbertModel,AlbertPreTrainedModel:()=>n.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,ArceeForCausalLM:()=>n.ArceeForCausalLM,ArceeModel:()=>n.ArceeModel,ArceePreTrainedModel:()=>n.ArceePreTrainedModel,AudioClassificationPipeline:()=>t.AudioClassificationPipeline,AutoConfig:()=>s.AutoConfig,AutoFeatureExtractor:()=>p.AutoFeatureExtractor,AutoImageProcessor:()=>f.AutoImageProcessor,AutoModel:()=>n.AutoModel,AutoModelForAudioClassification:()=>n.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>n.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>n.AutoModelForAudioTextToText,AutoModelForCTC:()=>n.AutoModelForCTC,AutoModelForCausalLM:()=>n.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>n.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>n.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>n.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>n.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>n.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>n.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>n.AutoModelForImageTextToText,AutoModelForImageToImage:()=>n.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>n.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>n.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>n.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>n.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>n.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>n.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>n.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>n.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>n.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>n.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>n.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>n.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>n.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>n.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>n.AutoModelForVision2Seq,AutoModelForXVector:()=>n.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>n.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>w.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>t.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>t.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>n.BartForConditionalGeneration,BartForSequenceClassification:()=>n.BartForSequenceClassification,BartModel:()=>n.BartModel,BartPretrainedModel:()=>n.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>n.BaseModelOutput,BaseStreamer:()=>b.BaseStreamer,BeitFeatureExtractor:()=>m.BeitFeatureExtractor,BeitForImageClassification:()=>n.BeitForImageClassification,BeitModel:()=>n.BeitModel,BeitPreTrainedModel:()=>n.BeitPreTrainedModel,BertForMaskedLM:()=>n.BertForMaskedLM,BertForQuestionAnswering:()=>n.BertForQuestionAnswering,BertForSequenceClassification:()=>n.BertForSequenceClassification,BertForTokenClassification:()=>n.BertForTokenClassification,BertModel:()=>n.BertModel,BertPreTrainedModel:()=>n.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>m.BitImageProcessor,BlenderbotForConditionalGeneration:()=>n.BlenderbotForConditionalGeneration,BlenderbotModel:()=>n.BlenderbotModel,BlenderbotPreTrainedModel:()=>n.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>n.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>n.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>n.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>n.BloomForCausalLM,BloomModel:()=>n.BloomModel,BloomPreTrainedModel:()=>n.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>m.CLIPFeatureExtractor,CLIPImageProcessor:()=>m.CLIPImageProcessor,CLIPModel:()=>n.CLIPModel,CLIPPreTrainedModel:()=>n.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>n.CLIPSegForImageSegmentation,CLIPSegModel:()=>n.CLIPSegModel,CLIPSegPreTrainedModel:()=>n.CLIPSegPreTrainedModel,CLIPTextModel:()=>n.CLIPTextModel,CLIPTextModelWithProjection:()=>n.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModel:()=>n.CLIPVisionModel,CLIPVisionModelWithProjection:()=>n.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>n.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>n.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>n.CamembertForSequenceClassification,CamembertForTokenClassification:()=>n.CamembertForTokenClassification,CamembertModel:()=>n.CamembertModel,CamembertPreTrainedModel:()=>n.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>n.CausalLMOutput,CausalLMOutputWithPast:()=>n.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>m.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>n.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>n.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>n.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>c.ClapFeatureExtractor,ClapModel:()=>n.ClapModel,ClapPreTrainedModel:()=>n.ClapPreTrainedModel,ClapTextModelWithProjection:()=>n.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>v.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>n.CodeGenForCausalLM,CodeGenModel:()=>n.CodeGenModel,CodeGenPreTrainedModel:()=>n.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>n.CohereForCausalLM,CohereModel:()=>n.CohereModel,CoherePreTrainedModel:()=>n.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>n.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>n.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>n.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>n.ConvBertForTokenClassification,ConvBertModel:()=>n.ConvBertModel,ConvBertPreTrainedModel:()=>n.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>m.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>n.ConvNextForImageClassification,ConvNextImageProcessor:()=>m.ConvNextImageProcessor,ConvNextModel:()=>n.ConvNextModel,ConvNextPreTrainedModel:()=>n.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>n.ConvNextV2ForImageClassification,ConvNextV2Model:()=>n.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>n.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>n.DFineForObjectDetection,DFineModel:()=>n.DFineModel,DFinePreTrainedModel:()=>n.DFinePreTrainedModel,DINOv3ConvNextModel:()=>n.DINOv3ConvNextModel,DINOv3ConvNextPreTrainedModel:()=>n.DINOv3ConvNextPreTrainedModel,DINOv3ViTImageProcessor:()=>m.DINOv3ViTImageProcessor,DINOv3ViTModel:()=>n.DINOv3ViTModel,DINOv3ViTPreTrainedModel:()=>n.DINOv3ViTPreTrainedModel,DPTFeatureExtractor:()=>m.DPTFeatureExtractor,DPTForDepthEstimation:()=>n.DPTForDepthEstimation,DPTImageProcessor:()=>m.DPTImageProcessor,DPTModel:()=>n.DPTModel,DPTPreTrainedModel:()=>n.DPTPreTrainedModel,DacDecoderModel:()=>n.DacDecoderModel,DacDecoderOutput:()=>n.DacDecoderOutput,DacEncoderModel:()=>n.DacEncoderModel,DacEncoderOutput:()=>n.DacEncoderOutput,DacFeatureExtractor:()=>c.DacFeatureExtractor,DacModel:()=>n.DacModel,DacPreTrainedModel:()=>n.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>n.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>n.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>n.DebertaForSequenceClassification,DebertaForTokenClassification:()=>n.DebertaForTokenClassification,DebertaModel:()=>n.DebertaModel,DebertaPreTrainedModel:()=>n.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>n.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>n.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>n.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>n.DebertaV2ForTokenClassification,DebertaV2Model:()=>n.DebertaV2Model,DebertaV2PreTrainedModel:()=>n.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DecisionTransformerModel:()=>n.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>n.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>m.DeiTFeatureExtractor,DeiTForImageClassification:()=>n.DeiTForImageClassification,DeiTImageProcessor:()=>m.DeiTImageProcessor,DeiTModel:()=>n.DeiTModel,DeiTPreTrainedModel:()=>n.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>n.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>n.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>t.DepthEstimationPipeline,DepthProForDepthEstimation:()=>n.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>n.DepthProPreTrainedModel,DetrFeatureExtractor:()=>m.DetrFeatureExtractor,DetrForObjectDetection:()=>n.DetrForObjectDetection,DetrForSegmentation:()=>n.DetrForSegmentation,DetrImageProcessor:()=>m.DetrImageProcessor,DetrModel:()=>n.DetrModel,DetrObjectDetectionOutput:()=>n.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>n.DetrPreTrainedModel,DetrSegmentationOutput:()=>n.DetrSegmentationOutput,Dinov2ForImageClassification:()=>n.Dinov2ForImageClassification,Dinov2Model:()=>n.Dinov2Model,Dinov2PreTrainedModel:()=>n.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>n.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>n.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>n.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>n.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>n.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>n.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>n.DistilBertForTokenClassification,DistilBertModel:()=>n.DistilBertModel,DistilBertPreTrainedModel:()=>n.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>t.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>m.DonutFeatureExtractor,DonutImageProcessor:()=>m.DonutImageProcessor,DonutSwinModel:()=>n.DonutSwinModel,DonutSwinPreTrainedModel:()=>n.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>n.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>m.EfficientNetImageProcessor,EfficientNetModel:()=>n.EfficientNetModel,EfficientNetPreTrainedModel:()=>n.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>n.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>n.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>n.ElectraForSequenceClassification,ElectraForTokenClassification:()=>n.ElectraForTokenClassification,ElectraModel:()=>n.ElectraModel,ElectraPreTrainedModel:()=>n.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EncodecFeatureExtractor:()=>c.EncodecFeatureExtractor,EosTokenCriteria:()=>y.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>n.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>n.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>n.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>r.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>n.EsmForMaskedLM,EsmForSequenceClassification:()=>n.EsmForSequenceClassification,EsmForTokenClassification:()=>n.EsmForTokenClassification,EsmModel:()=>n.EsmModel,EsmPreTrainedModel:()=>n.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,ExaoneForCausalLM:()=>n.ExaoneForCausalLM,ExaoneModel:()=>n.ExaoneModel,ExaonePreTrainedModel:()=>n.ExaonePreTrainedModel,FFT:()=>u.FFT,FalconForCausalLM:()=>n.FalconForCausalLM,FalconModel:()=>n.FalconModel,FalconPreTrainedModel:()=>n.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>n.FastViTForImageClassification,FastViTModel:()=>n.FastViTModel,FastViTPreTrainedModel:()=>n.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>t.FeatureExtractionPipeline,FeatureExtractor:()=>d.FeatureExtractor,FillMaskPipeline:()=>t.FillMaskPipeline,Florence2ForConditionalGeneration:()=>n.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>n.Florence2PreTrainedModel,Florence2Processor:()=>g.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>v.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>v.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>m.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>n.GLPNForDepthEstimation,GLPNModel:()=>n.GLPNModel,GLPNPreTrainedModel:()=>n.GLPNPreTrainedModel,GPT2LMHeadModel:()=>n.GPT2LMHeadModel,GPT2Model:()=>n.GPT2Model,GPT2PreTrainedModel:()=>n.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>n.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>n.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>n.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>n.GPTJForCausalLM,GPTJModel:()=>n.GPTJModel,GPTJPreTrainedModel:()=>n.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>n.GPTNeoForCausalLM,GPTNeoModel:()=>n.GPTNeoModel,GPTNeoPreTrainedModel:()=>n.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>n.GPTNeoXForCausalLM,GPTNeoXModel:()=>n.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>n.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>n.Gemma2ForCausalLM,Gemma2Model:()=>n.Gemma2Model,Gemma2PreTrainedModel:()=>n.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>n.Gemma3ForCausalLM,Gemma3Model:()=>n.Gemma3Model,Gemma3PreTrainedModel:()=>n.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>c.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>n.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>n.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>g.Gemma3nProcessor,GemmaForCausalLM:()=>n.GemmaForCausalLM,GemmaModel:()=>n.GemmaModel,GemmaPreTrainedModel:()=>n.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,GlmForCausalLM:()=>n.GlmForCausalLM,GlmModel:()=>n.GlmModel,GlmPreTrainedModel:()=>n.GlmPreTrainedModel,GraniteForCausalLM:()=>n.GraniteForCausalLM,GraniteModel:()=>n.GraniteModel,GranitePreTrainedModel:()=>n.GranitePreTrainedModel,Grok1Tokenizer:()=>r.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>n.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>m.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>n.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>g.GroundingDinoProcessor,GroupViTModel:()=>n.GroupViTModel,GroupViTPreTrainedModel:()=>n.GroupViTPreTrainedModel,HeliumForCausalLM:()=>n.HeliumForCausalLM,HeliumModel:()=>n.HeliumModel,HeliumPreTrainedModel:()=>n.HeliumPreTrainedModel,HerbertTokenizer:()=>r.HerbertTokenizer,HieraForImageClassification:()=>n.HieraForImageClassification,HieraModel:()=>n.HieraModel,HieraPreTrainedModel:()=>n.HieraPreTrainedModel,HubertForCTC:()=>n.HubertForCTC,HubertForSequenceClassification:()=>n.HubertForSequenceClassification,HubertModel:()=>n.HubertModel,HubertPreTrainedModel:()=>n.HubertPreTrainedModel,IJepaForImageClassification:()=>n.IJepaForImageClassification,IJepaModel:()=>n.IJepaModel,IJepaPreTrainedModel:()=>n.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>n.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>m.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>n.Idefics3PreTrainedModel,Idefics3Processor:()=>g.Idefics3Processor,ImageClassificationPipeline:()=>t.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>t.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>c.ImageFeatureExtractor,ImageMattingOutput:()=>n.ImageMattingOutput,ImageProcessor:()=>h.ImageProcessor,ImageSegmentationPipeline:()=>t.ImageSegmentationPipeline,ImageToImagePipeline:()=>t.ImageToImagePipeline,ImageToTextPipeline:()=>t.ImageToTextPipeline,InterruptableStoppingCriteria:()=>y.InterruptableStoppingCriteria,JAISLMHeadModel:()=>n.JAISLMHeadModel,JAISModel:()=>n.JAISModel,JAISPreTrainedModel:()=>n.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>m.JinaCLIPImageProcessor,JinaCLIPModel:()=>n.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>n.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>g.JinaCLIPProcessor,JinaCLIPTextModel:()=>n.JinaCLIPTextModel,JinaCLIPVisionModel:()=>n.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>n.Lfm2ForCausalLM,Lfm2Model:()=>n.Lfm2Model,Lfm2PreTrainedModel:()=>n.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>n.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>n.LlamaForCausalLM,LlamaModel:()=>n.LlamaModel,LlamaPreTrainedModel:()=>n.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>n.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>n.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>m.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>n.LlavaPreTrainedModel,LlavaProcessor:()=>g.LlavaProcessor,LlavaQwen2ForCausalLM:()=>n.LlavaQwen2ForCausalLM,LogitsProcessor:()=>v.LogitsProcessor,LogitsProcessorList:()=>v.LogitsProcessorList,LogitsWarper:()=>v.LogitsWarper,LongT5ForConditionalGeneration:()=>n.LongT5ForConditionalGeneration,LongT5Model:()=>n.LongT5Model,LongT5PreTrainedModel:()=>n.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>n.M2M100ForConditionalGeneration,M2M100Model:()=>n.M2M100Model,M2M100PreTrainedModel:()=>n.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>n.MBartForCausalLM,MBartForConditionalGeneration:()=>n.MBartForConditionalGeneration,MBartForSequenceClassification:()=>n.MBartForSequenceClassification,MBartModel:()=>n.MBartModel,MBartPreTrainedModel:()=>n.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>n.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>n.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>n.MPNetForSequenceClassification,MPNetForTokenClassification:()=>n.MPNetForTokenClassification,MPNetModel:()=>n.MPNetModel,MPNetPreTrainedModel:()=>n.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>n.MT5ForConditionalGeneration,MT5Model:()=>n.MT5Model,MT5PreTrainedModel:()=>n.MT5PreTrainedModel,MarianMTModel:()=>n.MarianMTModel,MarianModel:()=>n.MarianModel,MarianPreTrainedModel:()=>n.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,Mask2FormerImageProcessor:()=>m.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>m.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>n.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>m.MaskFormerImageProcessor,MaskFormerModel:()=>n.MaskFormerModel,MaskFormerPreTrainedModel:()=>n.MaskFormerPreTrainedModel,MaskedLMOutput:()=>n.MaskedLMOutput,MaxLengthCriteria:()=>y.MaxLengthCriteria,Metric3DForDepthEstimation:()=>n.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>n.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>n.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>n.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>n.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>n.MgpstrModelOutput,MgpstrPreTrainedModel:()=>n.MgpstrPreTrainedModel,MgpstrProcessor:()=>g.MgpstrProcessor,MgpstrTokenizer:()=>r.MgpstrTokenizer,MimiDecoderModel:()=>n.MimiDecoderModel,MimiDecoderOutput:()=>n.MimiDecoderOutput,MimiEncoderModel:()=>n.MimiEncoderModel,MimiEncoderOutput:()=>n.MimiEncoderOutput,MimiModel:()=>n.MimiModel,MimiPreTrainedModel:()=>n.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>v.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>v.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>n.MistralForCausalLM,MistralModel:()=>n.MistralModel,MistralPreTrainedModel:()=>n.MistralPreTrainedModel,MobileBertForMaskedLM:()=>n.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>n.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>n.MobileBertForSequenceClassification,MobileBertModel:()=>n.MobileBertModel,MobileBertPreTrainedModel:()=>n.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileLLMForCausalLM:()=>n.MobileLLMForCausalLM,MobileLLMModel:()=>n.MobileLLMModel,MobileLLMPreTrainedModel:()=>n.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>m.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>n.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>n.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>m.MobileNetV1ImageProcessor,MobileNetV1Model:()=>n.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>n.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>m.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>n.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>n.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>m.MobileNetV2ImageProcessor,MobileNetV2Model:()=>n.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>n.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>m.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>n.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>n.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>m.MobileNetV3ImageProcessor,MobileNetV3Model:()=>n.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>n.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>m.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>n.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>n.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>m.MobileNetV4ImageProcessor,MobileNetV4Model:()=>n.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>n.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>m.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>n.MobileViTForImageClassification,MobileViTImageProcessor:()=>m.MobileViTImageProcessor,MobileViTModel:()=>n.MobileViTModel,MobileViTPreTrainedModel:()=>n.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>n.MobileViTV2ForImageClassification,MobileViTV2Model:()=>n.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>n.MobileViTV2PreTrainedModel,ModelOutput:()=>n.ModelOutput,ModernBertDecoderForCausalLM:()=>n.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>n.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>n.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>n.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>n.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>n.ModernBertForTokenClassification,ModernBertModel:()=>n.ModernBertModel,ModernBertPreTrainedModel:()=>n.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>n.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>c.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>n.MoonshineForConditionalGeneration,MoonshineModel:()=>n.MoonshineModel,MoonshinePreTrainedModel:()=>n.MoonshinePreTrainedModel,MoonshineProcessor:()=>g.MoonshineProcessor,MptForCausalLM:()=>n.MptForCausalLM,MptModel:()=>n.MptModel,MptPreTrainedModel:()=>n.MptPreTrainedModel,MultiModalityCausalLM:()=>n.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>n.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>n.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>n.MusicgenForConditionalGeneration,MusicgenModel:()=>n.MusicgenModel,MusicgenPreTrainedModel:()=>n.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>n.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>n.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>n.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>n.NeoBertForTokenClassification,NeoBertModel:()=>n.NeoBertModel,NeoBertPreTrainedModel:()=>n.NeoBertPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NoBadWordsLogitsProcessor:()=>v.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>v.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>n.NomicBertModel,NomicBertPreTrainedModel:()=>n.NomicBertPreTrainedModel,NougatImageProcessor:()=>m.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>n.OPTForCausalLM,OPTModel:()=>n.OPTModel,OPTPreTrainedModel:()=>n.OPTPreTrainedModel,ObjectDetectionPipeline:()=>t.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>n.Olmo2ForCausalLM,Olmo2Model:()=>n.Olmo2Model,Olmo2PreTrainedModel:()=>n.Olmo2PreTrainedModel,OlmoForCausalLM:()=>n.OlmoForCausalLM,OlmoModel:()=>n.OlmoModel,OlmoPreTrainedModel:()=>n.OlmoPreTrainedModel,OpenELMForCausalLM:()=>n.OpenELMForCausalLM,OpenELMModel:()=>n.OpenELMModel,OpenELMPreTrainedModel:()=>n.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>m.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>n.OwlViTForObjectDetection,OwlViTImageProcessor:()=>m.OwlViTImageProcessor,OwlViTModel:()=>n.OwlViTModel,OwlViTPreTrainedModel:()=>n.OwlViTPreTrainedModel,OwlViTProcessor:()=>g.OwlViTProcessor,Owlv2ForObjectDetection:()=>n.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>m.Owlv2ImageProcessor,Owlv2Model:()=>n.Owlv2Model,Owlv2PreTrainedModel:()=>n.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>n.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>n.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>g.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>n.PatchTSMixerForPrediction,PatchTSMixerModel:()=>n.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>n.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>n.PatchTSTForPrediction,PatchTSTModel:()=>n.PatchTSTModel,PatchTSTPreTrainedModel:()=>n.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>n.Phi3ForCausalLM,Phi3Model:()=>n.Phi3Model,Phi3PreTrainedModel:()=>n.Phi3PreTrainedModel,Phi3VForCausalLM:()=>n.Phi3VForCausalLM,Phi3VImageProcessor:()=>m.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>n.Phi3VPreTrainedModel,Phi3VProcessor:()=>g.Phi3VProcessor,PhiForCausalLM:()=>n.PhiForCausalLM,PhiModel:()=>n.PhiModel,PhiPreTrainedModel:()=>n.PhiPreTrainedModel,Pipeline:()=>t.Pipeline,PreTrainedModel:()=>n.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>s.PretrainedConfig,PretrainedMixin:()=>n.PretrainedMixin,Processor:()=>_.Processor,PvtForImageClassification:()=>n.PvtForImageClassification,PvtImageProcessor:()=>m.PvtImageProcessor,PvtModel:()=>n.PvtModel,PvtPreTrainedModel:()=>n.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>n.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>n.PyAnnoteModel,PyAnnotePreTrainedModel:()=>n.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>g.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>n.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>t.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>n.Qwen2ForCausalLM,Qwen2Model:()=>n.Qwen2Model,Qwen2PreTrainedModel:()=>n.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>n.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>m.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>n.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>g.Qwen2VLProcessor,Qwen3ForCausalLM:()=>n.Qwen3ForCausalLM,Qwen3Model:()=>n.Qwen3Model,Qwen3PreTrainedModel:()=>n.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>n.RFDetrForObjectDetection,RFDetrModel:()=>n.RFDetrModel,RFDetrObjectDetectionOutput:()=>n.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>n.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>n.RTDetrForObjectDetection,RTDetrImageProcessor:()=>m.RTDetrImageProcessor,RTDetrModel:()=>n.RTDetrModel,RTDetrObjectDetectionOutput:()=>n.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>n.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>n.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>n.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>n.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>n.RTDetrV2PreTrainedModel,RawAudio:()=>i.RawAudio,RawImage:()=>a.RawImage,RawVideo:()=>o.RawVideo,RawVideoFrame:()=>o.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>v.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>n.ResNetForImageClassification,ResNetModel:()=>n.ResNetModel,ResNetPreTrainedModel:()=>n.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>n.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>n.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>n.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>n.RoFormerForTokenClassification,RoFormerModel:()=>n.RoFormerModel,RoFormerPreTrainedModel:()=>n.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>n.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>n.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>n.RobertaForSequenceClassification,RobertaForTokenClassification:()=>n.RobertaForTokenClassification,RobertaModel:()=>n.RobertaModel,RobertaPreTrainedModel:()=>n.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>m.SamImageProcessor,SamImageSegmentationOutput:()=>n.SamImageSegmentationOutput,SamModel:()=>n.SamModel,SamPreTrainedModel:()=>n.SamPreTrainedModel,SamProcessor:()=>g.SamProcessor,SapiensForDepthEstimation:()=>n.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>n.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>n.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>n.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>c.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>m.SegformerFeatureExtractor,SegformerForImageClassification:()=>n.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>n.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>m.SegformerImageProcessor,SegformerModel:()=>n.SegformerModel,SegformerPreTrainedModel:()=>n.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>n.Seq2SeqLMOutput,SequenceClassifierOutput:()=>n.SequenceClassifierOutput,SiglipImageProcessor:()=>m.SiglipImageProcessor,SiglipModel:()=>n.SiglipModel,SiglipPreTrainedModel:()=>n.SiglipPreTrainedModel,SiglipTextModel:()=>n.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>n.SiglipVisionModel,SmolLM3ForCausalLM:()=>n.SmolLM3ForCausalLM,SmolLM3Model:()=>n.SmolLM3Model,SmolLM3PreTrainedModel:()=>n.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>n.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>m.SmolVLMImageProcessor,SmolVLMProcessor:()=>g.SmolVLMProcessor,SnacDecoderModel:()=>n.SnacDecoderModel,SnacEncoderModel:()=>n.SnacEncoderModel,SnacFeatureExtractor:()=>c.SnacFeatureExtractor,SnacModel:()=>n.SnacModel,SnacPreTrainedModel:()=>n.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>c.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>n.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>n.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>n.SpeechT5HifiGan,SpeechT5Model:()=>n.SpeechT5Model,SpeechT5PreTrainedModel:()=>n.SpeechT5PreTrainedModel,SpeechT5Processor:()=>g.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>n.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>n.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>n.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>n.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>n.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>n.StableLmForCausalLM,StableLmModel:()=>n.StableLmModel,StableLmPreTrainedModel:()=>n.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>n.Starcoder2ForCausalLM,Starcoder2Model:()=>n.Starcoder2Model,Starcoder2PreTrainedModel:()=>n.Starcoder2PreTrainedModel,StoppingCriteria:()=>y.StoppingCriteria,StoppingCriteriaList:()=>y.StoppingCriteriaList,StyleTextToSpeech2Model:()=>n.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>n.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>t.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>v.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>n.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>m.Swin2SRImageProcessor,Swin2SRModel:()=>n.Swin2SRModel,Swin2SRPreTrainedModel:()=>n.Swin2SRPreTrainedModel,SwinForImageClassification:()=>n.SwinForImageClassification,SwinForSemanticSegmentation:()=>n.SwinForSemanticSegmentation,SwinModel:()=>n.SwinModel,SwinPreTrainedModel:()=>n.SwinPreTrainedModel,T5ForConditionalGeneration:()=>n.T5ForConditionalGeneration,T5Model:()=>n.T5Model,T5PreTrainedModel:()=>n.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>n.TableTransformerForObjectDetection,TableTransformerModel:()=>n.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>n.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>n.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>v.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>t.Text2TextGenerationPipeline,TextClassificationPipeline:()=>t.TextClassificationPipeline,TextGenerationPipeline:()=>t.TextGenerationPipeline,TextStreamer:()=>b.TextStreamer,TextToAudioPipeline:()=>t.TextToAudioPipeline,TokenClassificationPipeline:()=>t.TokenClassificationPipeline,TokenClassifierOutput:()=>n.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TopKLogitsWarper:()=>v.TopKLogitsWarper,TopPLogitsWarper:()=>v.TopPLogitsWarper,TrOCRForCausalLM:()=>n.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>n.TrOCRPreTrainedModel,TranslationPipeline:()=>t.TranslationPipeline,UltravoxModel:()=>n.UltravoxModel,UltravoxPreTrainedModel:()=>n.UltravoxPreTrainedModel,UltravoxProcessor:()=>g.UltravoxProcessor,UniSpeechForCTC:()=>n.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>n.UniSpeechForSequenceClassification,UniSpeechModel:()=>n.UniSpeechModel,UniSpeechPreTrainedModel:()=>n.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>n.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>n.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>n.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>n.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>n.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>g.VLChatProcessor,VLMImageProcessor:()=>m.VLMImageProcessor,ViTFeatureExtractor:()=>m.ViTFeatureExtractor,ViTForImageClassification:()=>n.ViTForImageClassification,ViTImageProcessor:()=>m.ViTImageProcessor,ViTMAEModel:()=>n.ViTMAEModel,ViTMAEPreTrainedModel:()=>n.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>n.ViTMSNForImageClassification,ViTMSNModel:()=>n.ViTMSNModel,ViTMSNPreTrainedModel:()=>n.ViTMSNPreTrainedModel,ViTModel:()=>n.ViTModel,ViTPreTrainedModel:()=>n.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>n.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>n.VitMatteForImageMatting,VitMatteImageProcessor:()=>m.VitMatteImageProcessor,VitMattePreTrainedModel:()=>n.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>n.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>m.VitPoseImageProcessor,VitPosePreTrainedModel:()=>n.VitPosePreTrainedModel,VitsModel:()=>n.VitsModel,VitsModelOutput:()=>n.VitsModelOutput,VitsPreTrainedModel:()=>n.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,VoxtralForConditionalGeneration:()=>n.VoxtralForConditionalGeneration,VoxtralProcessor:()=>g.VoxtralProcessor,Wav2Vec2BertForCTC:()=>n.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>n.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>n.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>n.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>c.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>n.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>n.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>n.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>n.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>n.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>g.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>g.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>n.WavLMForAudioFrameClassification,WavLMForCTC:()=>n.WavLMForCTC,WavLMForSequenceClassification:()=>n.WavLMForSequenceClassification,WavLMForXVector:()=>n.WavLMForXVector,WavLMModel:()=>n.WavLMModel,WavLMPreTrainedModel:()=>n.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>c.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>n.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>n.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>c.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>n.WhisperForConditionalGeneration,WhisperModel:()=>n.WhisperModel,WhisperPreTrainedModel:()=>n.WhisperPreTrainedModel,WhisperProcessor:()=>g.WhisperProcessor,WhisperTextStreamer:()=>b.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>v.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>n.XLMForQuestionAnswering,XLMForSequenceClassification:()=>n.XLMForSequenceClassification,XLMForTokenClassification:()=>n.XLMForTokenClassification,XLMModel:()=>n.XLMModel,XLMPreTrainedModel:()=>n.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>n.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>n.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>n.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>n.XLMRobertaForTokenClassification,XLMRobertaModel:()=>n.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>n.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>n.XLMWithLMHeadModel,XVectorOutput:()=>n.XVectorOutput,YolosFeatureExtractor:()=>m.YolosFeatureExtractor,YolosForObjectDetection:()=>n.YolosForObjectDetection,YolosImageProcessor:()=>m.YolosImageProcessor,YolosModel:()=>n.YolosModel,YolosObjectDetectionOutput:()=>n.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>n.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>t.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>t.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>t.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>t.ZeroShotObjectDetectionPipeline,bankers_round:()=>u.bankers_round,cat:()=>l.cat,cos_sim:()=>u.cos_sim,dot:()=>u.dot,dynamic_time_warping:()=>u.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getCacheShapes:()=>s.getCacheShapes,hamming:()=>i.hamming,hanning:()=>i.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>u.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>a.load_image,load_video:()=>o.load_video,log_softmax:()=>u.log_softmax,magnitude:()=>u.magnitude,matmul:()=>l.matmul,max:()=>u.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>u.medianFilter,mel_filter_bank:()=>i.mel_filter_bank,min:()=>u.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>u.permute_data,pipeline:()=>t.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>i.read_audio,rfft:()=>l.rfft,round:()=>u.round,slice:()=>l.slice,softmax:()=>u.softmax,spectrogram:()=>i.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>i.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=jc(
/*! ./env.js */
"./src/env.js"),t=jc(
/*! ./pipelines.js */
"./src/pipelines.js"),n=jc(
/*! ./models.js */
"./src/models.js"),r=jc(
/*! ./tokenizers.js */
"./src/tokenizers.js"),s=jc(
/*! ./configs.js */
"./src/configs.js"),i=jc(
/*! ./utils/audio.js */
"./src/utils/audio.js"),a=jc(
/*! ./utils/image.js */
"./src/utils/image.js"),o=jc(
/*! ./utils/video.js */
"./src/utils/video.js"),l=jc(
/*! ./utils/tensor.js */
"./src/utils/tensor.js"),u=jc(
/*! ./utils/maths.js */
"./src/utils/maths.js"),d=jc(
/*! ./base/feature_extraction_utils.js */
"./src/base/feature_extraction_utils.js"),c=jc(
/*! ./models/feature_extractors.js */
"./src/models/feature_extractors.js"),p=jc(
/*! ./models/auto/feature_extraction_auto.js */
"./src/models/auto/feature_extraction_auto.js"),h=jc(
/*! ./base/image_processors_utils.js */
"./src/base/image_processors_utils.js"),m=jc(
/*! ./models/image_processors.js */
"./src/models/image_processors.js"),f=jc(
/*! ./models/auto/image_processing_auto.js */
"./src/models/auto/image_processing_auto.js"),_=jc(
/*! ./base/processing_utils.js */
"./src/base/processing_utils.js"),g=jc(
/*! ./models/processors.js */
"./src/models/processors.js"),w=jc(
/*! ./models/auto/processing_auto.js */
"./src/models/auto/processing_auto.js"),b=jc(
/*! ./generation/streamers.js */
"./src/generation/streamers.js"),y=jc(
/*! ./generation/stopping_criteria.js */
"./src/generation/stopping_criteria.js"),v=jc(
/*! ./generation/logits_process.js */
"./src/generation/logits_process.js")})();var Vc=Rc.AutoTokenizer,Gc=Rc.TextStreamer,qc=Rc.env,Uc=Rc.pipeline;export{Vc as AutoTokenizer,Gc as TextStreamer,qc as env,Uc as pipeline};
